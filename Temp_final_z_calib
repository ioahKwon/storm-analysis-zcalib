{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.9"
    },
    "colab": {
      "name": "Final : dao3d_zcal.ipynb_202105",
      "provenance": [],
      "collapsed_sections": [
        "gDs5HYDIZoTT"
      ],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ioahKwon/storm-analysis-zcalib/blob/main/Temp_final_z_calib\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5qoW4QbcgjYb"
      },
      "source": [
        "# ◈ **This ipynb file was made by IOAH, SNU GSCST.** ◈\n",
        "\n",
        "Version 1.0.0 (2021. 05. 06.)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GSRTv9bRdxgx"
      },
      "source": [
        "### Z Calibration Curves for 3D-DAOSTORM (and sCMOS).\n",
        "\n",
        "In this example we are trying to determine the coefficients $w_o,c,d,A,B,C,D$ in this equation:\n",
        "\n",
        "\\begin{equation*}\n",
        "W_{x,y} = w_o \\sqrt{1 + \\left(\\frac{z-c}{d}\\right)^2 + A\\left(\\frac{z-c}{d}\\right)^3 + B\\left(\\frac{z-c}{d}\\right)^4 + C\\left(\\frac{z-c}{d}\\right)^5 + D\\left(\\frac{z-c}{d}\\right)^6}\n",
        "\\end{equation*}\n",
        "\n",
        "This is a modified form of a typical microscope defocusing curve. $W_x$, $W_y$ are the widths of the localization as measured by 3D-DAOSTORM and $z$ is the localization $z$ offset in $um$.\n",
        "\n",
        "See also [Huang et al, Science, 2008](http://dx.doi.org/10.1126/science.1153529).\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XfK4fmpcdxgy"
      },
      "source": [
        "## **1) Calibration : Configuration**\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8RBg8iiDhEeR"
      },
      "source": [
        "### ① Setting 1 : Getting Data and Storm Analysis from google drive & github."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1PqjCijoYJos",
        "outputId": "4631a7eb-0448-421a-904d-626d9530f6f7"
      },
      "source": [
        "# FIXME: This approach is very brittle. There would seem to be several\n",
        "#        solutions, none of which I was able to figure out how to actually\n",
        "#        implement.\n",
        "#\n",
        "#        1. Query for the name and directory of the installed .egg file.\n",
        "#        2. Don't install project, just add it's location to Python's\n",
        "#           module search path.\n",
        "#\n",
        "import sys\n",
        "\n",
        "# Test to see if we need to install storm-analysis or if we already did this.\n",
        "try:\n",
        "  import storm_analysis\n",
        "  \n",
        "except ModuleNotFoundError:\n",
        "\n",
        "  # Install SCONS and FFTW3 C library.\n",
        "  !apt install scons\n",
        "  !apt install libfftw3-dev\n",
        "\n",
        "  # Get latest version of storm-analysis.\n",
        "  # original : !git clone https://github.com/ZhuangLab/storm-analysis.git\n",
        "\n",
        "  # GIT Hub : https://github.com/ioahKwon/\n",
        "  # !git clone https://github.com/ioahKwon/storm-analysis-IOAH.git # IOAH Version (2021.05.12.)\n",
        "  !git clone https://github.com/KimLab-SNU/storm-analysis-kimlab.git # IOAH Version (last updated: 2021. 05. 12.)\n",
        "\n",
        "  # Change to directory and compile.\n",
        "  %cd storm-analysis-kimlab\n",
        "  !scons\n",
        "\n",
        "  # Install storm-analysis project.\n",
        "  !{sys.executable} setup.py install\n",
        "  \n",
        "  # Manually add the installed storm-analysis project to the path.\n",
        "  sys.path.append('/usr/local/lib/python3.6/dist-packages/storm_analysis-2.1-py3.6.egg')\n",
        "\n",
        "  # Install dependencies.\n",
        "  !{sys.executable} -m pip install tifffile\n",
        "\n",
        "  # Return to parent directory.\n",
        "  %cd ..\n",
        "\n",
        "# These are for diagnostics.\n",
        "!pwd\n",
        "!ls"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content\n",
            "calibration.hdf5  gdrive\t     measure.hdf5  sample_data\n",
            "calibration.txt   measure_copy.hdf5  measure.txt   storm-analysis-kimlab\n",
            "calibration.xml   measured_z.txt     measure.xml   wobble.txt\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PvEmzQ7lYLxt",
        "outputId": "b0040db9-7341-4354-a7ca-2a4c9cee182a"
      },
      "source": [
        "# Warn user to restart kernel in order for storm-analysis to load properly. \n",
        "# The problem is that running Python might not be able to find the installed \n",
        "# library if isn't where we expected it to be.\n",
        "#\n",
        "try:\n",
        "  import storm_analysis\n",
        "  \n",
        "except ModuleNotFoundError:\n",
        "  print(\"Storm-analysis not found!\")\n",
        "  print(\"Restart Python kernel before continuing!\")\n",
        "  \n",
        "else:\n",
        "  for elt in sys.path:\n",
        "    if \"storm\" in elt:\n",
        "      print(elt)"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/storm_analysis-2.2-py3.7.egg\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dzwyUZEBYMN_",
        "outputId": "dc9fd70d-ec83-41d7-98e8-b41335cf7ef6"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0bWdlfcnbNzY",
        "outputId": "3db5a642-2c4d-46f3-91cc-616083d9e72d"
      },
      "source": [
        "# Data path\n",
        "data_path = \"/content/gdrive/My Drive/data/20210326\"\n",
        "\n",
        "# Load sample z_offsets.txt file. In this example every frame is valid.\n",
        "import numpy\n",
        "import os\n",
        "import tifffile as tiff\n",
        "\n",
        "# Z offsets profile\n",
        "######z_offsets = numpy.loadtxt(\"z_offsets.txt\")\n",
        "address_z_offsets = os.path.join(data_path, \"z_offsets.txt\")\n",
        "print(\"Location of z_offsets : \", address_z_offsets)\n",
        "z_offsets = numpy.loadtxt(address_z_offsets)\n",
        "######print(z_offsets)\n",
        "\n",
        "# Bead Locations\n",
        "address_bead_locs = os.path.join(data_path, \"bead_locs.txt\")\n",
        "print(\"Location of bead_locs : \", address_bead_locs)\n",
        "\n",
        "bead_locs = numpy.loadtxt(address_bead_locs)\n",
        "print(bead_locs)\n",
        "\n",
        "\n",
        "# Tiff file\n",
        "print(\"\\n\")\n",
        "tif_file = os.path.join(data_path,\"obSTORM_3DPSF_RedBead175nmDia_f200Cyl_z1_m1p8um_30nm_1p8um_1_combined.tif\" )\n",
        "print(\"tif_file : \",tif_file)\n",
        "image = tiff.imread(tif_file)\n",
        "print(image)"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Location of z_offsets :  /content/gdrive/My Drive/data/20210326/z_offsets.txt\n",
            "Location of bead_locs :  /content/gdrive/My Drive/data/20210326/bead_locs.txt\n",
            "[[ 23.  24.]\n",
            " [ 68.  24.]\n",
            " [113.  24.]\n",
            " [158.  24.]]\n",
            "\n",
            "\n",
            "tif_file :  /content/gdrive/My Drive/data/20210326/obSTORM_3DPSF_RedBead175nmDia_f200Cyl_z1_m1p8um_30nm_1p8um_1_combined.tif\n",
            "[[[4367 4429 4336 ... 4464 4421 4399]\n",
            "  [4360 4332 4314 ... 4330 4379 4481]\n",
            "  [4307 4378 4313 ... 4364 4406 4370]\n",
            "  ...\n",
            "  [4247 4313 4285 ... 5148 5281 5463]\n",
            "  [4360 4302 4283 ... 5597 5083 5410]\n",
            "  [4237 4231 4233 ... 5614 5315 5148]]\n",
            "\n",
            " [[4307 4445 4365 ... 4512 4596 4596]\n",
            "  [4372 4283 4342 ... 4355 4391 4398]\n",
            "  [4370 4323 4265 ... 4393 4399 4348]\n",
            "  ...\n",
            "  [4194 4256 4333 ... 5228 5281 5023]\n",
            "  [4301 4286 4264 ... 5403 5545 5414]\n",
            "  [4299 4464 4237 ... 5241 5300 5194]]\n",
            "\n",
            " [[4344 4498 4237 ... 4403 4628 4448]\n",
            "  [4263 4242 4364 ... 4442 4382 4458]\n",
            "  [4423 4399 4204 ... 4457 4426 4463]\n",
            "  ...\n",
            "  [4303 4309 4291 ... 5386 5344 5376]\n",
            "  [4228 4297 4311 ... 5436 5470 5350]\n",
            "  [4313 4284 4392 ... 5759 5882 5330]]\n",
            "\n",
            " ...\n",
            "\n",
            " [[4576 4550 4748 ... 5764 5982 5802]\n",
            "  [4482 4684 4602 ... 5506 5797 5786]\n",
            "  [4524 4469 4483 ... 5573 6006 5783]\n",
            "  ...\n",
            "  [4331 4301 4207 ... 4286 4324 4288]\n",
            "  [4401 4353 4346 ... 4369 4316 4329]\n",
            "  [4326 4333 4333 ... 4273 4348 4293]]\n",
            "\n",
            " [[4745 4796 4621 ... 5581 5700 6128]\n",
            "  [4508 4434 4745 ... 5800 5854 5957]\n",
            "  [4644 4321 4600 ... 5620 5736 5871]\n",
            "  ...\n",
            "  [4258 4273 4329 ... 4243 4342 4317]\n",
            "  [4195 4357 4462 ... 4265 4255 4374]\n",
            "  [4302 4402 4317 ... 4286 4262 4318]]\n",
            "\n",
            " [[4626 4645 4563 ... 5880 5769 5960]\n",
            "  [4556 4537 4439 ... 5893 5776 5749]\n",
            "  [4703 4467 4542 ... 5513 6029 5743]\n",
            "  ...\n",
            "  [4364 4362 4367 ... 4299 4321 4413]\n",
            "  [4359 4298 4191 ... 4239 4199 4312]\n",
            "  [4374 4266 4359 ... 4345 4285 4276]]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "St3vYQ65dxg0"
      },
      "source": [
        "### ② Setting 2 : Parameter Settings."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NoerpluJdxg0"
      },
      "source": [
        "Set parameters for 3D-DAOSTORM analysis. Note the analysis is done using the `3d` PSF model, a Gaussian with independent widths in X/Y."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lZWLxxH2dTxr",
        "outputId": "6296fcd1-510a-4b9e-f08f-f5f1682adeb1"
      },
      "source": [
        "import storm_analysis.sa_library.parameters as params\n",
        "\n",
        "# Load the parameters\n",
        "params = params.ParametersDAO()\n",
        "\n",
        "# Analysis parameters\n",
        "\n",
        "###########################\n",
        "###  Essential Parameter ##\n",
        "###########################\n",
        "pixel_size = 144.5                                                # CCD pixel size (in nm)\n",
        "max_z = 2\n",
        "min_z = -2\n",
        "z_step = 0.001\n",
        "###########################\n",
        "\n",
        "\n",
        "params.changeAttr(\"pixel_size\", pixel_size)                       # CCD pixel size (in nm)\n",
        "params.changeAttr(\"max_frame\", -1)                                # The frame to stop analysis on, -1 = analyze to the end of the film.\n",
        "params.changeAttr(\"start_frame\", -1)                              # The frame to start analysis on, -1 = start at the beginning of the film\n",
        "params.changeAttr(\"max_z\", max_z)                                  # Maximum z value for z fitting, specified in um. ( z_range )\n",
        "params.changeAttr(\"min_z\", min_z)                                  # Minimum z value for z fitting, specified in um. ( z_range )\n",
        "params.changeAttr('verbosity', 1)                                 # Frequency in frames at which to provide feedback. The default is every frame (verbosity = 1). This should be an integer >= 1.\n",
        "params.changeAttr('static_background_estimate', 0)                # If this is set, and set to a number greater than 0, then the analysis will estimate the background by using the average over this number of frames.\n",
        "                                                                    # If this is not set, or set to 0, the background is estimated separately for each frame.\n",
        "# Tracking parameters\n",
        "params.changeAttr(\"descriptor\", 1)                                # Tracking parameter, frame descriptor string :\n",
        "                                                                    # 0 - activation frame\n",
        "                                                                    # 1 - non-specific frame\n",
        "                                                                    # 2 - channel1 frame\n",
        "                                                                    # 3 - channel2 frame\n",
        "                                                                    # 4 - etc..\n",
        "\n",
        "params.changeAttr(\"radius\", 0.5)                                  # Radius for matching peaks from frame to frame. Localizations that are closer than\n",
        "                                                                    # this value (in pixels) in adjacent frames (ignoring activation frames) are assumed\n",
        "                                                                    # to come from the same emitter and are averaged together to create a (hopefully) \n",
        "                                                                    # more accurately localized emitter. If this is zero then no matching will be done\n",
        "                                                                    # if it is 0, don't do tracking.\n",
        "                                                                  # Maximum distance for an object to be in a track in pixels. \n",
        "\n",
        "# Drift Correction parameters\n",
        "params.changeAttr(\"d_scale\", 2)                                   # if your data is 256x256 pixels then the drift-correction will create 512x512 sub-STORM \n",
        "                                                                    # images (for d_scale = 2) and then attempt to correlate these images to each other to calculate the drift.\n",
        "                                                                    # 2 is usually a good choice.\n",
        "params.changeAttr(\"drift_correction\", 0)                          # Do drift correction, 0 ='No'\n",
        "params.changeAttr(\"z_correction\", 0)                              # Do z drift correction, 0 = 'No'\n",
        "params.changeAttr(\"frame_step\", 100)                              # Number of frames in each (drift correction) sub-STORM image # 500\n",
        "\n",
        "\n",
        "# Fitting parameters\n",
        "\n",
        "sigma = 1.5\n",
        "\n",
        "params.changeAttr(\"background_sigma\", 8.0)                        # Background filter sigma, this is the sigma of a 2D gaussian to convolve the data in order to estimate the background.\n",
        "\n",
        "params.changeAttr(\"fftw_estimate\", 0)                             # FFTW should estimate the best FFT plan instead of measuring which is best. This \n",
        "                                                                    # can help speed the analysis of short movies that are very large in XY. 0 = (default) \n",
        "                                                                    # FFTW will measure the best FFT plan. 1 = FFTW will estimate the best FFT plan.\n",
        "\n",
        "params.changeAttr(\"fit_error_model\", \"MLE\")                       # Specify which fitting error model to use. # Other Options : ALS(Anscombe Least Squares), LS(Least Squares), DWLS(Data Weighted Least Squares), FWLS(Fit Weighted Least Squares)\n",
        "params.changeAttr(\"find_max_radius\", 6,  node_type='int')         # To be a peak it must be the maximum value within this radius (in pixels).\n",
        "                                                                    # Using a large find max radius -> reduces peak splitting.\n",
        "params.changeAttr(\"iterations\", 20)                               # Maximum number of iterations for new peak finding.\n",
        "params.changeAttr(\"sigma\", sigma)                                  # This is the estimated sigma of the PSF in pixels.\n",
        "                                                                    # It is used in most of the analysis approaches as a measure of the peak to peak distance at which peak fits do not substantially effect each other.\n",
        "                                                                    # In most of the analysis approaches, if two peaks are closer than\n",
        "                                                                    #\tthis distance then the dimmer one will be discarded.\n",
        "params.changeAttr('sigma_range', [0.5*sigma, 5.0*sigma])         # A two element array that specifies the minimum and maximum sigma values to allow when fitting for the peak width. \n",
        "                                                                    # If this is not specified the default is [0.5 * sigma, 5.0 * sigma].\n",
        "\n",
        "\n",
        "params.changeAttr(\"threshold\", 6 )                                # Threshold for a maximum to considered a peak.\n",
        "                                                                    # This is the threshold for peak finding in units of signal to background. A\n",
        "                                                                    # value of 3 for example corresponds to only selecting peaks with an (estimated)\n",
        "                                                                    # signal to background ratio of 3.\n",
        "                                                                    # You probably want a value of at least 5.\n",
        "\n",
        "# Parameters that are common to 3D-DAOSTORM and sCMOS\n",
        "params.changeAttr(\"cutoff\", 2)                                    # Max allowed distance from the wx/wy versus Z curve, units unclear.\n",
        "params.changeAttr(\"do_zfit\", 0)                                   # Do z fitting (or not), only relevant for \"3d\" fitting (see \"model\" parameter).\n",
        "params.changeAttr(\"foreground_sigma\", 1.5)                        # Foreground filter sigma, this is the sigma of a 2D gaussian to convolve the data with\n",
        "                                                                    # prior to peak identification. When your data has a low SNR this can help for peak\n",
        "                                                                    # finding. For optimal sensitivity it should be the same as the expected sigma for your peaks.\n",
        "                                                                    # If you set it to zero (or comment it out) then this will not be performed, which can make the analysis faster.\n",
        "params.changeAttr(\"model\", \"3d\")                                  # Options: 2dfixed, 2d, 3d, Z\n",
        "                                                                    # 2dfixed - fixed sigma 2d gaussian fitting.\n",
        "                                                                    # 2d - variable sigma 2d gaussian fitting.\n",
        "                                                                    # 3d - x, y sigma are independently variable, z will be fit after peak fitting.\n",
        "                                                                    # Z - x, y sigma depend on z, z is fit as part of peak fitting.\n",
        "params.changeAttr(\"roi_size\", 28)                                 # This is the size of the fitting ROI in pixels. If it is not specified than the value\n",
        "                                                                    # will be calculated based on the sigma parameter value and the fitting model type\n",
        "params.changeAttr(\"z_value\", 0)                                   # The starting z value for fitting. If this is not specified it defaults to 0.0.\n",
        "params.changeAttr(\"z_step\", z_step)                                # Step size of Z search in microns.\n",
        "                                                                    # this is not specified it defaults to 1 nanometer. Units are microns.\n",
        "# Saving Options\n",
        "params.changeAttr('convert_to', \".txt\")                           # Specify what, if any, formats to convert the output HDF5 file into upon completion of the analysis.\n",
        "                                                                    # Options are .bin and .txt.\n",
        "                                                                    # Use a comma separated list if you want both. i.e. \".bin, .txt\".\n",
        "\n",
        "# Wx/Wy vs Z parameters. Units are nanometers or dimensionless                                                                    \n",
        "params.changeAttr(\"wxA\", 0)\n",
        "params.changeAttr(\"wxB\", 0)\n",
        "params.changeAttr(\"wxC\", 0)\n",
        "params.changeAttr(\"wxD\", 0)\n",
        "params.changeAttr(\"wx_c\", 0)\n",
        "params.changeAttr(\"wx_d\", 0)\n",
        "params.changeAttr(\"wx_wo\", 0)\n",
        "params.changeAttr(\"wyA\", 0)\n",
        "params.changeAttr(\"wyB\", 0)\n",
        "params.changeAttr(\"wyC\", 0)\n",
        "params.changeAttr(\"wyD\", 0)\n",
        "params.changeAttr(\"wy_c\", 0.0)\n",
        "params.changeAttr(\"wy_d\", 0)\n",
        "params.changeAttr(\"wy_wo\", 0)\n",
        "\n",
        "\n",
        "# Parameters that are specific to 3D-DAOSTORM analysis\n",
        "params.changeAttr(\"camera_gain\", 9.20)                            # 31.3/3.4 # Conversion factor to go from camera ADU to photo-electrons(ADU/photo-electron). Units are ADU/e-, so the camera ADU values will be divided by this number to convert to photo-electrons.\n",
        "#params.changeAttr(\"camera_offset\", 31.3)                          # 4205 This is what the camera reads with the shutter closed. Offset is in units of ADU.\n",
        "params.changeAttr(\"camera_offset\", 4205)\n",
        "\n",
        "# Help : Other parameters or Analysis Settings\n",
        "#print(params.helpAttr('sigma')) # for example. helpAttr(name)\n",
        "#print('\\n')\n",
        "\n",
        "params.prettyPrint()"
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "aoi_radius (int) - None\n",
            "background_sigma (float) - 8.0\n",
            "camera_gain (float) - 9.2\n",
            "camera_offset (float) - 4205\n",
            "convert_to (string) - .txt\n",
            "cutoff (float) - 2\n",
            "d_scale (int) - 2\n",
            "descriptor (string) - 1\n",
            "do_zfit (int) - 0\n",
            "drift_correction (int) - 0\n",
            "fftw_estimate (int) - 0\n",
            "find_max_radius (int) - 6\n",
            "fit_error_model (string) - MLE\n",
            "foreground_sigma (float) - 1.5\n",
            "frame_step (int) - 100\n",
            "iterations (int) - 20\n",
            "max_frame (int) - -1\n",
            "max_gap (int) - None\n",
            "max_z (float) - 2\n",
            "min_z (float) - -2\n",
            "model (string) - 3d\n",
            "no_fitting (int) - None\n",
            "peak_locations (filename) - None\n",
            "pixel_size (float) - 144.5\n",
            "radius (float) - 0.5\n",
            "roi_size (int) - 28\n",
            "sigma (float) - 1.5\n",
            "sigma_range (float-array) - [0.75, 7.5]\n",
            "start_frame (int) - -1\n",
            "static_background_estimate (int) - 0\n",
            "threshold (float) - 6\n",
            "verbosity (int) - 1\n",
            "wxA (float) - 0\n",
            "wxB (float) - 0\n",
            "wxC (float) - 0\n",
            "wxD (float) - 0\n",
            "wx_c (float) - 0\n",
            "wx_d (float) - 0\n",
            "wx_wo (float) - 0\n",
            "wyA (float) - 0\n",
            "wyB (float) - 0\n",
            "wyC (float) - 0\n",
            "wyD (float) - 0\n",
            "wy_c (float) - 0.0\n",
            "wy_d (float) - 0\n",
            "wy_wo (float) - 0\n",
            "x_center (int) - None\n",
            "x_start (int) - None\n",
            "x_stop (int) - None\n",
            "y_center (int) - None\n",
            "y_start (int) - None\n",
            "y_stop (int) - None\n",
            "z_correction (int) - 0\n",
            "z_step (float) - 0.001\n",
            "z_value (float) - 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OhU2Ya49dxg0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0d642afe-0c3d-4ba8-a49b-1d5515fd46de"
      },
      "source": [
        "# Set for a single iteration, we don't want multiple iterations of peak finding\n",
        "# as this could cause stretched peaks to get split in half.\n",
        "params.changeAttr(\"iterations\", 1)\n",
        "\n",
        "# Use a large find max radius. This also reduces peak splitting.\n",
        "params.changeAttr(\"find_max_radius\", 10)\n",
        "\n",
        "# Use a higher threshold so that we don't get the dimmer localizations.\n",
        "params.changeAttr(\"threshold\", 18)\n",
        "\n",
        "# Don't do tracking or drift correction.\n",
        "params.changeAttr(\"radius\", 0.0)\n",
        "params.changeAttr(\"drift_correction\", 0)\n",
        "\n",
        "# Save the changed parameters.\n",
        "params.toXMLFile(\"calibration.xml\")\n",
        "\n",
        "params.prettyPrint()\n"
      ],
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "aoi_radius (int) - None\n",
            "background_sigma (float) - 8.0\n",
            "camera_gain (float) - 9.2\n",
            "camera_offset (float) - 4205\n",
            "convert_to (string) - .txt\n",
            "cutoff (float) - 2\n",
            "d_scale (int) - 2\n",
            "descriptor (string) - 1\n",
            "do_zfit (int) - 0\n",
            "drift_correction (int) - 0\n",
            "fftw_estimate (int) - 0\n",
            "find_max_radius (int) - 10\n",
            "fit_error_model (string) - MLE\n",
            "foreground_sigma (float) - 1.5\n",
            "frame_step (int) - 100\n",
            "iterations (int) - 1\n",
            "max_frame (int) - -1\n",
            "max_gap (int) - None\n",
            "max_z (float) - 2\n",
            "min_z (float) - -2\n",
            "model (string) - 3d\n",
            "no_fitting (int) - None\n",
            "peak_locations (filename) - None\n",
            "pixel_size (float) - 144.5\n",
            "radius (float) - 0.0\n",
            "roi_size (int) - 28\n",
            "sigma (float) - 1.5\n",
            "sigma_range (float-array) - [0.75, 7.5]\n",
            "start_frame (int) - -1\n",
            "static_background_estimate (int) - 0\n",
            "threshold (float) - 18\n",
            "verbosity (int) - 1\n",
            "wxA (float) - 0\n",
            "wxB (float) - 0\n",
            "wxC (float) - 0\n",
            "wxD (float) - 0\n",
            "wx_c (float) - 0\n",
            "wx_d (float) - 0\n",
            "wx_wo (float) - 0\n",
            "wyA (float) - 0\n",
            "wyB (float) - 0\n",
            "wyC (float) - 0\n",
            "wyD (float) - 0\n",
            "wy_c (float) - 0.0\n",
            "wy_d (float) - 0\n",
            "wy_wo (float) - 0\n",
            "x_center (int) - None\n",
            "x_start (int) - None\n",
            "x_stop (int) - None\n",
            "y_center (int) - None\n",
            "y_start (int) - None\n",
            "y_stop (int) - None\n",
            "z_correction (int) - 0\n",
            "z_step (float) - 0.001\n",
            "z_value (float) - 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PedJqWBhheAm"
      },
      "source": [
        "## **2) Calibration : Analyze**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yAs1wUK5kpPR"
      },
      "source": [
        "### ① Analyzing Process"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6wrKdr9-dxg0"
      },
      "source": [
        "Analyze the calibration movie with 3D-DAOSTORM"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZRZZu3ZOdxg1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f2a3751f-0ef3-4f18-92ff-db1f9b96a22c"
      },
      "source": [
        "import os\n",
        "import storm_analysis.daostorm_3d.mufit_analysis as mfit\n",
        "\n",
        "if os.path.exists(\"calibration.hdf5\"):\n",
        "    os.remove(\"calibration.hdf5\")\n",
        "    \n",
        "mfit.analyze(tif_file, \"calibration.hdf5\", \"calibration.xml\")\n"
      ],
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\n",
            "version 2020.07.01\n",
            "\n",
            "Peak finding\n",
            "Frame : (Current Frame) (Added Peaks) (Total Peaks)\n",
            " Removing values < 1.0 in frame 0\n",
            "Frame: 0 4 4\n",
            " Removing values < 1.0 in frame 1\n",
            "Frame: 1 4 8\n",
            " Removing values < 1.0 in frame 2\n",
            "Frame: 2 4 12\n",
            " Removing values < 1.0 in frame 3\n",
            "Frame: 3 4 16\n",
            " Removing values < 1.0 in frame 4\n",
            "Frame: 4 4 20\n",
            " Removing values < 1.0 in frame 5\n",
            "Frame: 5 4 24\n",
            " Removing values < 1.0 in frame 6\n",
            "Frame: 6 4 28\n",
            " Removing values < 1.0 in frame 7\n",
            "Frame: 7 4 32\n",
            " Removing values < 1.0 in frame 8\n",
            "Frame: 8 4 36\n",
            " Removing values < 1.0 in frame 9\n",
            "Frame: 9 4 40\n",
            " Removing values < 1.0 in frame 10\n",
            "Frame: 10 4 44\n",
            " Removing values < 1.0 in frame 11\n",
            "Frame: 11 4 48\n",
            " Removing values < 1.0 in frame 12\n",
            "Frame: 12 4 52\n",
            " Removing values < 1.0 in frame 13\n",
            "Frame: 13 4 56\n",
            " Removing values < 1.0 in frame 14\n",
            "Frame: 14 4 60\n",
            " Removing values < 1.0 in frame 15\n",
            "Frame: 15 4 64\n",
            " Removing values < 1.0 in frame 16\n",
            "Frame: 16 4 68\n",
            " Removing values < 1.0 in frame 17\n",
            "Frame: 17 4 72\n",
            " Removing values < 1.0 in frame 18\n",
            "Frame: 18 4 76\n",
            " Removing values < 1.0 in frame 19\n",
            "Frame: 19 4 80\n",
            " Removing values < 1.0 in frame 20\n",
            "Frame: 20 4 84\n",
            " Removing values < 1.0 in frame 21\n",
            "Frame: 21 4 88\n",
            " Removing values < 1.0 in frame 22\n",
            "Frame: 22 4 92\n",
            " Removing values < 1.0 in frame 23\n",
            "Frame: 23 4 96\n",
            " Removing values < 1.0 in frame 24\n",
            "Frame: 24 4 100\n",
            " Removing values < 1.0 in frame 25\n",
            "Frame: 25 4 104\n",
            " Removing values < 1.0 in frame 26\n",
            "Frame: 26 4 108\n",
            " Removing values < 1.0 in frame 27\n",
            "Frame: 27 4 112\n",
            " Removing values < 1.0 in frame 28\n",
            "Frame: 28 4 116\n",
            " Removing values < 1.0 in frame 29\n",
            "Frame: 29 4 120\n",
            " Removing values < 1.0 in frame 30\n",
            "Frame: 30 4 124\n",
            " Removing values < 1.0 in frame 31\n",
            "Frame: 31 4 128\n",
            " Removing values < 1.0 in frame 32\n",
            "Frame: 32 4 132\n",
            " Removing values < 1.0 in frame 33\n",
            "Frame: 33 4 136\n",
            " Removing values < 1.0 in frame 34\n",
            "Frame: 34 4 140\n",
            " Removing values < 1.0 in frame 35\n",
            "Frame: 35 4 144\n",
            " Removing values < 1.0 in frame 36\n",
            "Frame: 36 4 148\n",
            " Removing values < 1.0 in frame 37\n",
            "Frame: 37 4 152\n",
            " Removing values < 1.0 in frame 38\n",
            "Frame: 38 4 156\n",
            " Removing values < 1.0 in frame 39\n",
            "Frame: 39 4 160\n",
            " Removing values < 1.0 in frame 40\n",
            "Frame: 40 4 164\n",
            " Removing values < 1.0 in frame 41\n",
            "Frame: 41 4 168\n",
            " Removing values < 1.0 in frame 42\n",
            "Frame: 42 4 172\n",
            " Removing values < 1.0 in frame 43\n",
            "Frame: 43 4 176\n",
            " Removing values < 1.0 in frame 44\n",
            "Frame: 44 4 180\n",
            " Removing values < 1.0 in frame 45\n",
            "Frame: 45 4 184\n",
            " Removing values < 1.0 in frame 46\n",
            "Frame: 46 4 188\n",
            " Removing values < 1.0 in frame 47\n",
            "Frame: 47 4 192\n",
            " Removing values < 1.0 in frame 48\n",
            "Frame: 48 4 196\n",
            " Removing values < 1.0 in frame 49\n",
            "Frame: 49 4 200\n",
            " Removing values < 1.0 in frame 50\n",
            "Frame: 50 4 204\n",
            " Removing values < 1.0 in frame 51\n",
            "Frame: 51 4 208\n",
            " Removing values < 1.0 in frame 52\n",
            "Frame: 52 4 212\n",
            " Removing values < 1.0 in frame 53\n",
            "Frame: 53 4 216\n",
            " Removing values < 1.0 in frame 54\n",
            "Frame: 54 4 220\n",
            " Removing values < 1.0 in frame 55\n",
            "Frame: 55 4 224\n",
            " Removing values < 1.0 in frame 56\n",
            "Frame: 56 4 228\n",
            " Removing values < 1.0 in frame 57\n",
            "Frame: 57 4 232\n",
            " Removing values < 1.0 in frame 58\n",
            "Frame: 58 4 236\n",
            " Removing values < 1.0 in frame 59\n",
            "Frame: 59 4 240\n",
            " Removing values < 1.0 in frame 60\n",
            "Frame: 60 4 244\n",
            " Removing values < 1.0 in frame 61\n",
            "Frame: 61 4 248\n",
            " Removing values < 1.0 in frame 62\n",
            "Frame: 62 4 252\n",
            " Removing values < 1.0 in frame 63\n",
            "Frame: 63 4 256\n",
            " Removing values < 1.0 in frame 64\n",
            "Frame: 64 4 260\n",
            " Removing values < 1.0 in frame 65\n",
            "Frame: 65 4 264\n",
            " Removing values < 1.0 in frame 66\n",
            "Frame: 66 4 268\n",
            " Removing values < 1.0 in frame 67\n",
            "Frame: 67 4 272\n",
            " Removing values < 1.0 in frame 68\n",
            "Frame: 68 4 276\n",
            " Removing values < 1.0 in frame 69\n",
            "Frame: 69 4 280\n",
            " Removing values < 1.0 in frame 70\n",
            "Frame: 70 4 284\n",
            " Removing values < 1.0 in frame 71\n",
            "Frame: 71 4 288\n",
            " Removing values < 1.0 in frame 72\n",
            "Frame: 72 4 292\n",
            " Removing values < 1.0 in frame 73\n",
            "Frame: 73 4 296\n",
            " Removing values < 1.0 in frame 74\n",
            "Frame: 74 4 300\n",
            " Removing values < 1.0 in frame 75\n",
            "Frame: 75 4 304\n",
            " Removing values < 1.0 in frame 76\n",
            "Frame: 76 4 308\n",
            " Removing values < 1.0 in frame 77\n",
            "Frame: 77 4 312\n",
            " Removing values < 1.0 in frame 78\n",
            "Frame: 78 4 316\n",
            " Removing values < 1.0 in frame 79\n",
            "Frame: 79 4 320\n",
            " Removing values < 1.0 in frame 80\n",
            "Frame: 80 4 324\n",
            " Removing values < 1.0 in frame 81\n",
            "Frame: 81 4 328\n",
            " Removing values < 1.0 in frame 82\n",
            "Frame: 82 4 332\n",
            " Removing values < 1.0 in frame 83\n",
            "Frame: 83 4 336\n",
            " Removing values < 1.0 in frame 84\n",
            "Frame: 84 4 340\n",
            " Removing values < 1.0 in frame 85\n",
            "Frame: 85 4 344\n",
            " Removing values < 1.0 in frame 86\n",
            "Frame: 86 4 348\n",
            " Removing values < 1.0 in frame 87\n",
            "Frame: 87 4 352\n",
            " Removing values < 1.0 in frame 88\n",
            "Frame: 88 4 356\n",
            " Removing values < 1.0 in frame 89\n",
            "Frame: 89 4 360\n",
            " Removing values < 1.0 in frame 90\n",
            "Frame: 90 4 364\n",
            " Removing values < 1.0 in frame 91\n",
            "Frame: 91 4 368\n",
            " Removing values < 1.0 in frame 92\n",
            "Frame: 92 4 372\n",
            " Removing values < 1.0 in frame 93\n",
            "Frame: 93 4 376\n",
            " Removing values < 1.0 in frame 94\n",
            "Frame: 94 4 380\n",
            " Removing values < 1.0 in frame 95\n",
            "Frame: 95 4 384\n",
            " Removing values < 1.0 in frame 96\n",
            "Frame: 96 4 388\n",
            " Removing values < 1.0 in frame 97\n",
            "Frame: 97 4 392\n",
            " Removing values < 1.0 in frame 98\n",
            "Frame: 98 4 396\n",
            " Removing values < 1.0 in frame 99\n",
            "Frame: 99 4 400\n",
            " Removing values < 1.0 in frame 100\n",
            "Frame: 100 4 404\n",
            " Removing values < 1.0 in frame 101\n",
            "Frame: 101 4 408\n",
            " Removing values < 1.0 in frame 102\n",
            "Frame: 102 4 412\n",
            " Removing values < 1.0 in frame 103\n",
            "Frame: 103 4 416\n",
            " Removing values < 1.0 in frame 104\n",
            "Frame: 104 4 420\n",
            " Removing values < 1.0 in frame 105\n",
            "Frame: 105 4 424\n",
            " Removing values < 1.0 in frame 106\n",
            "Frame: 106 4 428\n",
            " Removing values < 1.0 in frame 107\n",
            "Frame: 107 4 432\n",
            " Removing values < 1.0 in frame 108\n",
            "Frame: 108 4 436\n",
            " Removing values < 1.0 in frame 109\n",
            "Frame: 109 4 440\n",
            " Removing values < 1.0 in frame 110\n",
            "Frame: 110 4 444\n",
            " Removing values < 1.0 in frame 111\n",
            "Frame: 111 4 448\n",
            " Removing values < 1.0 in frame 112\n",
            "Frame: 112 4 452\n",
            " Removing values < 1.0 in frame 113\n",
            "Frame: 113 4 456\n",
            " Removing values < 1.0 in frame 114\n",
            "Frame: 114 4 460\n",
            " Removing values < 1.0 in frame 115\n",
            "Frame: 115 4 464\n",
            " Removing values < 1.0 in frame 116\n",
            "Frame: 116 4 468\n",
            " Removing values < 1.0 in frame 117\n",
            "Frame: 117 4 472\n",
            " Removing values < 1.0 in frame 118\n",
            "Frame: 118 4 476\n",
            " Removing values < 1.0 in frame 119\n",
            "Frame: 119 4 480\n",
            " Removing values < 1.0 in frame 120\n",
            "Frame: 120 4 484\n",
            "\n",
            "Added 484\n",
            "   121 peak finding iterations.\n",
            "\n",
            "   0 fits reset due to Cholesky failure.\n",
            "   0 fits reset due to image margin.\n",
            "   83 fits reset due to negative value in fit function.\n",
            "   0 fits reset due to negative height.\n",
            "   18 fits reset due to non-decreasing error (LM).\n",
            "   0 fits did not converge.\n",
            "   0 fits were lost.\n",
            "   0 peaks lost to proximity filter.\n",
            "   0 peaks lost to low significance.\n",
            "   8987 fitting iterations.\n",
            "\n",
            "Tracking.\n",
            "\n",
            "Checking z values.\n",
            "\n",
            "File format conversions.\n",
            " Converting to text.\n",
            "Converting localizations.\n",
            "\n",
            "Analysis complete\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xthJUiO1dxg1"
      },
      "source": [
        "Check results with overlay images."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "62KBtusqdxg1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 593
        },
        "outputId": "94b8cc8c-0b6a-4d19-f355-c00506f12e25"
      },
      "source": [
        "# Overlay image at z near zero.\n",
        "import storm_analysis.jupyter_examples.overlay_image as overlay_image\n",
        "\n",
        "overlay_image.overlayImage(tif_file, \"calibration.hdf5\", 10)\n",
        "overlay_image.overlayImage(tif_file, \"calibration.hdf5\", 40)\n",
        "overlay_image.overlayImage(tif_file, \"calibration.hdf5\", 70)"
      ],
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6Rhu2kIjd3p5"
      },
      "source": [
        "Creating an image from the analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "t_oDO1s3dpMA",
        "outputId": "c9e148fe-223d-4c8a-a360-ac552522b477"
      },
      "source": [
        "import matplotlib\n",
        "import matplotlib.pyplot as pyplot\n",
        "import storm_analysis.sa_utilities.hdf5_to_image as h5_image\n",
        "\n",
        "#     Create a grayscale image from a HDF5 format localizations file. This will use\n",
        "#    the tracks if available, otherwise it will use the localizations.\n",
        "\n",
        "\n",
        "\"\"\"\n",
        "    Create a grayscale image from a HDF5 format localizations file. This will use\n",
        "    the tracks if available, otherwise it will use the localizations.\n",
        "\n",
        "    h5_name - The name of the HDF5 file.\n",
        "    category - Filter for localizations of this category. The default is all categories.\n",
        "    offsets - List containing [X,Y] offset of the image origin.  The default is no offset.\n",
        "    scale - The 'zoom' level of the output image, i.e. if the original STORM movie was\n",
        "            256x256 and scale = 2 then the output image will be 512x512.\n",
        "    sigma - The sigma to use when rendering gaussians (pixels). If this is None then\n",
        "            the image will be a histogram.\n",
        "\"\"\"\n",
        "\n",
        "sr_im = h5_image.render2DImage(\"calibration.hdf5\", scale = 5, sigma = 1) # # This sigma is not same value with above sigma. It has other meaning.\n",
        "\n",
        "fig = pyplot.figure(figsize = (8, 8))\n",
        "ax = fig.add_subplot(1,1,1)\n",
        "ax.imshow(sr_im)\n",
        "ax.set_title(\"SR Image\")\n",
        "\n",
        "pyplot.show()"
      ],
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Tracks not found, using localizations.\n",
            ".\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xcRVZzutfyDN"
      },
      "source": [
        "### (Optional) Create beads text file for Wobble Correction"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gb57YZNBffAO"
      },
      "source": [
        "def hdf5ToWobbleText(hdf5_name, text_name, x_pix_to_nm, y_pix_to_nm):\n",
        "    import storm_analysis.sa_library.sa_h5py as saH5Py\n",
        "    smlc_file_fp = open(text_name, \"w\")\n",
        "    smlc_file_fp.write(\"index, frame, xnano, ynano, znano, intensity\\n\")\n",
        "\n",
        "    print(\"Saving Localizations\")\n",
        "    count = 0\n",
        "    with saH5Py.SAH5Py(hdf5_name) as h5:\n",
        "        for fnum, locs in h5.localizationsIterator(fields = [\"x\", \"y\", \"sum\"]):\n",
        "                 \n",
        "            for i in range(locs[\"x\"].size):\n",
        "                count += 1\n",
        "                xp = locs[\"x\"][i]*x_pix_to_nm\n",
        "                yp = locs[\"y\"][i]*y_pix_to_nm\n",
        "                zp = 0.0\n",
        "                intensity = locs[\"sum\"][i]\n",
        "                    \n",
        "                smlc_file_fp.write(\"{0:d}, {1:d}, {2:.3f}, {3:.3f}, {4:.3f}, {5:.3f}\\n\".format(count, fnum, xp, yp, zp, intensity))\n",
        "\n",
        "    print()\n",
        "    print(\"Saved\", count, \"localizations.\")\n",
        "    smlc_file_fp.close()"
      ],
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "39GSC0qRfjVg",
        "outputId": "81254a15-ec03-4c80-9c91-bf2f9239f6ae"
      },
      "source": [
        "hdf5ToWobbleText(\"calibration.hdf5\", \"wobble.txt\", 144.5, 144.5) # x_pix_to_nm, y_pix_to_nm"
      ],
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Saving Localizations\n",
            "\n",
            "Saved 484 localizations.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sqwb5mqpk68q"
      },
      "source": [
        "### ② Plotting the calibration result"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iwElep4ldxg2"
      },
      "source": [
        "Plot Wx / Wy versus Z curves."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4GT84q8Ndxg2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "outputId": "84f399ce-0918-4fdf-abdb-13ab5b36b02e"
      },
      "source": [
        "import matplotlib\n",
        "import matplotlib.pyplot as pyplot\n",
        "\n",
        "# Change default figure size.\n",
        "matplotlib.rcParams['figure.figsize'] = (12,6)\n",
        "\n",
        "import storm_analysis.daostorm_3d.z_calibration as z_cal\n",
        "\n",
        "[wx, wy, z, pixel_size] = z_cal.loadWxWyZData(\"calibration.hdf5\", address_z_offsets)\n",
        "\n",
        "p1 = pyplot.scatter(z, wx, color = 'r', label = 'Wx', s=1) # Curves1 (z vs wx)\n",
        "p2 = pyplot.scatter(z, wy, color = 'g', label = 'Wy', s=1) # Curves2 (z vs wy)\n",
        "legend = pyplot.legend(handles = [p1, p2], loc=1)\n",
        "legend.get_frame().set_linewidth(2)\n",
        "legend.get_frame().set_edgecolor('black')\n",
        "pyplot.xlabel(\"microns\")\n",
        "pyplot.ylabel(\"pixels\")\n",
        "pyplot.title(\"Calibration Result : Wx & Wy versus Z curves\")\n",
        "pyplot.show()"
      ],
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zl86jvqudxg2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 896
        },
        "outputId": "4d5cea94-64c4-43f2-9414-bb137b436d1f"
      },
      "source": [
        "###\n",
        "### The function z_cal.calibrate() will perform all of these steps at once.\n",
        "###\n",
        "\n",
        "fit_order = 4\n",
        "outliers = 3.0 # Sigma to be considered an outlier.\n",
        "\n",
        "###################################################\n",
        "#############  Parameter Discription ##############\n",
        "###################################################\n",
        "\n",
        "##     wx_params - Parameters for wx versus z fit.\n",
        "##     wy_params - Parameters for wy versus z fit.\n",
        "##     z - Numpy array with z values in microns.\n",
        "##     n_additional - The number of additional fitting parameters to use,\n",
        "##                    these are 'A,B,C,D'.\n",
        "##     z_params - (Optional) 3 element list containing an initial guess\n",
        "##                for the z fitting parameters.\n",
        "\n",
        "# Mark all locations outside of the specified z range as category 9.\n",
        "\n",
        "\n",
        "###################################################\n",
        "###################################################\n",
        "\n",
        "# Initial guess, this is optional, but might be necessary if your setup is\n",
        "# significantly different from what storm-analysis expects.\n",
        "\n",
        "# It can also help to boot-strap to higher fitting orders.\n",
        "\n",
        "p_start = [3.2,0.19,0.3]\n",
        "###################################################\n",
        "###################################################\n",
        "\n",
        "# Fit curves\n",
        "print(\"Fitting (round 1).\")\n",
        "[wx_params, wy_params] = z_cal.fitDefocusingCurves(wx, wy, z, n_additional = 0, z_params = p_start)\n",
        "print(wx_params)\n",
        "p_start = wx_params[:3]\n",
        "\n",
        "# Fit curves.\n",
        "print(\"Fitting (round 2).\")\n",
        "[wx_params, wy_params] = z_cal.fitDefocusingCurves(wx, wy, z, n_additional = fit_order, z_params = p_start)\n",
        "print(wx_params)\n",
        "p_start = wx_params[:3]\n",
        "\n",
        "# Remove outliers.\n",
        "  # This removes all wx, wy that are more than threshold sigma from the fit curve.\n",
        "print(\"Removing outliers.\")\n",
        "[t_wx, t_wy, t_z] = z_cal.removeOutliers(wx, wy, z, wx_params, wy_params, outliers)\n",
        "\n",
        "# Redo fit.\n",
        "print(\"Fitting (round 3).\")\n",
        "[wx_params, wy_params] = z_cal.fitDefocusingCurves(t_wx, t_wy, t_z, n_additional = fit_order, z_params = p_start)\n",
        "\n",
        "# Plot fit.\n",
        "z_cal.plotFit(wx, wy, z, t_wx, t_wy, t_z, wx_params, wy_params, z_min = min_z, z_max = max_z, z_step = z_step)\n",
        "\n",
        "# This prints the parameter with the scale expected by 3D-DAOSTORM in the analysis XML file.\n",
        "z_cal.prettyPrint(wx_params, wy_params, pixel_size = pixel_size)"
      ],
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Fitting (round 1).\n",
            "[2.687051863210792, 0.23331069059527146, 0.6072016377499596]\n",
            "Fitting (round 2).\n",
            "[2.7413204298994134, 0.18178791029041685, 0.6417686477683481, 0.01121363878985823, 0.024575004137148127, -0.012960616957343877, -0.0038444068320933394]\n",
            "Removing outliers.\n",
            "Fitting (round 3).\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/storm_analysis-2.2-py3.7.egg/storm_analysis/daostorm_3d/z_calibration.py:396: RuntimeWarning: invalid value encountered in sqrt\n",
            "  return wo*numpy.sqrt(1.0 + numpy.power(X,2) + A * numpy.power(X,3) + B * numpy.power(X,4) + C * numpy.power(X,5) + D * numpy.power(X,6))\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n",
            "<xml>\n",
            "   <wx_wo>395.968</wx_wo>\n",
            "   <wx_c>175.113</wx_c>\n",
            "   <wx_d>638.872</wx_d>\n",
            "   <wxA>-0.015</wxA>\n",
            "   <wxB>0.016</wxB>\n",
            "   <wxC>-0.008</wxC>\n",
            "   <wxD>-0.002</wxD>\n",
            "   <wy_wo>440.206</wy_wo>\n",
            "   <wy_c>-877.649</wy_c>\n",
            "   <wy_d>1166.152</wy_d>\n",
            "   <wyA>-0.550</wyA>\n",
            "   <wyB>0.020</wyB>\n",
            "   <wyC>0.258</wyC>\n",
            "   <wyD>-0.087</wyD>\n",
            "</xml>\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OwQ7KooMdxg3"
      },
      "source": [
        "### ③ Saving New Parameters : \n",
        "Create a parameters file with these calibration values.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GF_zq3Nedxg3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "acffdc82-cae8-44fb-c028-0079d0dc79c5"
      },
      "source": [
        "import storm_analysis.sa_library.parameters as params\n",
        "\n",
        "# Load the parameters.\n",
        "new_params = params.ParametersDAO().initFromFile(\"calibration.xml\")\n",
        "\n",
        "# Update calibration parameters.\n",
        "z_cal.setWxWyParams(new_params, wx_params, wy_params, pixel_size)\n",
        "\n",
        "# Do z fitting.\n",
        "new_params.changeAttr(\"do_zfit\", 1)\n",
        "\n",
        "# Set maximum allowed distance in wx, wy space that a point can be from the \n",
        "# calibration curve.\n",
        "# Max allowed distance from the wx/wy versus Z curve, units unclear.\n",
        "\n",
        "new_params.changeAttr(\"cutoff\", 2.0)\n",
        "\n",
        "# Use a higher threshold as the Gaussian PSF is not a good match for our PSF model, so\n",
        "# we'll get spurious peak splitting if it is too low.\n",
        "new_params.changeAttr(\"threshold\", 18)\n",
        "\n",
        "# Don't do tracking or drift correction as this movie is the same as the calibration\n",
        "# movie, every frame has a different z value.\n",
        "new_params.changeAttr(\"radius\", 0.0)\n",
        "new_params.changeAttr(\"drift_correction\", 0)\n",
        "\n",
        "new_params.prettyPrint()\n",
        "\n",
        "# Save the changed parameters.\n",
        "new_params.toXMLFile(\"measure.xml\")"
      ],
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "aoi_radius (int) - None\n",
            "background_sigma (float) - 8.0\n",
            "camera_gain (float) - 9.2\n",
            "camera_offset (float) - 4205.0\n",
            "convert_to (string) - .txt\n",
            "cutoff (float) - 2.0\n",
            "d_scale (int) - 2\n",
            "descriptor (string) - 1\n",
            "do_zfit (int) - 1\n",
            "drift_correction (int) - 0\n",
            "fftw_estimate (int) - 0\n",
            "find_max_radius (int) - 10\n",
            "fit_error_model (string) - MLE\n",
            "foreground_sigma (float) - 1.5\n",
            "frame_step (int) - 100\n",
            "iterations (int) - 1\n",
            "max_frame (int) - -1\n",
            "max_gap (int) - None\n",
            "max_z (float) - 2.0\n",
            "min_z (float) - -2.0\n",
            "model (string) - 3d\n",
            "no_fitting (int) - None\n",
            "parameters_file (parameters_filename) - calibration.xml\n",
            "peak_locations (filename) - None\n",
            "pixel_size (float) - 144.5\n",
            "radius (float) - 0.0\n",
            "roi_size (int) - 28\n",
            "sigma (float) - 1.5\n",
            "sigma_range (float-array) - [0.75, 7.5]\n",
            "start_frame (int) - -1\n",
            "static_background_estimate (int) - 0\n",
            "threshold (float) - 18\n",
            "verbosity (int) - 1\n",
            "wxA (float) - -0.015221235019897979\n",
            "wxB (float) - 0.015903871336034936\n",
            "wxC (float) - -0.007629191024872028\n",
            "wxD (float) - -0.002081211568034353\n",
            "wx_c (float) - 175.11278070708244\n",
            "wx_d (float) - 638.871833508331\n",
            "wx_wo (float) - 395.9679629825057\n",
            "wyA (float) - -0.5497281639832523\n",
            "wyB (float) - 0.01958567026771818\n",
            "wyC (float) - 0.25756953431385093\n",
            "wyD (float) - -0.08723946199063036\n",
            "wy_c (float) - -877.648557916531\n",
            "wy_d (float) - 1166.1521946848923\n",
            "wy_wo (float) - 440.2060051255774\n",
            "x_center (int) - None\n",
            "x_start (int) - None\n",
            "x_stop (int) - None\n",
            "y_center (int) - None\n",
            "y_start (int) - None\n",
            "y_stop (int) - None\n",
            "z_correction (int) - 0\n",
            "z_step (float) - 0.001\n",
            "z_value (float) - 0.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6SWWgngNkU95"
      },
      "source": [
        "## **3) Test : Analyze**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xi__-D_idxg3"
      },
      "source": [
        "### ① Analyze test movie with the above z-calibration parameters."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aQ0JcKIjexwH"
      },
      "source": [
        "val_file = os.path.join(data_path,\"STORM_video_RedBead175nmDia_18kframes_offset4132count.tif\" )"
      ],
      "execution_count": 84,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cD2EP37sdxg3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5404d8a4-eec5-4ee3-83f9-617967d2895e"
      },
      "source": [
        "if os.path.exists(\"measure.hdf5\"):\n",
        "    os.remove(\"measure.hdf5\")\n",
        "    \n",
        "mfit.analyze(val_file, \"measure.hdf5\", \"measure.xml\")\n"
      ],
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43m스트리밍 출력 내용이 길어서 마지막 5000줄이 삭제되었습니다.\u001b[0m\n",
            " Removing values < 1.0 in frame 15521\n",
            "Frame: 15521 1 15151\n",
            " Removing values < 1.0 in frame 15522\n",
            "Frame: 15522 1 15152\n",
            " Removing values < 1.0 in frame 15523\n",
            "Frame: 15523 1 15153\n",
            " Removing values < 1.0 in frame 15524\n",
            "Frame: 15524 1 15154\n",
            " Removing values < 1.0 in frame 15525\n",
            "Frame: 15525 1 15155\n",
            " Removing values < 1.0 in frame 15526\n",
            "Frame: 15526 1 15156\n",
            " Removing values < 1.0 in frame 15527\n",
            "Frame: 15527 1 15157\n",
            " Removing values < 1.0 in frame 15528\n",
            "Frame: 15528 1 15158\n",
            " Removing values < 1.0 in frame 15529\n",
            "Frame: 15529 1 15159\n",
            " Removing values < 1.0 in frame 15530\n",
            "Frame: 15530 1 15160\n",
            " Removing values < 1.0 in frame 15531\n",
            "Frame: 15531 1 15161\n",
            " Removing values < 1.0 in frame 15532\n",
            "Frame: 15532 1 15162\n",
            " Removing values < 1.0 in frame 15533\n",
            "Frame: 15533 1 15163\n",
            " Removing values < 1.0 in frame 15534\n",
            "Frame: 15534 1 15164\n",
            " Removing values < 1.0 in frame 15535\n",
            "Frame: 15535 1 15165\n",
            " Removing values < 1.0 in frame 15536\n",
            "Frame: 15536 1 15166\n",
            " Removing values < 1.0 in frame 15537\n",
            "Frame: 15537 1 15167\n",
            " Removing values < 1.0 in frame 15538\n",
            "Frame: 15538 1 15168\n",
            " Removing values < 1.0 in frame 15539\n",
            "Frame: 15539 1 15169\n",
            " Removing values < 1.0 in frame 15540\n",
            "Frame: 15540 1 15170\n",
            " Removing values < 1.0 in frame 15541\n",
            "Frame: 15541 1 15171\n",
            " Removing values < 1.0 in frame 15542\n",
            "Frame: 15542 1 15172\n",
            " Removing values < 1.0 in frame 15543\n",
            "Frame: 15543 1 15173\n",
            " Removing values < 1.0 in frame 15544\n",
            "Frame: 15544 1 15174\n",
            " Removing values < 1.0 in frame 15545\n",
            "Frame: 15545 1 15175\n",
            " Removing values < 1.0 in frame 15546\n",
            "Frame: 15546 1 15176\n",
            " Removing values < 1.0 in frame 15547\n",
            "Frame: 15547 1 15177\n",
            " Removing values < 1.0 in frame 15548\n",
            "Frame: 15548 0 15177\n",
            " Removing values < 1.0 in frame 15549\n",
            "Frame: 15549 1 15178\n",
            " Removing values < 1.0 in frame 15550\n",
            "Frame: 15550 1 15179\n",
            " Removing values < 1.0 in frame 15551\n",
            "Frame: 15551 1 15180\n",
            " Removing values < 1.0 in frame 15552\n",
            "Frame: 15552 1 15181\n",
            " Removing values < 1.0 in frame 15553\n",
            "Frame: 15553 1 15182\n",
            " Removing values < 1.0 in frame 15554\n",
            "Frame: 15554 1 15183\n",
            " Removing values < 1.0 in frame 15555\n",
            "Frame: 15555 1 15184\n",
            " Removing values < 1.0 in frame 15556\n",
            "Frame: 15556 1 15185\n",
            " Removing values < 1.0 in frame 15557\n",
            "Frame: 15557 1 15186\n",
            " Removing values < 1.0 in frame 15558\n",
            "Frame: 15558 1 15187\n",
            " Removing values < 1.0 in frame 15559\n",
            "Frame: 15559 1 15188\n",
            " Removing values < 1.0 in frame 15560\n",
            "Frame: 15560 1 15189\n",
            " Removing values < 1.0 in frame 15561\n",
            "Frame: 15561 1 15190\n",
            " Removing values < 1.0 in frame 15562\n",
            "Frame: 15562 1 15191\n",
            " Removing values < 1.0 in frame 15563\n",
            "Frame: 15563 1 15192\n",
            " Removing values < 1.0 in frame 15564\n",
            "Frame: 15564 1 15193\n",
            " Removing values < 1.0 in frame 15565\n",
            "Frame: 15565 1 15194\n",
            " Removing values < 1.0 in frame 15566\n",
            "Frame: 15566 0 15194\n",
            " Removing values < 1.0 in frame 15567\n",
            "Frame: 15567 1 15195\n",
            " Removing values < 1.0 in frame 15568\n",
            "Frame: 15568 1 15196\n",
            " Removing values < 1.0 in frame 15569\n",
            "Frame: 15569 0 15196\n",
            " Removing values < 1.0 in frame 15570\n",
            "Frame: 15570 1 15197\n",
            " Removing values < 1.0 in frame 15571\n",
            "Frame: 15571 1 15198\n",
            " Removing values < 1.0 in frame 15572\n",
            "Frame: 15572 1 15199\n",
            " Removing values < 1.0 in frame 15573\n",
            "Frame: 15573 1 15200\n",
            " Removing values < 1.0 in frame 15574\n",
            "Frame: 15574 1 15201\n",
            " Removing values < 1.0 in frame 15575\n",
            "Frame: 15575 1 15202\n",
            " Removing values < 1.0 in frame 15576\n",
            "Frame: 15576 1 15203\n",
            " Removing values < 1.0 in frame 15577\n",
            "Frame: 15577 1 15204\n",
            " Removing values < 1.0 in frame 15578\n",
            "Frame: 15578 1 15205\n",
            " Removing values < 1.0 in frame 15579\n",
            "Frame: 15579 1 15206\n",
            " Removing values < 1.0 in frame 15580\n",
            "Frame: 15580 1 15207\n",
            " Removing values < 1.0 in frame 15581\n",
            "Frame: 15581 1 15208\n",
            " Removing values < 1.0 in frame 15582\n",
            "Frame: 15582 1 15209\n",
            " Removing values < 1.0 in frame 15583\n",
            "Frame: 15583 1 15210\n",
            " Removing values < 1.0 in frame 15584\n",
            "Frame: 15584 1 15211\n",
            " Removing values < 1.0 in frame 15585\n",
            "Frame: 15585 1 15212\n",
            " Removing values < 1.0 in frame 15586\n",
            "Frame: 15586 1 15213\n",
            " Removing values < 1.0 in frame 15587\n",
            "Frame: 15587 0 15213\n",
            " Removing values < 1.0 in frame 15588\n",
            "Frame: 15588 0 15213\n",
            " Removing values < 1.0 in frame 15589\n",
            "Frame: 15589 1 15214\n",
            " Removing values < 1.0 in frame 15590\n",
            "Frame: 15590 1 15215\n",
            " Removing values < 1.0 in frame 15591\n",
            "Frame: 15591 1 15216\n",
            " Removing values < 1.0 in frame 15592\n",
            "Frame: 15592 1 15217\n",
            " Removing values < 1.0 in frame 15593\n",
            "Frame: 15593 1 15218\n",
            " Removing values < 1.0 in frame 15594\n",
            "Frame: 15594 1 15219\n",
            " Removing values < 1.0 in frame 15595\n",
            "Frame: 15595 1 15220\n",
            " Removing values < 1.0 in frame 15596\n",
            "Frame: 15596 1 15221\n",
            " Removing values < 1.0 in frame 15597\n",
            "Frame: 15597 1 15222\n",
            " Removing values < 1.0 in frame 15598\n",
            "Frame: 15598 1 15223\n",
            " Removing values < 1.0 in frame 15599\n",
            "Frame: 15599 1 15224\n",
            " Removing values < 1.0 in frame 15600\n",
            "Frame: 15600 1 15225\n",
            " Removing values < 1.0 in frame 15601\n",
            "Frame: 15601 0 15225\n",
            " Removing values < 1.0 in frame 15602\n",
            "Frame: 15602 1 15226\n",
            " Removing values < 1.0 in frame 15603\n",
            "Frame: 15603 1 15227\n",
            " Removing values < 1.0 in frame 15604\n",
            "Frame: 15604 1 15228\n",
            " Removing values < 1.0 in frame 15605\n",
            "Frame: 15605 1 15229\n",
            " Removing values < 1.0 in frame 15606\n",
            "Frame: 15606 1 15230\n",
            " Removing values < 1.0 in frame 15607\n",
            "Frame: 15607 1 15231\n",
            " Removing values < 1.0 in frame 15608\n",
            "Frame: 15608 1 15232\n",
            " Removing values < 1.0 in frame 15609\n",
            "Frame: 15609 1 15233\n",
            " Removing values < 1.0 in frame 15610\n",
            "Frame: 15610 1 15234\n",
            " Removing values < 1.0 in frame 15611\n",
            "Frame: 15611 1 15235\n",
            " Removing values < 1.0 in frame 15612\n",
            "Frame: 15612 1 15236\n",
            " Removing values < 1.0 in frame 15613\n",
            "Frame: 15613 1 15237\n",
            " Removing values < 1.0 in frame 15614\n",
            "Frame: 15614 1 15238\n",
            " Removing values < 1.0 in frame 15615\n",
            "Frame: 15615 1 15239\n",
            " Removing values < 1.0 in frame 15616\n",
            "Frame: 15616 1 15240\n",
            " Removing values < 1.0 in frame 15617\n",
            "Frame: 15617 1 15241\n",
            " Removing values < 1.0 in frame 15618\n",
            "Frame: 15618 0 15241\n",
            " Removing values < 1.0 in frame 15619\n",
            "Frame: 15619 1 15242\n",
            " Removing values < 1.0 in frame 15620\n",
            "Frame: 15620 1 15243\n",
            " Removing values < 1.0 in frame 15621\n",
            "Frame: 15621 1 15244\n",
            " Removing values < 1.0 in frame 15622\n",
            "Frame: 15622 1 15245\n",
            " Removing values < 1.0 in frame 15623\n",
            "Frame: 15623 1 15246\n",
            " Removing values < 1.0 in frame 15624\n",
            "Frame: 15624 1 15247\n",
            " Removing values < 1.0 in frame 15625\n",
            "Frame: 15625 1 15248\n",
            " Removing values < 1.0 in frame 15626\n",
            "Frame: 15626 1 15249\n",
            " Removing values < 1.0 in frame 15627\n",
            "Frame: 15627 1 15250\n",
            " Removing values < 1.0 in frame 15628\n",
            "Frame: 15628 1 15251\n",
            " Removing values < 1.0 in frame 15629\n",
            "Frame: 15629 1 15252\n",
            " Removing values < 1.0 in frame 15630\n",
            "Frame: 15630 1 15253\n",
            " Removing values < 1.0 in frame 15631\n",
            "Frame: 15631 1 15254\n",
            " Removing values < 1.0 in frame 15632\n",
            "Frame: 15632 1 15255\n",
            " Removing values < 1.0 in frame 15633\n",
            "Frame: 15633 1 15256\n",
            " Removing values < 1.0 in frame 15634\n",
            "Frame: 15634 1 15257\n",
            " Removing values < 1.0 in frame 15635\n",
            "Frame: 15635 1 15258\n",
            " Removing values < 1.0 in frame 15636\n",
            "Frame: 15636 1 15259\n",
            " Removing values < 1.0 in frame 15637\n",
            "Frame: 15637 1 15260\n",
            " Removing values < 1.0 in frame 15638\n",
            "Frame: 15638 1 15261\n",
            " Removing values < 1.0 in frame 15639\n",
            "Frame: 15639 1 15262\n",
            " Removing values < 1.0 in frame 15640\n",
            "Frame: 15640 1 15263\n",
            " Removing values < 1.0 in frame 15641\n",
            "Frame: 15641 1 15264\n",
            " Removing values < 1.0 in frame 15642\n",
            "Frame: 15642 1 15265\n",
            " Removing values < 1.0 in frame 15643\n",
            "Frame: 15643 1 15266\n",
            " Removing values < 1.0 in frame 15644\n",
            "Frame: 15644 1 15267\n",
            " Removing values < 1.0 in frame 15645\n",
            "Frame: 15645 1 15268\n",
            " Removing values < 1.0 in frame 15646\n",
            "Frame: 15646 1 15269\n",
            " Removing values < 1.0 in frame 15647\n",
            "Frame: 15647 1 15270\n",
            " Removing values < 1.0 in frame 15648\n",
            "Frame: 15648 1 15271\n",
            " Removing values < 1.0 in frame 15649\n",
            "Frame: 15649 1 15272\n",
            " Removing values < 1.0 in frame 15650\n",
            "Frame: 15650 1 15273\n",
            " Removing values < 1.0 in frame 15651\n",
            "Frame: 15651 1 15274\n",
            " Removing values < 1.0 in frame 15652\n",
            "Frame: 15652 1 15275\n",
            " Removing values < 1.0 in frame 15653\n",
            "Frame: 15653 1 15276\n",
            " Removing values < 1.0 in frame 15654\n",
            "Frame: 15654 1 15277\n",
            " Removing values < 1.0 in frame 15655\n",
            "Frame: 15655 1 15278\n",
            " Removing values < 1.0 in frame 15656\n",
            "Frame: 15656 1 15279\n",
            " Removing values < 1.0 in frame 15657\n",
            "Frame: 15657 1 15280\n",
            " Removing values < 1.0 in frame 15658\n",
            "Frame: 15658 1 15281\n",
            " Removing values < 1.0 in frame 15659\n",
            "Frame: 15659 1 15282\n",
            " Removing values < 1.0 in frame 15660\n",
            "Frame: 15660 1 15283\n",
            " Removing values < 1.0 in frame 15661\n",
            "Frame: 15661 1 15284\n",
            " Removing values < 1.0 in frame 15662\n",
            "Frame: 15662 1 15285\n",
            " Removing values < 1.0 in frame 15663\n",
            "Frame: 15663 1 15286\n",
            " Removing values < 1.0 in frame 15664\n",
            "Frame: 15664 1 15287\n",
            " Removing values < 1.0 in frame 15665\n",
            "Frame: 15665 0 15287\n",
            " Removing values < 1.0 in frame 15666\n",
            "Frame: 15666 1 15288\n",
            " Removing values < 1.0 in frame 15667\n",
            "Frame: 15667 1 15289\n",
            " Removing values < 1.0 in frame 15668\n",
            "Frame: 15668 1 15290\n",
            " Removing values < 1.0 in frame 15669\n",
            "Frame: 15669 1 15291\n",
            " Removing values < 1.0 in frame 15670\n",
            "Frame: 15670 1 15292\n",
            " Removing values < 1.0 in frame 15671\n",
            "Frame: 15671 1 15293\n",
            " Removing values < 1.0 in frame 15672\n",
            "Frame: 15672 1 15294\n",
            " Removing values < 1.0 in frame 15673\n",
            "Frame: 15673 1 15295\n",
            " Removing values < 1.0 in frame 15674\n",
            "Frame: 15674 1 15296\n",
            " Removing values < 1.0 in frame 15675\n",
            "Frame: 15675 1 15297\n",
            " Removing values < 1.0 in frame 15676\n",
            "Frame: 15676 1 15298\n",
            " Removing values < 1.0 in frame 15677\n",
            "Frame: 15677 1 15299\n",
            " Removing values < 1.0 in frame 15678\n",
            "Frame: 15678 1 15300\n",
            " Removing values < 1.0 in frame 15679\n",
            "Frame: 15679 0 15300\n",
            " Removing values < 1.0 in frame 15680\n",
            "Frame: 15680 1 15301\n",
            " Removing values < 1.0 in frame 15681\n",
            "Frame: 15681 1 15302\n",
            " Removing values < 1.0 in frame 15682\n",
            "Frame: 15682 1 15303\n",
            " Removing values < 1.0 in frame 15683\n",
            "Frame: 15683 1 15304\n",
            " Removing values < 1.0 in frame 15684\n",
            "Frame: 15684 0 15304\n",
            " Removing values < 1.0 in frame 15685\n",
            "Frame: 15685 1 15305\n",
            " Removing values < 1.0 in frame 15686\n",
            "Frame: 15686 1 15306\n",
            " Removing values < 1.0 in frame 15687\n",
            "Frame: 15687 1 15307\n",
            " Removing values < 1.0 in frame 15688\n",
            "Frame: 15688 1 15308\n",
            " Removing values < 1.0 in frame 15689\n",
            "Frame: 15689 1 15309\n",
            " Removing values < 1.0 in frame 15690\n",
            "Frame: 15690 1 15310\n",
            " Removing values < 1.0 in frame 15691\n",
            "Frame: 15691 1 15311\n",
            " Removing values < 1.0 in frame 15692\n",
            "Frame: 15692 1 15312\n",
            " Removing values < 1.0 in frame 15693\n",
            "Frame: 15693 1 15313\n",
            " Removing values < 1.0 in frame 15694\n",
            "Frame: 15694 1 15314\n",
            " Removing values < 1.0 in frame 15695\n",
            "Frame: 15695 1 15315\n",
            " Removing values < 1.0 in frame 15696\n",
            "Frame: 15696 1 15316\n",
            " Removing values < 1.0 in frame 15697\n",
            "Frame: 15697 1 15317\n",
            " Removing values < 1.0 in frame 15698\n",
            "Frame: 15698 1 15318\n",
            " Removing values < 1.0 in frame 15699\n",
            "Frame: 15699 1 15319\n",
            " Removing values < 1.0 in frame 15700\n",
            "Frame: 15700 1 15320\n",
            " Removing values < 1.0 in frame 15701\n",
            "Frame: 15701 1 15321\n",
            " Removing values < 1.0 in frame 15702\n",
            "Frame: 15702 1 15322\n",
            " Removing values < 1.0 in frame 15703\n",
            "Frame: 15703 1 15323\n",
            " Removing values < 1.0 in frame 15704\n",
            "Frame: 15704 1 15324\n",
            " Removing values < 1.0 in frame 15705\n",
            "Frame: 15705 1 15325\n",
            " Removing values < 1.0 in frame 15706\n",
            "Frame: 15706 1 15326\n",
            " Removing values < 1.0 in frame 15707\n",
            "Frame: 15707 1 15327\n",
            " Removing values < 1.0 in frame 15708\n",
            "Frame: 15708 1 15328\n",
            " Removing values < 1.0 in frame 15709\n",
            "Frame: 15709 1 15329\n",
            " Removing values < 1.0 in frame 15710\n",
            "Frame: 15710 1 15330\n",
            " Removing values < 1.0 in frame 15711\n",
            "Frame: 15711 1 15331\n",
            " Removing values < 1.0 in frame 15712\n",
            "Frame: 15712 1 15332\n",
            " Removing values < 1.0 in frame 15713\n",
            "Frame: 15713 1 15333\n",
            " Removing values < 1.0 in frame 15714\n",
            "Frame: 15714 1 15334\n",
            " Removing values < 1.0 in frame 15715\n",
            "Frame: 15715 1 15335\n",
            " Removing values < 1.0 in frame 15716\n",
            "Frame: 15716 1 15336\n",
            " Removing values < 1.0 in frame 15717\n",
            "Frame: 15717 1 15337\n",
            " Removing values < 1.0 in frame 15718\n",
            "Frame: 15718 1 15338\n",
            " Removing values < 1.0 in frame 15719\n",
            "Frame: 15719 1 15339\n",
            " Removing values < 1.0 in frame 15720\n",
            "Frame: 15720 1 15340\n",
            " Removing values < 1.0 in frame 15721\n",
            "Frame: 15721 1 15341\n",
            " Removing values < 1.0 in frame 15722\n",
            "Frame: 15722 1 15342\n",
            " Removing values < 1.0 in frame 15723\n",
            "Frame: 15723 1 15343\n",
            " Removing values < 1.0 in frame 15724\n",
            "Frame: 15724 1 15344\n",
            " Removing values < 1.0 in frame 15725\n",
            "Frame: 15725 1 15345\n",
            " Removing values < 1.0 in frame 15726\n",
            "Frame: 15726 1 15346\n",
            " Removing values < 1.0 in frame 15727\n",
            "Frame: 15727 1 15347\n",
            " Removing values < 1.0 in frame 15728\n",
            "Frame: 15728 1 15348\n",
            " Removing values < 1.0 in frame 15729\n",
            "Frame: 15729 1 15349\n",
            " Removing values < 1.0 in frame 15730\n",
            "Frame: 15730 1 15350\n",
            " Removing values < 1.0 in frame 15731\n",
            "Frame: 15731 1 15351\n",
            " Removing values < 1.0 in frame 15732\n",
            "Frame: 15732 1 15352\n",
            " Removing values < 1.0 in frame 15733\n",
            "Frame: 15733 1 15353\n",
            " Removing values < 1.0 in frame 15734\n",
            "Frame: 15734 1 15354\n",
            " Removing values < 1.0 in frame 15735\n",
            "Frame: 15735 1 15355\n",
            " Removing values < 1.0 in frame 15736\n",
            "Frame: 15736 1 15356\n",
            " Removing values < 1.0 in frame 15737\n",
            "Frame: 15737 1 15357\n",
            " Removing values < 1.0 in frame 15738\n",
            "Frame: 15738 1 15358\n",
            " Removing values < 1.0 in frame 15739\n",
            "Frame: 15739 1 15359\n",
            " Removing values < 1.0 in frame 15740\n",
            "Frame: 15740 1 15360\n",
            " Removing values < 1.0 in frame 15741\n",
            "Frame: 15741 1 15361\n",
            " Removing values < 1.0 in frame 15742\n",
            "Frame: 15742 1 15362\n",
            " Removing values < 1.0 in frame 15743\n",
            "Frame: 15743 1 15363\n",
            " Removing values < 1.0 in frame 15744\n",
            "Frame: 15744 1 15364\n",
            " Removing values < 1.0 in frame 15745\n",
            "Frame: 15745 1 15365\n",
            " Removing values < 1.0 in frame 15746\n",
            "Frame: 15746 1 15366\n",
            " Removing values < 1.0 in frame 15747\n",
            "Frame: 15747 1 15367\n",
            " Removing values < 1.0 in frame 15748\n",
            "Frame: 15748 1 15368\n",
            " Removing values < 1.0 in frame 15749\n",
            "Frame: 15749 1 15369\n",
            " Removing values < 1.0 in frame 15750\n",
            "Frame: 15750 1 15370\n",
            " Removing values < 1.0 in frame 15751\n",
            "Frame: 15751 1 15371\n",
            " Removing values < 1.0 in frame 15752\n",
            "Frame: 15752 1 15372\n",
            " Removing values < 1.0 in frame 15753\n",
            "Frame: 15753 1 15373\n",
            " Removing values < 1.0 in frame 15754\n",
            "Frame: 15754 1 15374\n",
            " Removing values < 1.0 in frame 15755\n",
            "Frame: 15755 1 15375\n",
            " Removing values < 1.0 in frame 15756\n",
            "Frame: 15756 1 15376\n",
            " Removing values < 1.0 in frame 15757\n",
            "Frame: 15757 1 15377\n",
            " Removing values < 1.0 in frame 15758\n",
            "Frame: 15758 1 15378\n",
            " Removing values < 1.0 in frame 15759\n",
            "Frame: 15759 1 15379\n",
            " Removing values < 1.0 in frame 15760\n",
            "Frame: 15760 1 15380\n",
            " Removing values < 1.0 in frame 15761\n",
            "Frame: 15761 1 15381\n",
            " Removing values < 1.0 in frame 15762\n",
            "Frame: 15762 1 15382\n",
            " Removing values < 1.0 in frame 15763\n",
            "Frame: 15763 1 15383\n",
            " Removing values < 1.0 in frame 15764\n",
            "Frame: 15764 1 15384\n",
            " Removing values < 1.0 in frame 15765\n",
            "Frame: 15765 1 15385\n",
            " Removing values < 1.0 in frame 15766\n",
            "Frame: 15766 1 15386\n",
            " Removing values < 1.0 in frame 15767\n",
            "Frame: 15767 1 15387\n",
            " Removing values < 1.0 in frame 15768\n",
            "Frame: 15768 1 15388\n",
            " Removing values < 1.0 in frame 15769\n",
            "Frame: 15769 1 15389\n",
            " Removing values < 1.0 in frame 15770\n",
            "Frame: 15770 1 15390\n",
            " Removing values < 1.0 in frame 15771\n",
            "Frame: 15771 1 15391\n",
            " Removing values < 1.0 in frame 15772\n",
            "Frame: 15772 1 15392\n",
            " Removing values < 1.0 in frame 15773\n",
            "Frame: 15773 1 15393\n",
            " Removing values < 1.0 in frame 15774\n",
            "Frame: 15774 1 15394\n",
            " Removing values < 1.0 in frame 15775\n",
            "Frame: 15775 1 15395\n",
            " Removing values < 1.0 in frame 15776\n",
            "Frame: 15776 1 15396\n",
            " Removing values < 1.0 in frame 15777\n",
            "Frame: 15777 1 15397\n",
            " Removing values < 1.0 in frame 15778\n",
            "Frame: 15778 1 15398\n",
            " Removing values < 1.0 in frame 15779\n",
            "Frame: 15779 1 15399\n",
            " Removing values < 1.0 in frame 15780\n",
            "Frame: 15780 1 15400\n",
            " Removing values < 1.0 in frame 15781\n",
            "Frame: 15781 1 15401\n",
            " Removing values < 1.0 in frame 15782\n",
            "Frame: 15782 1 15402\n",
            " Removing values < 1.0 in frame 15783\n",
            "Frame: 15783 1 15403\n",
            " Removing values < 1.0 in frame 15784\n",
            "Frame: 15784 1 15404\n",
            " Removing values < 1.0 in frame 15785\n",
            "Frame: 15785 1 15405\n",
            " Removing values < 1.0 in frame 15786\n",
            "Frame: 15786 1 15406\n",
            " Removing values < 1.0 in frame 15787\n",
            "Frame: 15787 1 15407\n",
            " Removing values < 1.0 in frame 15788\n",
            "Frame: 15788 1 15408\n",
            " Removing values < 1.0 in frame 15789\n",
            "Frame: 15789 1 15409\n",
            " Removing values < 1.0 in frame 15790\n",
            "Frame: 15790 1 15410\n",
            " Removing values < 1.0 in frame 15791\n",
            "Frame: 15791 1 15411\n",
            " Removing values < 1.0 in frame 15792\n",
            "Frame: 15792 1 15412\n",
            " Removing values < 1.0 in frame 15793\n",
            "Frame: 15793 1 15413\n",
            " Removing values < 1.0 in frame 15794\n",
            "Frame: 15794 1 15414\n",
            " Removing values < 1.0 in frame 15795\n",
            "Frame: 15795 1 15415\n",
            " Removing values < 1.0 in frame 15796\n",
            "Frame: 15796 1 15416\n",
            " Removing values < 1.0 in frame 15797\n",
            "Frame: 15797 1 15417\n",
            " Removing values < 1.0 in frame 15798\n",
            "Frame: 15798 1 15418\n",
            " Removing values < 1.0 in frame 15799\n",
            "Frame: 15799 1 15419\n",
            " Removing values < 1.0 in frame 15800\n",
            "Frame: 15800 1 15420\n",
            " Removing values < 1.0 in frame 15801\n",
            "Frame: 15801 1 15421\n",
            " Removing values < 1.0 in frame 15802\n",
            "Frame: 15802 1 15422\n",
            " Removing values < 1.0 in frame 15803\n",
            "Frame: 15803 1 15423\n",
            " Removing values < 1.0 in frame 15804\n",
            "Frame: 15804 1 15424\n",
            " Removing values < 1.0 in frame 15805\n",
            "Frame: 15805 1 15425\n",
            " Removing values < 1.0 in frame 15806\n",
            "Frame: 15806 1 15426\n",
            " Removing values < 1.0 in frame 15807\n",
            "Frame: 15807 1 15427\n",
            " Removing values < 1.0 in frame 15808\n",
            "Frame: 15808 1 15428\n",
            " Removing values < 1.0 in frame 15809\n",
            "Frame: 15809 1 15429\n",
            " Removing values < 1.0 in frame 15810\n",
            "Frame: 15810 1 15430\n",
            " Removing values < 1.0 in frame 15811\n",
            "Frame: 15811 1 15431\n",
            " Removing values < 1.0 in frame 15812\n",
            "Frame: 15812 1 15432\n",
            " Removing values < 1.0 in frame 15813\n",
            "Frame: 15813 1 15433\n",
            " Removing values < 1.0 in frame 15814\n",
            "Frame: 15814 1 15434\n",
            " Removing values < 1.0 in frame 15815\n",
            "Frame: 15815 1 15435\n",
            " Removing values < 1.0 in frame 15816\n",
            "Frame: 15816 1 15436\n",
            " Removing values < 1.0 in frame 15817\n",
            "Frame: 15817 1 15437\n",
            " Removing values < 1.0 in frame 15818\n",
            "Frame: 15818 1 15438\n",
            " Removing values < 1.0 in frame 15819\n",
            "Frame: 15819 1 15439\n",
            " Removing values < 1.0 in frame 15820\n",
            "Frame: 15820 1 15440\n",
            " Removing values < 1.0 in frame 15821\n",
            "Frame: 15821 1 15441\n",
            " Removing values < 1.0 in frame 15822\n",
            "Frame: 15822 1 15442\n",
            " Removing values < 1.0 in frame 15823\n",
            "Frame: 15823 1 15443\n",
            " Removing values < 1.0 in frame 15824\n",
            "Frame: 15824 1 15444\n",
            " Removing values < 1.0 in frame 15825\n",
            "Frame: 15825 1 15445\n",
            " Removing values < 1.0 in frame 15826\n",
            "Frame: 15826 1 15446\n",
            " Removing values < 1.0 in frame 15827\n",
            "Frame: 15827 1 15447\n",
            " Removing values < 1.0 in frame 15828\n",
            "Frame: 15828 1 15448\n",
            " Removing values < 1.0 in frame 15829\n",
            "Frame: 15829 1 15449\n",
            " Removing values < 1.0 in frame 15830\n",
            "Frame: 15830 1 15450\n",
            " Removing values < 1.0 in frame 15831\n",
            "Frame: 15831 1 15451\n",
            " Removing values < 1.0 in frame 15832\n",
            "Frame: 15832 1 15452\n",
            " Removing values < 1.0 in frame 15833\n",
            "Frame: 15833 1 15453\n",
            " Removing values < 1.0 in frame 15834\n",
            "Frame: 15834 1 15454\n",
            " Removing values < 1.0 in frame 15835\n",
            "Frame: 15835 1 15455\n",
            " Removing values < 1.0 in frame 15836\n",
            "Frame: 15836 1 15456\n",
            " Removing values < 1.0 in frame 15837\n",
            "Frame: 15837 1 15457\n",
            " Removing values < 1.0 in frame 15838\n",
            "Frame: 15838 1 15458\n",
            " Removing values < 1.0 in frame 15839\n",
            "Frame: 15839 1 15459\n",
            " Removing values < 1.0 in frame 15840\n",
            "Frame: 15840 1 15460\n",
            " Removing values < 1.0 in frame 15841\n",
            "Frame: 15841 1 15461\n",
            " Removing values < 1.0 in frame 15842\n",
            "Frame: 15842 1 15462\n",
            " Removing values < 1.0 in frame 15843\n",
            "Frame: 15843 1 15463\n",
            " Removing values < 1.0 in frame 15844\n",
            "Frame: 15844 1 15464\n",
            " Removing values < 1.0 in frame 15845\n",
            "Frame: 15845 1 15465\n",
            " Removing values < 1.0 in frame 15846\n",
            "Frame: 15846 1 15466\n",
            " Removing values < 1.0 in frame 15847\n",
            "Frame: 15847 1 15467\n",
            " Removing values < 1.0 in frame 15848\n",
            "Frame: 15848 1 15468\n",
            " Removing values < 1.0 in frame 15849\n",
            "Frame: 15849 1 15469\n",
            " Removing values < 1.0 in frame 15850\n",
            "Frame: 15850 1 15470\n",
            " Removing values < 1.0 in frame 15851\n",
            "Frame: 15851 1 15471\n",
            " Removing values < 1.0 in frame 15852\n",
            "Frame: 15852 1 15472\n",
            " Removing values < 1.0 in frame 15853\n",
            "Frame: 15853 1 15473\n",
            " Removing values < 1.0 in frame 15854\n",
            "Frame: 15854 1 15474\n",
            " Removing values < 1.0 in frame 15855\n",
            "Frame: 15855 1 15475\n",
            " Removing values < 1.0 in frame 15856\n",
            "Frame: 15856 1 15476\n",
            " Removing values < 1.0 in frame 15857\n",
            "Frame: 15857 1 15477\n",
            " Removing values < 1.0 in frame 15858\n",
            "Frame: 15858 1 15478\n",
            " Removing values < 1.0 in frame 15859\n",
            "Frame: 15859 1 15479\n",
            " Removing values < 1.0 in frame 15860\n",
            "Frame: 15860 1 15480\n",
            " Removing values < 1.0 in frame 15861\n",
            "Frame: 15861 1 15481\n",
            " Removing values < 1.0 in frame 15862\n",
            "Frame: 15862 1 15482\n",
            " Removing values < 1.0 in frame 15863\n",
            "Frame: 15863 1 15483\n",
            " Removing values < 1.0 in frame 15864\n",
            "Frame: 15864 1 15484\n",
            " Removing values < 1.0 in frame 15865\n",
            "Frame: 15865 1 15485\n",
            " Removing values < 1.0 in frame 15866\n",
            "Frame: 15866 1 15486\n",
            " Removing values < 1.0 in frame 15867\n",
            "Frame: 15867 1 15487\n",
            " Removing values < 1.0 in frame 15868\n",
            "Frame: 15868 1 15488\n",
            " Removing values < 1.0 in frame 15869\n",
            "Frame: 15869 1 15489\n",
            " Removing values < 1.0 in frame 15870\n",
            "Frame: 15870 1 15490\n",
            " Removing values < 1.0 in frame 15871\n",
            "Frame: 15871 1 15491\n",
            " Removing values < 1.0 in frame 15872\n",
            "Frame: 15872 1 15492\n",
            " Removing values < 1.0 in frame 15873\n",
            "Frame: 15873 1 15493\n",
            " Removing values < 1.0 in frame 15874\n",
            "Frame: 15874 1 15494\n",
            " Removing values < 1.0 in frame 15875\n",
            "Frame: 15875 1 15495\n",
            " Removing values < 1.0 in frame 15876\n",
            "Frame: 15876 1 15496\n",
            " Removing values < 1.0 in frame 15877\n",
            "Frame: 15877 1 15497\n",
            " Removing values < 1.0 in frame 15878\n",
            "Frame: 15878 1 15498\n",
            " Removing values < 1.0 in frame 15879\n",
            "Frame: 15879 1 15499\n",
            " Removing values < 1.0 in frame 15880\n",
            "Frame: 15880 1 15500\n",
            " Removing values < 1.0 in frame 15881\n",
            "Frame: 15881 1 15501\n",
            " Removing values < 1.0 in frame 15882\n",
            "Frame: 15882 1 15502\n",
            " Removing values < 1.0 in frame 15883\n",
            "Frame: 15883 1 15503\n",
            " Removing values < 1.0 in frame 15884\n",
            "Frame: 15884 1 15504\n",
            " Removing values < 1.0 in frame 15885\n",
            "Frame: 15885 1 15505\n",
            " Removing values < 1.0 in frame 15886\n",
            "Frame: 15886 1 15506\n",
            " Removing values < 1.0 in frame 15887\n",
            "Frame: 15887 1 15507\n",
            " Removing values < 1.0 in frame 15888\n",
            "Frame: 15888 1 15508\n",
            " Removing values < 1.0 in frame 15889\n",
            "Frame: 15889 1 15509\n",
            " Removing values < 1.0 in frame 15890\n",
            "Frame: 15890 1 15510\n",
            " Removing values < 1.0 in frame 15891\n",
            "Frame: 15891 1 15511\n",
            " Removing values < 1.0 in frame 15892\n",
            "Frame: 15892 1 15512\n",
            " Removing values < 1.0 in frame 15893\n",
            "Frame: 15893 1 15513\n",
            " Removing values < 1.0 in frame 15894\n",
            "Frame: 15894 1 15514\n",
            " Removing values < 1.0 in frame 15895\n",
            "Frame: 15895 1 15515\n",
            " Removing values < 1.0 in frame 15896\n",
            "Frame: 15896 1 15516\n",
            " Removing values < 1.0 in frame 15897\n",
            "Frame: 15897 1 15517\n",
            " Removing values < 1.0 in frame 15898\n",
            "Frame: 15898 1 15518\n",
            " Removing values < 1.0 in frame 15899\n",
            "Frame: 15899 1 15519\n",
            " Removing values < 1.0 in frame 15900\n",
            "Frame: 15900 1 15520\n",
            " Removing values < 1.0 in frame 15901\n",
            "Frame: 15901 1 15521\n",
            " Removing values < 1.0 in frame 15902\n",
            "Frame: 15902 1 15522\n",
            " Removing values < 1.0 in frame 15903\n",
            "Frame: 15903 1 15523\n",
            " Removing values < 1.0 in frame 15904\n",
            "Frame: 15904 1 15524\n",
            " Removing values < 1.0 in frame 15905\n",
            "Frame: 15905 1 15525\n",
            " Removing values < 1.0 in frame 15906\n",
            "Frame: 15906 1 15526\n",
            " Removing values < 1.0 in frame 15907\n",
            "Frame: 15907 1 15527\n",
            " Removing values < 1.0 in frame 15908\n",
            "Frame: 15908 1 15528\n",
            " Removing values < 1.0 in frame 15909\n",
            "Frame: 15909 1 15529\n",
            " Removing values < 1.0 in frame 15910\n",
            "Frame: 15910 1 15530\n",
            " Removing values < 1.0 in frame 15911\n",
            "Frame: 15911 1 15531\n",
            " Removing values < 1.0 in frame 15912\n",
            "Frame: 15912 0 15531\n",
            " Removing values < 1.0 in frame 15913\n",
            "Frame: 15913 1 15532\n",
            " Removing values < 1.0 in frame 15914\n",
            "Frame: 15914 1 15533\n",
            " Removing values < 1.0 in frame 15915\n",
            "Frame: 15915 1 15534\n",
            " Removing values < 1.0 in frame 15916\n",
            "Frame: 15916 1 15535\n",
            " Removing values < 1.0 in frame 15917\n",
            "Frame: 15917 1 15536\n",
            " Removing values < 1.0 in frame 15918\n",
            "Frame: 15918 1 15537\n",
            " Removing values < 1.0 in frame 15919\n",
            "Frame: 15919 1 15538\n",
            " Removing values < 1.0 in frame 15920\n",
            "Frame: 15920 1 15539\n",
            " Removing values < 1.0 in frame 15921\n",
            "Frame: 15921 1 15540\n",
            " Removing values < 1.0 in frame 15922\n",
            "Frame: 15922 1 15541\n",
            " Removing values < 1.0 in frame 15923\n",
            "Frame: 15923 1 15542\n",
            " Removing values < 1.0 in frame 15924\n",
            "Frame: 15924 1 15543\n",
            " Removing values < 1.0 in frame 15925\n",
            "Frame: 15925 1 15544\n",
            " Removing values < 1.0 in frame 15926\n",
            "Frame: 15926 1 15545\n",
            " Removing values < 1.0 in frame 15927\n",
            "Frame: 15927 1 15546\n",
            " Removing values < 1.0 in frame 15928\n",
            "Frame: 15928 1 15547\n",
            " Removing values < 1.0 in frame 15929\n",
            "Frame: 15929 1 15548\n",
            " Removing values < 1.0 in frame 15930\n",
            "Frame: 15930 1 15549\n",
            " Removing values < 1.0 in frame 15931\n",
            "Frame: 15931 1 15550\n",
            " Removing values < 1.0 in frame 15932\n",
            "Frame: 15932 1 15551\n",
            " Removing values < 1.0 in frame 15933\n",
            "Frame: 15933 1 15552\n",
            " Removing values < 1.0 in frame 15934\n",
            "Frame: 15934 1 15553\n",
            " Removing values < 1.0 in frame 15935\n",
            "Frame: 15935 1 15554\n",
            " Removing values < 1.0 in frame 15936\n",
            "Frame: 15936 1 15555\n",
            " Removing values < 1.0 in frame 15937\n",
            "Frame: 15937 1 15556\n",
            " Removing values < 1.0 in frame 15938\n",
            "Frame: 15938 1 15557\n",
            " Removing values < 1.0 in frame 15939\n",
            "Frame: 15939 1 15558\n",
            " Removing values < 1.0 in frame 15940\n",
            "Frame: 15940 1 15559\n",
            " Removing values < 1.0 in frame 15941\n",
            "Frame: 15941 1 15560\n",
            " Removing values < 1.0 in frame 15942\n",
            "Frame: 15942 1 15561\n",
            " Removing values < 1.0 in frame 15943\n",
            "Frame: 15943 1 15562\n",
            " Removing values < 1.0 in frame 15944\n",
            "Frame: 15944 1 15563\n",
            " Removing values < 1.0 in frame 15945\n",
            "Frame: 15945 1 15564\n",
            " Removing values < 1.0 in frame 15946\n",
            "Frame: 15946 1 15565\n",
            " Removing values < 1.0 in frame 15947\n",
            "Frame: 15947 1 15566\n",
            " Removing values < 1.0 in frame 15948\n",
            "Frame: 15948 1 15567\n",
            " Removing values < 1.0 in frame 15949\n",
            "Frame: 15949 1 15568\n",
            " Removing values < 1.0 in frame 15950\n",
            "Frame: 15950 1 15569\n",
            " Removing values < 1.0 in frame 15951\n",
            "Frame: 15951 1 15570\n",
            " Removing values < 1.0 in frame 15952\n",
            "Frame: 15952 1 15571\n",
            " Removing values < 1.0 in frame 15953\n",
            "Frame: 15953 1 15572\n",
            " Removing values < 1.0 in frame 15954\n",
            "Frame: 15954 1 15573\n",
            " Removing values < 1.0 in frame 15955\n",
            "Frame: 15955 1 15574\n",
            " Removing values < 1.0 in frame 15956\n",
            "Frame: 15956 1 15575\n",
            " Removing values < 1.0 in frame 15957\n",
            "Frame: 15957 1 15576\n",
            " Removing values < 1.0 in frame 15958\n",
            "Frame: 15958 1 15577\n",
            " Removing values < 1.0 in frame 15959\n",
            "Frame: 15959 1 15578\n",
            " Removing values < 1.0 in frame 15960\n",
            "Frame: 15960 0 15578\n",
            " Removing values < 1.0 in frame 15961\n",
            "Frame: 15961 1 15579\n",
            " Removing values < 1.0 in frame 15962\n",
            "Frame: 15962 0 15579\n",
            " Removing values < 1.0 in frame 15963\n",
            "Frame: 15963 1 15580\n",
            " Removing values < 1.0 in frame 15964\n",
            "Frame: 15964 1 15581\n",
            " Removing values < 1.0 in frame 15965\n",
            "Frame: 15965 1 15582\n",
            " Removing values < 1.0 in frame 15966\n",
            "Frame: 15966 1 15583\n",
            " Removing values < 1.0 in frame 15967\n",
            "Frame: 15967 1 15584\n",
            " Removing values < 1.0 in frame 15968\n",
            "Frame: 15968 1 15585\n",
            " Removing values < 1.0 in frame 15969\n",
            "Frame: 15969 1 15586\n",
            " Removing values < 1.0 in frame 15970\n",
            "Frame: 15970 1 15587\n",
            " Removing values < 1.0 in frame 15971\n",
            "Frame: 15971 1 15588\n",
            " Removing values < 1.0 in frame 15972\n",
            "Frame: 15972 1 15589\n",
            " Removing values < 1.0 in frame 15973\n",
            "Frame: 15973 1 15590\n",
            " Removing values < 1.0 in frame 15974\n",
            "Frame: 15974 1 15591\n",
            " Removing values < 1.0 in frame 15975\n",
            "Frame: 15975 1 15592\n",
            " Removing values < 1.0 in frame 15976\n",
            "Frame: 15976 1 15593\n",
            " Removing values < 1.0 in frame 15977\n",
            "Frame: 15977 1 15594\n",
            " Removing values < 1.0 in frame 15978\n",
            "Frame: 15978 0 15594\n",
            " Removing values < 1.0 in frame 15979\n",
            "Frame: 15979 1 15595\n",
            " Removing values < 1.0 in frame 15980\n",
            "Frame: 15980 1 15596\n",
            " Removing values < 1.0 in frame 15981\n",
            "Frame: 15981 1 15597\n",
            " Removing values < 1.0 in frame 15982\n",
            "Frame: 15982 1 15598\n",
            " Removing values < 1.0 in frame 15983\n",
            "Frame: 15983 1 15599\n",
            " Removing values < 1.0 in frame 15984\n",
            "Frame: 15984 1 15600\n",
            " Removing values < 1.0 in frame 15985\n",
            "Frame: 15985 1 15601\n",
            " Removing values < 1.0 in frame 15986\n",
            "Frame: 15986 1 15602\n",
            " Removing values < 1.0 in frame 15987\n",
            "Frame: 15987 1 15603\n",
            " Removing values < 1.0 in frame 15988\n",
            "Frame: 15988 1 15604\n",
            " Removing values < 1.0 in frame 15989\n",
            "Frame: 15989 1 15605\n",
            " Removing values < 1.0 in frame 15990\n",
            "Frame: 15990 1 15606\n",
            " Removing values < 1.0 in frame 15991\n",
            "Frame: 15991 1 15607\n",
            " Removing values < 1.0 in frame 15992\n",
            "Frame: 15992 1 15608\n",
            " Removing values < 1.0 in frame 15993\n",
            "Frame: 15993 1 15609\n",
            " Removing values < 1.0 in frame 15994\n",
            "Frame: 15994 1 15610\n",
            " Removing values < 1.0 in frame 15995\n",
            "Frame: 15995 1 15611\n",
            " Removing values < 1.0 in frame 15996\n",
            "Frame: 15996 1 15612\n",
            " Removing values < 1.0 in frame 15997\n",
            "Frame: 15997 1 15613\n",
            " Removing values < 1.0 in frame 15998\n",
            "Frame: 15998 1 15614\n",
            " Removing values < 1.0 in frame 15999\n",
            "Frame: 15999 1 15615\n",
            " Removing values < 1.0 in frame 16000\n",
            "Frame: 16000 1 15616\n",
            " Removing values < 1.0 in frame 16001\n",
            "Frame: 16001 1 15617\n",
            " Removing values < 1.0 in frame 16002\n",
            "Frame: 16002 1 15618\n",
            " Removing values < 1.0 in frame 16003\n",
            "Frame: 16003 1 15619\n",
            " Removing values < 1.0 in frame 16004\n",
            "Frame: 16004 1 15620\n",
            " Removing values < 1.0 in frame 16005\n",
            "Frame: 16005 1 15621\n",
            " Removing values < 1.0 in frame 16006\n",
            "Frame: 16006 1 15622\n",
            " Removing values < 1.0 in frame 16007\n",
            "Frame: 16007 1 15623\n",
            " Removing values < 1.0 in frame 16008\n",
            "Frame: 16008 1 15624\n",
            " Removing values < 1.0 in frame 16009\n",
            "Frame: 16009 1 15625\n",
            " Removing values < 1.0 in frame 16010\n",
            "Frame: 16010 1 15626\n",
            " Removing values < 1.0 in frame 16011\n",
            "Frame: 16011 1 15627\n",
            " Removing values < 1.0 in frame 16012\n",
            "Frame: 16012 1 15628\n",
            " Removing values < 1.0 in frame 16013\n",
            "Frame: 16013 1 15629\n",
            " Removing values < 1.0 in frame 16014\n",
            "Frame: 16014 1 15630\n",
            " Removing values < 1.0 in frame 16015\n",
            "Frame: 16015 1 15631\n",
            " Removing values < 1.0 in frame 16016\n",
            "Frame: 16016 1 15632\n",
            " Removing values < 1.0 in frame 16017\n",
            "Frame: 16017 1 15633\n",
            " Removing values < 1.0 in frame 16018\n",
            "Frame: 16018 1 15634\n",
            " Removing values < 1.0 in frame 16019\n",
            "Frame: 16019 1 15635\n",
            " Removing values < 1.0 in frame 16020\n",
            "Frame: 16020 1 15636\n",
            " Removing values < 1.0 in frame 16021\n",
            "Frame: 16021 1 15637\n",
            " Removing values < 1.0 in frame 16022\n",
            "Frame: 16022 1 15638\n",
            " Removing values < 1.0 in frame 16023\n",
            "Frame: 16023 1 15639\n",
            " Removing values < 1.0 in frame 16024\n",
            "Frame: 16024 1 15640\n",
            " Removing values < 1.0 in frame 16025\n",
            "Frame: 16025 1 15641\n",
            " Removing values < 1.0 in frame 16026\n",
            "Frame: 16026 1 15642\n",
            " Removing values < 1.0 in frame 16027\n",
            "Frame: 16027 1 15643\n",
            " Removing values < 1.0 in frame 16028\n",
            "Frame: 16028 1 15644\n",
            " Removing values < 1.0 in frame 16029\n",
            "Frame: 16029 1 15645\n",
            " Removing values < 1.0 in frame 16030\n",
            "Frame: 16030 1 15646\n",
            " Removing values < 1.0 in frame 16031\n",
            "Frame: 16031 1 15647\n",
            " Removing values < 1.0 in frame 16032\n",
            "Frame: 16032 1 15648\n",
            " Removing values < 1.0 in frame 16033\n",
            "Frame: 16033 1 15649\n",
            " Removing values < 1.0 in frame 16034\n",
            "Frame: 16034 1 15650\n",
            " Removing values < 1.0 in frame 16035\n",
            "Frame: 16035 1 15651\n",
            " Removing values < 1.0 in frame 16036\n",
            "Frame: 16036 1 15652\n",
            " Removing values < 1.0 in frame 16037\n",
            "Frame: 16037 1 15653\n",
            " Removing values < 1.0 in frame 16038\n",
            "Frame: 16038 1 15654\n",
            " Removing values < 1.0 in frame 16039\n",
            "Frame: 16039 1 15655\n",
            " Removing values < 1.0 in frame 16040\n",
            "Frame: 16040 1 15656\n",
            " Removing values < 1.0 in frame 16041\n",
            "Frame: 16041 0 15656\n",
            " Removing values < 1.0 in frame 16042\n",
            "Frame: 16042 1 15657\n",
            " Removing values < 1.0 in frame 16043\n",
            "Frame: 16043 1 15658\n",
            " Removing values < 1.0 in frame 16044\n",
            "Frame: 16044 1 15659\n",
            " Removing values < 1.0 in frame 16045\n",
            "Frame: 16045 1 15660\n",
            " Removing values < 1.0 in frame 16046\n",
            "Frame: 16046 1 15661\n",
            " Removing values < 1.0 in frame 16047\n",
            "Frame: 16047 1 15662\n",
            " Removing values < 1.0 in frame 16048\n",
            "Frame: 16048 1 15663\n",
            " Removing values < 1.0 in frame 16049\n",
            "Frame: 16049 1 15664\n",
            " Removing values < 1.0 in frame 16050\n",
            "Frame: 16050 1 15665\n",
            " Removing values < 1.0 in frame 16051\n",
            "Frame: 16051 1 15666\n",
            " Removing values < 1.0 in frame 16052\n",
            "Frame: 16052 1 15667\n",
            " Removing values < 1.0 in frame 16053\n",
            "Frame: 16053 1 15668\n",
            " Removing values < 1.0 in frame 16054\n",
            "Frame: 16054 1 15669\n",
            " Removing values < 1.0 in frame 16055\n",
            "Frame: 16055 1 15670\n",
            " Removing values < 1.0 in frame 16056\n",
            "Frame: 16056 1 15671\n",
            " Removing values < 1.0 in frame 16057\n",
            "Frame: 16057 1 15672\n",
            " Removing values < 1.0 in frame 16058\n",
            "Frame: 16058 1 15673\n",
            " Removing values < 1.0 in frame 16059\n",
            "Frame: 16059 1 15674\n",
            " Removing values < 1.0 in frame 16060\n",
            "Frame: 16060 1 15675\n",
            " Removing values < 1.0 in frame 16061\n",
            "Frame: 16061 1 15676\n",
            " Removing values < 1.0 in frame 16062\n",
            "Frame: 16062 1 15677\n",
            " Removing values < 1.0 in frame 16063\n",
            "Frame: 16063 1 15678\n",
            " Removing values < 1.0 in frame 16064\n",
            "Frame: 16064 1 15679\n",
            " Removing values < 1.0 in frame 16065\n",
            "Frame: 16065 1 15680\n",
            " Removing values < 1.0 in frame 16066\n",
            "Frame: 16066 1 15681\n",
            " Removing values < 1.0 in frame 16067\n",
            "Frame: 16067 1 15682\n",
            " Removing values < 1.0 in frame 16068\n",
            "Frame: 16068 1 15683\n",
            " Removing values < 1.0 in frame 16069\n",
            "Frame: 16069 1 15684\n",
            " Removing values < 1.0 in frame 16070\n",
            "Frame: 16070 1 15685\n",
            " Removing values < 1.0 in frame 16071\n",
            "Frame: 16071 1 15686\n",
            " Removing values < 1.0 in frame 16072\n",
            "Frame: 16072 1 15687\n",
            " Removing values < 1.0 in frame 16073\n",
            "Frame: 16073 1 15688\n",
            " Removing values < 1.0 in frame 16074\n",
            "Frame: 16074 1 15689\n",
            " Removing values < 1.0 in frame 16075\n",
            "Frame: 16075 1 15690\n",
            " Removing values < 1.0 in frame 16076\n",
            "Frame: 16076 1 15691\n",
            " Removing values < 1.0 in frame 16077\n",
            "Frame: 16077 1 15692\n",
            " Removing values < 1.0 in frame 16078\n",
            "Frame: 16078 1 15693\n",
            " Removing values < 1.0 in frame 16079\n",
            "Frame: 16079 1 15694\n",
            " Removing values < 1.0 in frame 16080\n",
            "Frame: 16080 1 15695\n",
            " Removing values < 1.0 in frame 16081\n",
            "Frame: 16081 1 15696\n",
            " Removing values < 1.0 in frame 16082\n",
            "Frame: 16082 1 15697\n",
            " Removing values < 1.0 in frame 16083\n",
            "Frame: 16083 1 15698\n",
            " Removing values < 1.0 in frame 16084\n",
            "Frame: 16084 1 15699\n",
            " Removing values < 1.0 in frame 16085\n",
            "Frame: 16085 1 15700\n",
            " Removing values < 1.0 in frame 16086\n",
            "Frame: 16086 0 15700\n",
            " Removing values < 1.0 in frame 16087\n",
            "Frame: 16087 1 15701\n",
            " Removing values < 1.0 in frame 16088\n",
            "Frame: 16088 1 15702\n",
            " Removing values < 1.0 in frame 16089\n",
            "Frame: 16089 1 15703\n",
            " Removing values < 1.0 in frame 16090\n",
            "Frame: 16090 1 15704\n",
            " Removing values < 1.0 in frame 16091\n",
            "Frame: 16091 1 15705\n",
            " Removing values < 1.0 in frame 16092\n",
            "Frame: 16092 1 15706\n",
            " Removing values < 1.0 in frame 16093\n",
            "Frame: 16093 1 15707\n",
            " Removing values < 1.0 in frame 16094\n",
            "Frame: 16094 1 15708\n",
            " Removing values < 1.0 in frame 16095\n",
            "Frame: 16095 1 15709\n",
            " Removing values < 1.0 in frame 16096\n",
            "Frame: 16096 1 15710\n",
            " Removing values < 1.0 in frame 16097\n",
            "Frame: 16097 1 15711\n",
            " Removing values < 1.0 in frame 16098\n",
            "Frame: 16098 1 15712\n",
            " Removing values < 1.0 in frame 16099\n",
            "Frame: 16099 1 15713\n",
            " Removing values < 1.0 in frame 16100\n",
            "Frame: 16100 1 15714\n",
            " Removing values < 1.0 in frame 16101\n",
            "Frame: 16101 1 15715\n",
            " Removing values < 1.0 in frame 16102\n",
            "Frame: 16102 1 15716\n",
            " Removing values < 1.0 in frame 16103\n",
            "Frame: 16103 1 15717\n",
            " Removing values < 1.0 in frame 16104\n",
            "Frame: 16104 1 15718\n",
            " Removing values < 1.0 in frame 16105\n",
            "Frame: 16105 1 15719\n",
            " Removing values < 1.0 in frame 16106\n",
            "Frame: 16106 1 15720\n",
            " Removing values < 1.0 in frame 16107\n",
            "Frame: 16107 1 15721\n",
            " Removing values < 1.0 in frame 16108\n",
            "Frame: 16108 1 15722\n",
            " Removing values < 1.0 in frame 16109\n",
            "Frame: 16109 1 15723\n",
            " Removing values < 1.0 in frame 16110\n",
            "Frame: 16110 1 15724\n",
            " Removing values < 1.0 in frame 16111\n",
            "Frame: 16111 1 15725\n",
            " Removing values < 1.0 in frame 16112\n",
            "Frame: 16112 1 15726\n",
            " Removing values < 1.0 in frame 16113\n",
            "Frame: 16113 1 15727\n",
            " Removing values < 1.0 in frame 16114\n",
            "Frame: 16114 1 15728\n",
            " Removing values < 1.0 in frame 16115\n",
            "Frame: 16115 1 15729\n",
            " Removing values < 1.0 in frame 16116\n",
            "Frame: 16116 1 15730\n",
            " Removing values < 1.0 in frame 16117\n",
            "Frame: 16117 1 15731\n",
            " Removing values < 1.0 in frame 16118\n",
            "Frame: 16118 1 15732\n",
            " Removing values < 1.0 in frame 16119\n",
            "Frame: 16119 1 15733\n",
            " Removing values < 1.0 in frame 16120\n",
            "Frame: 16120 1 15734\n",
            " Removing values < 1.0 in frame 16121\n",
            "Frame: 16121 1 15735\n",
            " Removing values < 1.0 in frame 16122\n",
            "Frame: 16122 1 15736\n",
            " Removing values < 1.0 in frame 16123\n",
            "Frame: 16123 1 15737\n",
            " Removing values < 1.0 in frame 16124\n",
            "Frame: 16124 1 15738\n",
            " Removing values < 1.0 in frame 16125\n",
            "Frame: 16125 1 15739\n",
            " Removing values < 1.0 in frame 16126\n",
            "Frame: 16126 1 15740\n",
            " Removing values < 1.0 in frame 16127\n",
            "Frame: 16127 1 15741\n",
            " Removing values < 1.0 in frame 16128\n",
            "Frame: 16128 1 15742\n",
            " Removing values < 1.0 in frame 16129\n",
            "Frame: 16129 1 15743\n",
            " Removing values < 1.0 in frame 16130\n",
            "Frame: 16130 1 15744\n",
            " Removing values < 1.0 in frame 16131\n",
            "Frame: 16131 1 15745\n",
            " Removing values < 1.0 in frame 16132\n",
            "Frame: 16132 1 15746\n",
            " Removing values < 1.0 in frame 16133\n",
            "Frame: 16133 1 15747\n",
            " Removing values < 1.0 in frame 16134\n",
            "Frame: 16134 1 15748\n",
            " Removing values < 1.0 in frame 16135\n",
            "Frame: 16135 1 15749\n",
            " Removing values < 1.0 in frame 16136\n",
            "Frame: 16136 1 15750\n",
            " Removing values < 1.0 in frame 16137\n",
            "Frame: 16137 1 15751\n",
            " Removing values < 1.0 in frame 16138\n",
            "Frame: 16138 1 15752\n",
            " Removing values < 1.0 in frame 16139\n",
            "Frame: 16139 1 15753\n",
            " Removing values < 1.0 in frame 16140\n",
            "Frame: 16140 1 15754\n",
            " Removing values < 1.0 in frame 16141\n",
            "Frame: 16141 1 15755\n",
            " Removing values < 1.0 in frame 16142\n",
            "Frame: 16142 1 15756\n",
            " Removing values < 1.0 in frame 16143\n",
            "Frame: 16143 1 15757\n",
            " Removing values < 1.0 in frame 16144\n",
            "Frame: 16144 1 15758\n",
            " Removing values < 1.0 in frame 16145\n",
            "Frame: 16145 1 15759\n",
            " Removing values < 1.0 in frame 16146\n",
            "Frame: 16146 1 15760\n",
            " Removing values < 1.0 in frame 16147\n",
            "Frame: 16147 1 15761\n",
            " Removing values < 1.0 in frame 16148\n",
            "Frame: 16148 1 15762\n",
            " Removing values < 1.0 in frame 16149\n",
            "Frame: 16149 1 15763\n",
            " Removing values < 1.0 in frame 16150\n",
            "Frame: 16150 1 15764\n",
            " Removing values < 1.0 in frame 16151\n",
            "Frame: 16151 1 15765\n",
            " Removing values < 1.0 in frame 16152\n",
            "Frame: 16152 1 15766\n",
            " Removing values < 1.0 in frame 16153\n",
            "Frame: 16153 1 15767\n",
            " Removing values < 1.0 in frame 16154\n",
            "Frame: 16154 1 15768\n",
            " Removing values < 1.0 in frame 16155\n",
            "Frame: 16155 1 15769\n",
            " Removing values < 1.0 in frame 16156\n",
            "Frame: 16156 1 15770\n",
            " Removing values < 1.0 in frame 16157\n",
            "Frame: 16157 1 15771\n",
            " Removing values < 1.0 in frame 16158\n",
            "Frame: 16158 1 15772\n",
            " Removing values < 1.0 in frame 16159\n",
            "Frame: 16159 1 15773\n",
            " Removing values < 1.0 in frame 16160\n",
            "Frame: 16160 1 15774\n",
            " Removing values < 1.0 in frame 16161\n",
            "Frame: 16161 1 15775\n",
            " Removing values < 1.0 in frame 16162\n",
            "Frame: 16162 1 15776\n",
            " Removing values < 1.0 in frame 16163\n",
            "Frame: 16163 1 15777\n",
            " Removing values < 1.0 in frame 16164\n",
            "Frame: 16164 1 15778\n",
            " Removing values < 1.0 in frame 16165\n",
            "Frame: 16165 1 15779\n",
            " Removing values < 1.0 in frame 16166\n",
            "Frame: 16166 1 15780\n",
            " Removing values < 1.0 in frame 16167\n",
            "Frame: 16167 1 15781\n",
            " Removing values < 1.0 in frame 16168\n",
            "Frame: 16168 1 15782\n",
            " Removing values < 1.0 in frame 16169\n",
            "Frame: 16169 1 15783\n",
            " Removing values < 1.0 in frame 16170\n",
            "Frame: 16170 1 15784\n",
            " Removing values < 1.0 in frame 16171\n",
            "Frame: 16171 1 15785\n",
            " Removing values < 1.0 in frame 16172\n",
            "Frame: 16172 1 15786\n",
            " Removing values < 1.0 in frame 16173\n",
            "Frame: 16173 1 15787\n",
            " Removing values < 1.0 in frame 16174\n",
            "Frame: 16174 1 15788\n",
            " Removing values < 1.0 in frame 16175\n",
            "Frame: 16175 1 15789\n",
            " Removing values < 1.0 in frame 16176\n",
            "Frame: 16176 1 15790\n",
            " Removing values < 1.0 in frame 16177\n",
            "Frame: 16177 1 15791\n",
            " Removing values < 1.0 in frame 16178\n",
            "Frame: 16178 1 15792\n",
            " Removing values < 1.0 in frame 16179\n",
            "Frame: 16179 1 15793\n",
            " Removing values < 1.0 in frame 16180\n",
            "Frame: 16180 1 15794\n",
            " Removing values < 1.0 in frame 16181\n",
            "Frame: 16181 1 15795\n",
            " Removing values < 1.0 in frame 16182\n",
            "Frame: 16182 1 15796\n",
            " Removing values < 1.0 in frame 16183\n",
            "Frame: 16183 1 15797\n",
            " Removing values < 1.0 in frame 16184\n",
            "Frame: 16184 1 15798\n",
            " Removing values < 1.0 in frame 16185\n",
            "Frame: 16185 1 15799\n",
            " Removing values < 1.0 in frame 16186\n",
            "Frame: 16186 1 15800\n",
            " Removing values < 1.0 in frame 16187\n",
            "Frame: 16187 0 15800\n",
            " Removing values < 1.0 in frame 16188\n",
            "Frame: 16188 1 15801\n",
            " Removing values < 1.0 in frame 16189\n",
            "Frame: 16189 1 15802\n",
            " Removing values < 1.0 in frame 16190\n",
            "Frame: 16190 1 15803\n",
            " Removing values < 1.0 in frame 16191\n",
            "Frame: 16191 1 15804\n",
            " Removing values < 1.0 in frame 16192\n",
            "Frame: 16192 0 15804\n",
            " Removing values < 1.0 in frame 16193\n",
            "Frame: 16193 1 15805\n",
            " Removing values < 1.0 in frame 16194\n",
            "Frame: 16194 1 15806\n",
            " Removing values < 1.0 in frame 16195\n",
            "Frame: 16195 1 15807\n",
            " Removing values < 1.0 in frame 16196\n",
            "Frame: 16196 1 15808\n",
            " Removing values < 1.0 in frame 16197\n",
            "Frame: 16197 1 15809\n",
            " Removing values < 1.0 in frame 16198\n",
            "Frame: 16198 1 15810\n",
            " Removing values < 1.0 in frame 16199\n",
            "Frame: 16199 1 15811\n",
            " Removing values < 1.0 in frame 16200\n",
            "Frame: 16200 1 15812\n",
            " Removing values < 1.0 in frame 16201\n",
            "Frame: 16201 1 15813\n",
            " Removing values < 1.0 in frame 16202\n",
            "Frame: 16202 1 15814\n",
            " Removing values < 1.0 in frame 16203\n",
            "Frame: 16203 1 15815\n",
            " Removing values < 1.0 in frame 16204\n",
            "Frame: 16204 1 15816\n",
            " Removing values < 1.0 in frame 16205\n",
            "Frame: 16205 1 15817\n",
            " Removing values < 1.0 in frame 16206\n",
            "Frame: 16206 1 15818\n",
            " Removing values < 1.0 in frame 16207\n",
            "Frame: 16207 1 15819\n",
            " Removing values < 1.0 in frame 16208\n",
            "Frame: 16208 1 15820\n",
            " Removing values < 1.0 in frame 16209\n",
            "Frame: 16209 1 15821\n",
            " Removing values < 1.0 in frame 16210\n",
            "Frame: 16210 1 15822\n",
            " Removing values < 1.0 in frame 16211\n",
            "Frame: 16211 1 15823\n",
            " Removing values < 1.0 in frame 16212\n",
            "Frame: 16212 1 15824\n",
            " Removing values < 1.0 in frame 16213\n",
            "Frame: 16213 1 15825\n",
            " Removing values < 1.0 in frame 16214\n",
            "Frame: 16214 1 15826\n",
            " Removing values < 1.0 in frame 16215\n",
            "Frame: 16215 1 15827\n",
            " Removing values < 1.0 in frame 16216\n",
            "Frame: 16216 1 15828\n",
            " Removing values < 1.0 in frame 16217\n",
            "Frame: 16217 1 15829\n",
            " Removing values < 1.0 in frame 16218\n",
            "Frame: 16218 1 15830\n",
            " Removing values < 1.0 in frame 16219\n",
            "Frame: 16219 1 15831\n",
            " Removing values < 1.0 in frame 16220\n",
            "Frame: 16220 1 15832\n",
            " Removing values < 1.0 in frame 16221\n",
            "Frame: 16221 1 15833\n",
            " Removing values < 1.0 in frame 16222\n",
            "Frame: 16222 0 15833\n",
            " Removing values < 1.0 in frame 16223\n",
            "Frame: 16223 1 15834\n",
            " Removing values < 1.0 in frame 16224\n",
            "Frame: 16224 0 15834\n",
            " Removing values < 1.0 in frame 16225\n",
            "Frame: 16225 0 15834\n",
            " Removing values < 1.0 in frame 16226\n",
            "Frame: 16226 1 15835\n",
            " Removing values < 1.0 in frame 16227\n",
            "Frame: 16227 1 15836\n",
            " Removing values < 1.0 in frame 16228\n",
            "Frame: 16228 1 15837\n",
            " Removing values < 1.0 in frame 16229\n",
            "Frame: 16229 1 15838\n",
            " Removing values < 1.0 in frame 16230\n",
            "Frame: 16230 1 15839\n",
            " Removing values < 1.0 in frame 16231\n",
            "Frame: 16231 0 15839\n",
            " Removing values < 1.0 in frame 16232\n",
            "Frame: 16232 1 15840\n",
            " Removing values < 1.0 in frame 16233\n",
            "Frame: 16233 1 15841\n",
            " Removing values < 1.0 in frame 16234\n",
            "Frame: 16234 1 15842\n",
            " Removing values < 1.0 in frame 16235\n",
            "Frame: 16235 1 15843\n",
            " Removing values < 1.0 in frame 16236\n",
            "Frame: 16236 1 15844\n",
            " Removing values < 1.0 in frame 16237\n",
            "Frame: 16237 1 15845\n",
            " Removing values < 1.0 in frame 16238\n",
            "Frame: 16238 1 15846\n",
            " Removing values < 1.0 in frame 16239\n",
            "Frame: 16239 1 15847\n",
            " Removing values < 1.0 in frame 16240\n",
            "Frame: 16240 1 15848\n",
            " Removing values < 1.0 in frame 16241\n",
            "Frame: 16241 1 15849\n",
            " Removing values < 1.0 in frame 16242\n",
            "Frame: 16242 1 15850\n",
            " Removing values < 1.0 in frame 16243\n",
            "Frame: 16243 1 15851\n",
            " Removing values < 1.0 in frame 16244\n",
            "Frame: 16244 1 15852\n",
            " Removing values < 1.0 in frame 16245\n",
            "Frame: 16245 1 15853\n",
            " Removing values < 1.0 in frame 16246\n",
            "Frame: 16246 1 15854\n",
            " Removing values < 1.0 in frame 16247\n",
            "Frame: 16247 1 15855\n",
            " Removing values < 1.0 in frame 16248\n",
            "Frame: 16248 1 15856\n",
            " Removing values < 1.0 in frame 16249\n",
            "Frame: 16249 1 15857\n",
            " Removing values < 1.0 in frame 16250\n",
            "Frame: 16250 1 15858\n",
            " Removing values < 1.0 in frame 16251\n",
            "Frame: 16251 1 15859\n",
            " Removing values < 1.0 in frame 16252\n",
            "Frame: 16252 1 15860\n",
            " Removing values < 1.0 in frame 16253\n",
            "Frame: 16253 1 15861\n",
            " Removing values < 1.0 in frame 16254\n",
            "Frame: 16254 1 15862\n",
            " Removing values < 1.0 in frame 16255\n",
            "Frame: 16255 1 15863\n",
            " Removing values < 1.0 in frame 16256\n",
            "Frame: 16256 1 15864\n",
            " Removing values < 1.0 in frame 16257\n",
            "Frame: 16257 1 15865\n",
            " Removing values < 1.0 in frame 16258\n",
            "Frame: 16258 1 15866\n",
            " Removing values < 1.0 in frame 16259\n",
            "Frame: 16259 1 15867\n",
            " Removing values < 1.0 in frame 16260\n",
            "Frame: 16260 1 15868\n",
            " Removing values < 1.0 in frame 16261\n",
            "Frame: 16261 1 15869\n",
            " Removing values < 1.0 in frame 16262\n",
            "Frame: 16262 1 15870\n",
            " Removing values < 1.0 in frame 16263\n",
            "Frame: 16263 1 15871\n",
            " Removing values < 1.0 in frame 16264\n",
            "Frame: 16264 1 15872\n",
            " Removing values < 1.0 in frame 16265\n",
            "Frame: 16265 1 15873\n",
            " Removing values < 1.0 in frame 16266\n",
            "Frame: 16266 1 15874\n",
            " Removing values < 1.0 in frame 16267\n",
            "Frame: 16267 1 15875\n",
            " Removing values < 1.0 in frame 16268\n",
            "Frame: 16268 1 15876\n",
            " Removing values < 1.0 in frame 16269\n",
            "Frame: 16269 1 15877\n",
            " Removing values < 1.0 in frame 16270\n",
            "Frame: 16270 1 15878\n",
            " Removing values < 1.0 in frame 16271\n",
            "Frame: 16271 1 15879\n",
            " Removing values < 1.0 in frame 16272\n",
            "Frame: 16272 1 15880\n",
            " Removing values < 1.0 in frame 16273\n",
            "Frame: 16273 1 15881\n",
            " Removing values < 1.0 in frame 16274\n",
            "Frame: 16274 1 15882\n",
            " Removing values < 1.0 in frame 16275\n",
            "Frame: 16275 1 15883\n",
            " Removing values < 1.0 in frame 16276\n",
            "Frame: 16276 1 15884\n",
            " Removing values < 1.0 in frame 16277\n",
            "Frame: 16277 1 15885\n",
            " Removing values < 1.0 in frame 16278\n",
            "Frame: 16278 1 15886\n",
            " Removing values < 1.0 in frame 16279\n",
            "Frame: 16279 1 15887\n",
            " Removing values < 1.0 in frame 16280\n",
            "Frame: 16280 1 15888\n",
            " Removing values < 1.0 in frame 16281\n",
            "Frame: 16281 1 15889\n",
            " Removing values < 1.0 in frame 16282\n",
            "Frame: 16282 1 15890\n",
            " Removing values < 1.0 in frame 16283\n",
            "Frame: 16283 1 15891\n",
            " Removing values < 1.0 in frame 16284\n",
            "Frame: 16284 1 15892\n",
            " Removing values < 1.0 in frame 16285\n",
            "Frame: 16285 1 15893\n",
            " Removing values < 1.0 in frame 16286\n",
            "Frame: 16286 1 15894\n",
            " Removing values < 1.0 in frame 16287\n",
            "Frame: 16287 1 15895\n",
            " Removing values < 1.0 in frame 16288\n",
            "Frame: 16288 1 15896\n",
            " Removing values < 1.0 in frame 16289\n",
            "Frame: 16289 1 15897\n",
            " Removing values < 1.0 in frame 16290\n",
            "Frame: 16290 1 15898\n",
            " Removing values < 1.0 in frame 16291\n",
            "Frame: 16291 1 15899\n",
            " Removing values < 1.0 in frame 16292\n",
            "Frame: 16292 1 15900\n",
            " Removing values < 1.0 in frame 16293\n",
            "Frame: 16293 1 15901\n",
            " Removing values < 1.0 in frame 16294\n",
            "Frame: 16294 1 15902\n",
            " Removing values < 1.0 in frame 16295\n",
            "Frame: 16295 1 15903\n",
            " Removing values < 1.0 in frame 16296\n",
            "Frame: 16296 1 15904\n",
            " Removing values < 1.0 in frame 16297\n",
            "Frame: 16297 1 15905\n",
            " Removing values < 1.0 in frame 16298\n",
            "Frame: 16298 1 15906\n",
            " Removing values < 1.0 in frame 16299\n",
            "Frame: 16299 1 15907\n",
            " Removing values < 1.0 in frame 16300\n",
            "Frame: 16300 0 15907\n",
            " Removing values < 1.0 in frame 16301\n",
            "Frame: 16301 1 15908\n",
            " Removing values < 1.0 in frame 16302\n",
            "Frame: 16302 1 15909\n",
            " Removing values < 1.0 in frame 16303\n",
            "Frame: 16303 1 15910\n",
            " Removing values < 1.0 in frame 16304\n",
            "Frame: 16304 1 15911\n",
            " Removing values < 1.0 in frame 16305\n",
            "Frame: 16305 1 15912\n",
            " Removing values < 1.0 in frame 16306\n",
            "Frame: 16306 1 15913\n",
            " Removing values < 1.0 in frame 16307\n",
            "Frame: 16307 1 15914\n",
            " Removing values < 1.0 in frame 16308\n",
            "Frame: 16308 1 15915\n",
            " Removing values < 1.0 in frame 16309\n",
            "Frame: 16309 1 15916\n",
            " Removing values < 1.0 in frame 16310\n",
            "Frame: 16310 1 15917\n",
            " Removing values < 1.0 in frame 16311\n",
            "Frame: 16311 1 15918\n",
            " Removing values < 1.0 in frame 16312\n",
            "Frame: 16312 1 15919\n",
            " Removing values < 1.0 in frame 16313\n",
            "Frame: 16313 1 15920\n",
            " Removing values < 1.0 in frame 16314\n",
            "Frame: 16314 1 15921\n",
            " Removing values < 1.0 in frame 16315\n",
            "Frame: 16315 1 15922\n",
            " Removing values < 1.0 in frame 16316\n",
            "Frame: 16316 1 15923\n",
            " Removing values < 1.0 in frame 16317\n",
            "Frame: 16317 1 15924\n",
            " Removing values < 1.0 in frame 16318\n",
            "Frame: 16318 1 15925\n",
            " Removing values < 1.0 in frame 16319\n",
            "Frame: 16319 1 15926\n",
            " Removing values < 1.0 in frame 16320\n",
            "Frame: 16320 1 15927\n",
            " Removing values < 1.0 in frame 16321\n",
            "Frame: 16321 1 15928\n",
            " Removing values < 1.0 in frame 16322\n",
            "Frame: 16322 1 15929\n",
            " Removing values < 1.0 in frame 16323\n",
            "Frame: 16323 1 15930\n",
            " Removing values < 1.0 in frame 16324\n",
            "Frame: 16324 1 15931\n",
            " Removing values < 1.0 in frame 16325\n",
            "Frame: 16325 1 15932\n",
            " Removing values < 1.0 in frame 16326\n",
            "Frame: 16326 0 15932\n",
            " Removing values < 1.0 in frame 16327\n",
            "Frame: 16327 1 15933\n",
            " Removing values < 1.0 in frame 16328\n",
            "Frame: 16328 1 15934\n",
            " Removing values < 1.0 in frame 16329\n",
            "Frame: 16329 1 15935\n",
            " Removing values < 1.0 in frame 16330\n",
            "Frame: 16330 1 15936\n",
            " Removing values < 1.0 in frame 16331\n",
            "Frame: 16331 1 15937\n",
            " Removing values < 1.0 in frame 16332\n",
            "Frame: 16332 1 15938\n",
            " Removing values < 1.0 in frame 16333\n",
            "Frame: 16333 1 15939\n",
            " Removing values < 1.0 in frame 16334\n",
            "Frame: 16334 1 15940\n",
            " Removing values < 1.0 in frame 16335\n",
            "Frame: 16335 1 15941\n",
            " Removing values < 1.0 in frame 16336\n",
            "Frame: 16336 1 15942\n",
            " Removing values < 1.0 in frame 16337\n",
            "Frame: 16337 1 15943\n",
            " Removing values < 1.0 in frame 16338\n",
            "Frame: 16338 1 15944\n",
            " Removing values < 1.0 in frame 16339\n",
            "Frame: 16339 1 15945\n",
            " Removing values < 1.0 in frame 16340\n",
            "Frame: 16340 0 15945\n",
            " Removing values < 1.0 in frame 16341\n",
            "Frame: 16341 1 15946\n",
            " Removing values < 1.0 in frame 16342\n",
            "Frame: 16342 1 15947\n",
            " Removing values < 1.0 in frame 16343\n",
            "Frame: 16343 1 15948\n",
            " Removing values < 1.0 in frame 16344\n",
            "Frame: 16344 1 15949\n",
            " Removing values < 1.0 in frame 16345\n",
            "Frame: 16345 1 15950\n",
            " Removing values < 1.0 in frame 16346\n",
            "Frame: 16346 0 15950\n",
            " Removing values < 1.0 in frame 16347\n",
            "Frame: 16347 1 15951\n",
            " Removing values < 1.0 in frame 16348\n",
            "Frame: 16348 1 15952\n",
            " Removing values < 1.0 in frame 16349\n",
            "Frame: 16349 1 15953\n",
            " Removing values < 1.0 in frame 16350\n",
            "Frame: 16350 0 15953\n",
            " Removing values < 1.0 in frame 16351\n",
            "Frame: 16351 1 15954\n",
            " Removing values < 1.0 in frame 16352\n",
            "Frame: 16352 1 15955\n",
            " Removing values < 1.0 in frame 16353\n",
            "Frame: 16353 1 15956\n",
            " Removing values < 1.0 in frame 16354\n",
            "Frame: 16354 1 15957\n",
            " Removing values < 1.0 in frame 16355\n",
            "Frame: 16355 1 15958\n",
            " Removing values < 1.0 in frame 16356\n",
            "Frame: 16356 1 15959\n",
            " Removing values < 1.0 in frame 16357\n",
            "Frame: 16357 1 15960\n",
            " Removing values < 1.0 in frame 16358\n",
            "Frame: 16358 1 15961\n",
            " Removing values < 1.0 in frame 16359\n",
            "Frame: 16359 1 15962\n",
            " Removing values < 1.0 in frame 16360\n",
            "Frame: 16360 1 15963\n",
            " Removing values < 1.0 in frame 16361\n",
            "Frame: 16361 1 15964\n",
            " Removing values < 1.0 in frame 16362\n",
            "Frame: 16362 1 15965\n",
            " Removing values < 1.0 in frame 16363\n",
            "Frame: 16363 1 15966\n",
            " Removing values < 1.0 in frame 16364\n",
            "Frame: 16364 1 15967\n",
            " Removing values < 1.0 in frame 16365\n",
            "Frame: 16365 1 15968\n",
            " Removing values < 1.0 in frame 16366\n",
            "Frame: 16366 1 15969\n",
            " Removing values < 1.0 in frame 16367\n",
            "Frame: 16367 1 15970\n",
            " Removing values < 1.0 in frame 16368\n",
            "Frame: 16368 1 15971\n",
            " Removing values < 1.0 in frame 16369\n",
            "Frame: 16369 1 15972\n",
            " Removing values < 1.0 in frame 16370\n",
            "Frame: 16370 1 15973\n",
            " Removing values < 1.0 in frame 16371\n",
            "Frame: 16371 1 15974\n",
            " Removing values < 1.0 in frame 16372\n",
            "Frame: 16372 1 15975\n",
            " Removing values < 1.0 in frame 16373\n",
            "Frame: 16373 1 15976\n",
            " Removing values < 1.0 in frame 16374\n",
            "Frame: 16374 1 15977\n",
            " Removing values < 1.0 in frame 16375\n",
            "Frame: 16375 1 15978\n",
            " Removing values < 1.0 in frame 16376\n",
            "Frame: 16376 1 15979\n",
            " Removing values < 1.0 in frame 16377\n",
            "Frame: 16377 1 15980\n",
            " Removing values < 1.0 in frame 16378\n",
            "Frame: 16378 1 15981\n",
            " Removing values < 1.0 in frame 16379\n",
            "Frame: 16379 1 15982\n",
            " Removing values < 1.0 in frame 16380\n",
            "Frame: 16380 1 15983\n",
            " Removing values < 1.0 in frame 16381\n",
            "Frame: 16381 1 15984\n",
            " Removing values < 1.0 in frame 16382\n",
            "Frame: 16382 1 15985\n",
            " Removing values < 1.0 in frame 16383\n",
            "Frame: 16383 1 15986\n",
            " Removing values < 1.0 in frame 16384\n",
            "Frame: 16384 1 15987\n",
            " Removing values < 1.0 in frame 16385\n",
            "Frame: 16385 1 15988\n",
            " Removing values < 1.0 in frame 16386\n",
            "Frame: 16386 1 15989\n",
            " Removing values < 1.0 in frame 16387\n",
            "Frame: 16387 1 15990\n",
            " Removing values < 1.0 in frame 16388\n",
            "Frame: 16388 1 15991\n",
            " Removing values < 1.0 in frame 16389\n",
            "Frame: 16389 1 15992\n",
            " Removing values < 1.0 in frame 16390\n",
            "Frame: 16390 1 15993\n",
            " Removing values < 1.0 in frame 16391\n",
            "Frame: 16391 1 15994\n",
            " Removing values < 1.0 in frame 16392\n",
            "Frame: 16392 1 15995\n",
            " Removing values < 1.0 in frame 16393\n",
            "Frame: 16393 1 15996\n",
            " Removing values < 1.0 in frame 16394\n",
            "Frame: 16394 1 15997\n",
            " Removing values < 1.0 in frame 16395\n",
            "Frame: 16395 1 15998\n",
            " Removing values < 1.0 in frame 16396\n",
            "Frame: 16396 1 15999\n",
            " Removing values < 1.0 in frame 16397\n",
            "Frame: 16397 1 16000\n",
            " Removing values < 1.0 in frame 16398\n",
            "Frame: 16398 1 16001\n",
            " Removing values < 1.0 in frame 16399\n",
            "Frame: 16399 1 16002\n",
            " Removing values < 1.0 in frame 16400\n",
            "Frame: 16400 1 16003\n",
            " Removing values < 1.0 in frame 16401\n",
            "Frame: 16401 1 16004\n",
            " Removing values < 1.0 in frame 16402\n",
            "Frame: 16402 1 16005\n",
            " Removing values < 1.0 in frame 16403\n",
            "Frame: 16403 1 16006\n",
            " Removing values < 1.0 in frame 16404\n",
            "Frame: 16404 1 16007\n",
            " Removing values < 1.0 in frame 16405\n",
            "Frame: 16405 1 16008\n",
            " Removing values < 1.0 in frame 16406\n",
            "Frame: 16406 1 16009\n",
            " Removing values < 1.0 in frame 16407\n",
            "Frame: 16407 1 16010\n",
            " Removing values < 1.0 in frame 16408\n",
            "Frame: 16408 1 16011\n",
            " Removing values < 1.0 in frame 16409\n",
            "Frame: 16409 1 16012\n",
            " Removing values < 1.0 in frame 16410\n",
            "Frame: 16410 1 16013\n",
            " Removing values < 1.0 in frame 16411\n",
            "Frame: 16411 1 16014\n",
            " Removing values < 1.0 in frame 16412\n",
            "Frame: 16412 1 16015\n",
            " Removing values < 1.0 in frame 16413\n",
            "Frame: 16413 1 16016\n",
            " Removing values < 1.0 in frame 16414\n",
            "Frame: 16414 1 16017\n",
            " Removing values < 1.0 in frame 16415\n",
            "Frame: 16415 1 16018\n",
            " Removing values < 1.0 in frame 16416\n",
            "Frame: 16416 1 16019\n",
            " Removing values < 1.0 in frame 16417\n",
            "Frame: 16417 1 16020\n",
            " Removing values < 1.0 in frame 16418\n",
            "Frame: 16418 1 16021\n",
            " Removing values < 1.0 in frame 16419\n",
            "Frame: 16419 1 16022\n",
            " Removing values < 1.0 in frame 16420\n",
            "Frame: 16420 1 16023\n",
            " Removing values < 1.0 in frame 16421\n",
            "Frame: 16421 1 16024\n",
            " Removing values < 1.0 in frame 16422\n",
            "Frame: 16422 1 16025\n",
            " Removing values < 1.0 in frame 16423\n",
            "Frame: 16423 1 16026\n",
            " Removing values < 1.0 in frame 16424\n",
            "Frame: 16424 1 16027\n",
            " Removing values < 1.0 in frame 16425\n",
            "Frame: 16425 1 16028\n",
            " Removing values < 1.0 in frame 16426\n",
            "Frame: 16426 1 16029\n",
            " Removing values < 1.0 in frame 16427\n",
            "Frame: 16427 1 16030\n",
            " Removing values < 1.0 in frame 16428\n",
            "Frame: 16428 1 16031\n",
            " Removing values < 1.0 in frame 16429\n",
            "Frame: 16429 1 16032\n",
            " Removing values < 1.0 in frame 16430\n",
            "Frame: 16430 1 16033\n",
            " Removing values < 1.0 in frame 16431\n",
            "Frame: 16431 1 16034\n",
            " Removing values < 1.0 in frame 16432\n",
            "Frame: 16432 1 16035\n",
            " Removing values < 1.0 in frame 16433\n",
            "Frame: 16433 1 16036\n",
            " Removing values < 1.0 in frame 16434\n",
            "Frame: 16434 1 16037\n",
            " Removing values < 1.0 in frame 16435\n",
            "Frame: 16435 1 16038\n",
            " Removing values < 1.0 in frame 16436\n",
            "Frame: 16436 1 16039\n",
            " Removing values < 1.0 in frame 16437\n",
            "Frame: 16437 1 16040\n",
            " Removing values < 1.0 in frame 16438\n",
            "Frame: 16438 1 16041\n",
            " Removing values < 1.0 in frame 16439\n",
            "Frame: 16439 1 16042\n",
            " Removing values < 1.0 in frame 16440\n",
            "Frame: 16440 1 16043\n",
            " Removing values < 1.0 in frame 16441\n",
            "Frame: 16441 1 16044\n",
            " Removing values < 1.0 in frame 16442\n",
            "Frame: 16442 1 16045\n",
            " Removing values < 1.0 in frame 16443\n",
            "Frame: 16443 1 16046\n",
            " Removing values < 1.0 in frame 16444\n",
            "Frame: 16444 0 16046\n",
            " Removing values < 1.0 in frame 16445\n",
            "Frame: 16445 1 16047\n",
            " Removing values < 1.0 in frame 16446\n",
            "Frame: 16446 1 16048\n",
            " Removing values < 1.0 in frame 16447\n",
            "Frame: 16447 1 16049\n",
            " Removing values < 1.0 in frame 16448\n",
            "Frame: 16448 1 16050\n",
            " Removing values < 1.0 in frame 16449\n",
            "Frame: 16449 1 16051\n",
            " Removing values < 1.0 in frame 16450\n",
            "Frame: 16450 1 16052\n",
            " Removing values < 1.0 in frame 16451\n",
            "Frame: 16451 1 16053\n",
            " Removing values < 1.0 in frame 16452\n",
            "Frame: 16452 1 16054\n",
            " Removing values < 1.0 in frame 16453\n",
            "Frame: 16453 1 16055\n",
            " Removing values < 1.0 in frame 16454\n",
            "Frame: 16454 1 16056\n",
            " Removing values < 1.0 in frame 16455\n",
            "Frame: 16455 1 16057\n",
            " Removing values < 1.0 in frame 16456\n",
            "Frame: 16456 1 16058\n",
            " Removing values < 1.0 in frame 16457\n",
            "Frame: 16457 1 16059\n",
            " Removing values < 1.0 in frame 16458\n",
            "Frame: 16458 1 16060\n",
            " Removing values < 1.0 in frame 16459\n",
            "Frame: 16459 1 16061\n",
            " Removing values < 1.0 in frame 16460\n",
            "Frame: 16460 1 16062\n",
            " Removing values < 1.0 in frame 16461\n",
            "Frame: 16461 1 16063\n",
            " Removing values < 1.0 in frame 16462\n",
            "Frame: 16462 1 16064\n",
            " Removing values < 1.0 in frame 16463\n",
            "Frame: 16463 1 16065\n",
            " Removing values < 1.0 in frame 16464\n",
            "Frame: 16464 1 16066\n",
            " Removing values < 1.0 in frame 16465\n",
            "Frame: 16465 1 16067\n",
            " Removing values < 1.0 in frame 16466\n",
            "Frame: 16466 1 16068\n",
            " Removing values < 1.0 in frame 16467\n",
            "Frame: 16467 1 16069\n",
            " Removing values < 1.0 in frame 16468\n",
            "Frame: 16468 1 16070\n",
            " Removing values < 1.0 in frame 16469\n",
            "Frame: 16469 1 16071\n",
            " Removing values < 1.0 in frame 16470\n",
            "Frame: 16470 1 16072\n",
            " Removing values < 1.0 in frame 16471\n",
            "Frame: 16471 0 16072\n",
            " Removing values < 1.0 in frame 16472\n",
            "Frame: 16472 1 16073\n",
            " Removing values < 1.0 in frame 16473\n",
            "Frame: 16473 1 16074\n",
            " Removing values < 1.0 in frame 16474\n",
            "Frame: 16474 1 16075\n",
            " Removing values < 1.0 in frame 16475\n",
            "Frame: 16475 1 16076\n",
            " Removing values < 1.0 in frame 16476\n",
            "Frame: 16476 1 16077\n",
            " Removing values < 1.0 in frame 16477\n",
            "Frame: 16477 1 16078\n",
            " Removing values < 1.0 in frame 16478\n",
            "Frame: 16478 1 16079\n",
            " Removing values < 1.0 in frame 16479\n",
            "Frame: 16479 1 16080\n",
            " Removing values < 1.0 in frame 16480\n",
            "Frame: 16480 1 16081\n",
            " Removing values < 1.0 in frame 16481\n",
            "Frame: 16481 1 16082\n",
            " Removing values < 1.0 in frame 16482\n",
            "Frame: 16482 1 16083\n",
            " Removing values < 1.0 in frame 16483\n",
            "Frame: 16483 1 16084\n",
            " Removing values < 1.0 in frame 16484\n",
            "Frame: 16484 1 16085\n",
            " Removing values < 1.0 in frame 16485\n",
            "Frame: 16485 1 16086\n",
            " Removing values < 1.0 in frame 16486\n",
            "Frame: 16486 1 16087\n",
            " Removing values < 1.0 in frame 16487\n",
            "Frame: 16487 1 16088\n",
            " Removing values < 1.0 in frame 16488\n",
            "Frame: 16488 1 16089\n",
            " Removing values < 1.0 in frame 16489\n",
            "Frame: 16489 1 16090\n",
            " Removing values < 1.0 in frame 16490\n",
            "Frame: 16490 1 16091\n",
            " Removing values < 1.0 in frame 16491\n",
            "Frame: 16491 1 16092\n",
            " Removing values < 1.0 in frame 16492\n",
            "Frame: 16492 1 16093\n",
            " Removing values < 1.0 in frame 16493\n",
            "Frame: 16493 1 16094\n",
            " Removing values < 1.0 in frame 16494\n",
            "Frame: 16494 1 16095\n",
            " Removing values < 1.0 in frame 16495\n",
            "Frame: 16495 1 16096\n",
            " Removing values < 1.0 in frame 16496\n",
            "Frame: 16496 1 16097\n",
            " Removing values < 1.0 in frame 16497\n",
            "Frame: 16497 1 16098\n",
            " Removing values < 1.0 in frame 16498\n",
            "Frame: 16498 1 16099\n",
            " Removing values < 1.0 in frame 16499\n",
            "Frame: 16499 1 16100\n",
            " Removing values < 1.0 in frame 16500\n",
            "Frame: 16500 1 16101\n",
            " Removing values < 1.0 in frame 16501\n",
            "Frame: 16501 1 16102\n",
            " Removing values < 1.0 in frame 16502\n",
            "Frame: 16502 1 16103\n",
            " Removing values < 1.0 in frame 16503\n",
            "Frame: 16503 1 16104\n",
            " Removing values < 1.0 in frame 16504\n",
            "Frame: 16504 1 16105\n",
            " Removing values < 1.0 in frame 16505\n",
            "Frame: 16505 1 16106\n",
            " Removing values < 1.0 in frame 16506\n",
            "Frame: 16506 1 16107\n",
            " Removing values < 1.0 in frame 16507\n",
            "Frame: 16507 1 16108\n",
            " Removing values < 1.0 in frame 16508\n",
            "Frame: 16508 1 16109\n",
            " Removing values < 1.0 in frame 16509\n",
            "Frame: 16509 1 16110\n",
            " Removing values < 1.0 in frame 16510\n",
            "Frame: 16510 1 16111\n",
            " Removing values < 1.0 in frame 16511\n",
            "Frame: 16511 1 16112\n",
            " Removing values < 1.0 in frame 16512\n",
            "Frame: 16512 1 16113\n",
            " Removing values < 1.0 in frame 16513\n",
            "Frame: 16513 1 16114\n",
            " Removing values < 1.0 in frame 16514\n",
            "Frame: 16514 1 16115\n",
            " Removing values < 1.0 in frame 16515\n",
            "Frame: 16515 1 16116\n",
            " Removing values < 1.0 in frame 16516\n",
            "Frame: 16516 1 16117\n",
            " Removing values < 1.0 in frame 16517\n",
            "Frame: 16517 1 16118\n",
            " Removing values < 1.0 in frame 16518\n",
            "Frame: 16518 1 16119\n",
            " Removing values < 1.0 in frame 16519\n",
            "Frame: 16519 1 16120\n",
            " Removing values < 1.0 in frame 16520\n",
            "Frame: 16520 1 16121\n",
            " Removing values < 1.0 in frame 16521\n",
            "Frame: 16521 1 16122\n",
            " Removing values < 1.0 in frame 16522\n",
            "Frame: 16522 1 16123\n",
            " Removing values < 1.0 in frame 16523\n",
            "Frame: 16523 1 16124\n",
            " Removing values < 1.0 in frame 16524\n",
            "Frame: 16524 1 16125\n",
            " Removing values < 1.0 in frame 16525\n",
            "Frame: 16525 0 16125\n",
            " Removing values < 1.0 in frame 16526\n",
            "Frame: 16526 1 16126\n",
            " Removing values < 1.0 in frame 16527\n",
            "Frame: 16527 1 16127\n",
            " Removing values < 1.0 in frame 16528\n",
            "Frame: 16528 1 16128\n",
            " Removing values < 1.0 in frame 16529\n",
            "Frame: 16529 1 16129\n",
            " Removing values < 1.0 in frame 16530\n",
            "Frame: 16530 1 16130\n",
            " Removing values < 1.0 in frame 16531\n",
            "Frame: 16531 1 16131\n",
            " Removing values < 1.0 in frame 16532\n",
            "Frame: 16532 1 16132\n",
            " Removing values < 1.0 in frame 16533\n",
            "Frame: 16533 1 16133\n",
            " Removing values < 1.0 in frame 16534\n",
            "Frame: 16534 1 16134\n",
            " Removing values < 1.0 in frame 16535\n",
            "Frame: 16535 1 16135\n",
            " Removing values < 1.0 in frame 16536\n",
            "Frame: 16536 1 16136\n",
            " Removing values < 1.0 in frame 16537\n",
            "Frame: 16537 1 16137\n",
            " Removing values < 1.0 in frame 16538\n",
            "Frame: 16538 1 16138\n",
            " Removing values < 1.0 in frame 16539\n",
            "Frame: 16539 1 16139\n",
            " Removing values < 1.0 in frame 16540\n",
            "Frame: 16540 1 16140\n",
            " Removing values < 1.0 in frame 16541\n",
            "Frame: 16541 1 16141\n",
            " Removing values < 1.0 in frame 16542\n",
            "Frame: 16542 1 16142\n",
            " Removing values < 1.0 in frame 16543\n",
            "Frame: 16543 1 16143\n",
            " Removing values < 1.0 in frame 16544\n",
            "Frame: 16544 1 16144\n",
            " Removing values < 1.0 in frame 16545\n",
            "Frame: 16545 1 16145\n",
            " Removing values < 1.0 in frame 16546\n",
            "Frame: 16546 1 16146\n",
            " Removing values < 1.0 in frame 16547\n",
            "Frame: 16547 1 16147\n",
            " Removing values < 1.0 in frame 16548\n",
            "Frame: 16548 1 16148\n",
            " Removing values < 1.0 in frame 16549\n",
            "Frame: 16549 1 16149\n",
            " Removing values < 1.0 in frame 16550\n",
            "Frame: 16550 1 16150\n",
            " Removing values < 1.0 in frame 16551\n",
            "Frame: 16551 1 16151\n",
            " Removing values < 1.0 in frame 16552\n",
            "Frame: 16552 1 16152\n",
            " Removing values < 1.0 in frame 16553\n",
            "Frame: 16553 1 16153\n",
            " Removing values < 1.0 in frame 16554\n",
            "Frame: 16554 1 16154\n",
            " Removing values < 1.0 in frame 16555\n",
            "Frame: 16555 1 16155\n",
            " Removing values < 1.0 in frame 16556\n",
            "Frame: 16556 1 16156\n",
            " Removing values < 1.0 in frame 16557\n",
            "Frame: 16557 1 16157\n",
            " Removing values < 1.0 in frame 16558\n",
            "Frame: 16558 1 16158\n",
            " Removing values < 1.0 in frame 16559\n",
            "Frame: 16559 1 16159\n",
            " Removing values < 1.0 in frame 16560\n",
            "Frame: 16560 1 16160\n",
            " Removing values < 1.0 in frame 16561\n",
            "Frame: 16561 1 16161\n",
            " Removing values < 1.0 in frame 16562\n",
            "Frame: 16562 1 16162\n",
            " Removing values < 1.0 in frame 16563\n",
            "Frame: 16563 1 16163\n",
            " Removing values < 1.0 in frame 16564\n",
            "Frame: 16564 0 16163\n",
            " Removing values < 1.0 in frame 16565\n",
            "Frame: 16565 1 16164\n",
            " Removing values < 1.0 in frame 16566\n",
            "Frame: 16566 1 16165\n",
            " Removing values < 1.0 in frame 16567\n",
            "Frame: 16567 1 16166\n",
            " Removing values < 1.0 in frame 16568\n",
            "Frame: 16568 1 16167\n",
            " Removing values < 1.0 in frame 16569\n",
            "Frame: 16569 1 16168\n",
            " Removing values < 1.0 in frame 16570\n",
            "Frame: 16570 1 16169\n",
            " Removing values < 1.0 in frame 16571\n",
            "Frame: 16571 1 16170\n",
            " Removing values < 1.0 in frame 16572\n",
            "Frame: 16572 1 16171\n",
            " Removing values < 1.0 in frame 16573\n",
            "Frame: 16573 1 16172\n",
            " Removing values < 1.0 in frame 16574\n",
            "Frame: 16574 1 16173\n",
            " Removing values < 1.0 in frame 16575\n",
            "Frame: 16575 1 16174\n",
            " Removing values < 1.0 in frame 16576\n",
            "Frame: 16576 1 16175\n",
            " Removing values < 1.0 in frame 16577\n",
            "Frame: 16577 1 16176\n",
            " Removing values < 1.0 in frame 16578\n",
            "Frame: 16578 1 16177\n",
            " Removing values < 1.0 in frame 16579\n",
            "Frame: 16579 1 16178\n",
            " Removing values < 1.0 in frame 16580\n",
            "Frame: 16580 1 16179\n",
            " Removing values < 1.0 in frame 16581\n",
            "Frame: 16581 1 16180\n",
            " Removing values < 1.0 in frame 16582\n",
            "Frame: 16582 1 16181\n",
            " Removing values < 1.0 in frame 16583\n",
            "Frame: 16583 1 16182\n",
            " Removing values < 1.0 in frame 16584\n",
            "Frame: 16584 1 16183\n",
            " Removing values < 1.0 in frame 16585\n",
            "Frame: 16585 1 16184\n",
            " Removing values < 1.0 in frame 16586\n",
            "Frame: 16586 1 16185\n",
            " Removing values < 1.0 in frame 16587\n",
            "Frame: 16587 1 16186\n",
            " Removing values < 1.0 in frame 16588\n",
            "Frame: 16588 1 16187\n",
            " Removing values < 1.0 in frame 16589\n",
            "Frame: 16589 1 16188\n",
            " Removing values < 1.0 in frame 16590\n",
            "Frame: 16590 1 16189\n",
            " Removing values < 1.0 in frame 16591\n",
            "Frame: 16591 1 16190\n",
            " Removing values < 1.0 in frame 16592\n",
            "Frame: 16592 1 16191\n",
            " Removing values < 1.0 in frame 16593\n",
            "Frame: 16593 1 16192\n",
            " Removing values < 1.0 in frame 16594\n",
            "Frame: 16594 1 16193\n",
            " Removing values < 1.0 in frame 16595\n",
            "Frame: 16595 1 16194\n",
            " Removing values < 1.0 in frame 16596\n",
            "Frame: 16596 1 16195\n",
            " Removing values < 1.0 in frame 16597\n",
            "Frame: 16597 1 16196\n",
            " Removing values < 1.0 in frame 16598\n",
            "Frame: 16598 1 16197\n",
            " Removing values < 1.0 in frame 16599\n",
            "Frame: 16599 1 16198\n",
            " Removing values < 1.0 in frame 16600\n",
            "Frame: 16600 1 16199\n",
            " Removing values < 1.0 in frame 16601\n",
            "Frame: 16601 1 16200\n",
            " Removing values < 1.0 in frame 16602\n",
            "Frame: 16602 1 16201\n",
            " Removing values < 1.0 in frame 16603\n",
            "Frame: 16603 1 16202\n",
            " Removing values < 1.0 in frame 16604\n",
            "Frame: 16604 1 16203\n",
            " Removing values < 1.0 in frame 16605\n",
            "Frame: 16605 1 16204\n",
            " Removing values < 1.0 in frame 16606\n",
            "Frame: 16606 1 16205\n",
            " Removing values < 1.0 in frame 16607\n",
            "Frame: 16607 1 16206\n",
            " Removing values < 1.0 in frame 16608\n",
            "Frame: 16608 1 16207\n",
            " Removing values < 1.0 in frame 16609\n",
            "Frame: 16609 1 16208\n",
            " Removing values < 1.0 in frame 16610\n",
            "Frame: 16610 1 16209\n",
            " Removing values < 1.0 in frame 16611\n",
            "Frame: 16611 1 16210\n",
            " Removing values < 1.0 in frame 16612\n",
            "Frame: 16612 1 16211\n",
            " Removing values < 1.0 in frame 16613\n",
            "Frame: 16613 1 16212\n",
            " Removing values < 1.0 in frame 16614\n",
            "Frame: 16614 1 16213\n",
            " Removing values < 1.0 in frame 16615\n",
            "Frame: 16615 1 16214\n",
            " Removing values < 1.0 in frame 16616\n",
            "Frame: 16616 1 16215\n",
            " Removing values < 1.0 in frame 16617\n",
            "Frame: 16617 1 16216\n",
            " Removing values < 1.0 in frame 16618\n",
            "Frame: 16618 1 16217\n",
            " Removing values < 1.0 in frame 16619\n",
            "Frame: 16619 1 16218\n",
            " Removing values < 1.0 in frame 16620\n",
            "Frame: 16620 1 16219\n",
            " Removing values < 1.0 in frame 16621\n",
            "Frame: 16621 1 16220\n",
            " Removing values < 1.0 in frame 16622\n",
            "Frame: 16622 1 16221\n",
            " Removing values < 1.0 in frame 16623\n",
            "Frame: 16623 1 16222\n",
            " Removing values < 1.0 in frame 16624\n",
            "Frame: 16624 1 16223\n",
            " Removing values < 1.0 in frame 16625\n",
            "Frame: 16625 1 16224\n",
            " Removing values < 1.0 in frame 16626\n",
            "Frame: 16626 1 16225\n",
            " Removing values < 1.0 in frame 16627\n",
            "Frame: 16627 1 16226\n",
            " Removing values < 1.0 in frame 16628\n",
            "Frame: 16628 1 16227\n",
            " Removing values < 1.0 in frame 16629\n",
            "Frame: 16629 1 16228\n",
            " Removing values < 1.0 in frame 16630\n",
            "Frame: 16630 1 16229\n",
            " Removing values < 1.0 in frame 16631\n",
            "Frame: 16631 1 16230\n",
            " Removing values < 1.0 in frame 16632\n",
            "Frame: 16632 1 16231\n",
            " Removing values < 1.0 in frame 16633\n",
            "Frame: 16633 1 16232\n",
            " Removing values < 1.0 in frame 16634\n",
            "Frame: 16634 1 16233\n",
            " Removing values < 1.0 in frame 16635\n",
            "Frame: 16635 1 16234\n",
            " Removing values < 1.0 in frame 16636\n",
            "Frame: 16636 1 16235\n",
            " Removing values < 1.0 in frame 16637\n",
            "Frame: 16637 1 16236\n",
            " Removing values < 1.0 in frame 16638\n",
            "Frame: 16638 1 16237\n",
            " Removing values < 1.0 in frame 16639\n",
            "Frame: 16639 1 16238\n",
            " Removing values < 1.0 in frame 16640\n",
            "Frame: 16640 1 16239\n",
            " Removing values < 1.0 in frame 16641\n",
            "Frame: 16641 1 16240\n",
            " Removing values < 1.0 in frame 16642\n",
            "Frame: 16642 1 16241\n",
            " Removing values < 1.0 in frame 16643\n",
            "Frame: 16643 1 16242\n",
            " Removing values < 1.0 in frame 16644\n",
            "Frame: 16644 1 16243\n",
            " Removing values < 1.0 in frame 16645\n",
            "Frame: 16645 1 16244\n",
            " Removing values < 1.0 in frame 16646\n",
            "Frame: 16646 1 16245\n",
            " Removing values < 1.0 in frame 16647\n",
            "Frame: 16647 1 16246\n",
            " Removing values < 1.0 in frame 16648\n",
            "Frame: 16648 1 16247\n",
            " Removing values < 1.0 in frame 16649\n",
            "Frame: 16649 1 16248\n",
            " Removing values < 1.0 in frame 16650\n",
            "Frame: 16650 1 16249\n",
            " Removing values < 1.0 in frame 16651\n",
            "Frame: 16651 1 16250\n",
            " Removing values < 1.0 in frame 16652\n",
            "Frame: 16652 1 16251\n",
            " Removing values < 1.0 in frame 16653\n",
            "Frame: 16653 1 16252\n",
            " Removing values < 1.0 in frame 16654\n",
            "Frame: 16654 1 16253\n",
            " Removing values < 1.0 in frame 16655\n",
            "Frame: 16655 1 16254\n",
            " Removing values < 1.0 in frame 16656\n",
            "Frame: 16656 1 16255\n",
            " Removing values < 1.0 in frame 16657\n",
            "Frame: 16657 1 16256\n",
            " Removing values < 1.0 in frame 16658\n",
            "Frame: 16658 1 16257\n",
            " Removing values < 1.0 in frame 16659\n",
            "Frame: 16659 1 16258\n",
            " Removing values < 1.0 in frame 16660\n",
            "Frame: 16660 1 16259\n",
            " Removing values < 1.0 in frame 16661\n",
            "Frame: 16661 1 16260\n",
            " Removing values < 1.0 in frame 16662\n",
            "Frame: 16662 1 16261\n",
            " Removing values < 1.0 in frame 16663\n",
            "Frame: 16663 1 16262\n",
            " Removing values < 1.0 in frame 16664\n",
            "Frame: 16664 1 16263\n",
            " Removing values < 1.0 in frame 16665\n",
            "Frame: 16665 1 16264\n",
            " Removing values < 1.0 in frame 16666\n",
            "Frame: 16666 0 16264\n",
            " Removing values < 1.0 in frame 16667\n",
            "Frame: 16667 1 16265\n",
            " Removing values < 1.0 in frame 16668\n",
            "Frame: 16668 1 16266\n",
            " Removing values < 1.0 in frame 16669\n",
            "Frame: 16669 1 16267\n",
            " Removing values < 1.0 in frame 16670\n",
            "Frame: 16670 1 16268\n",
            " Removing values < 1.0 in frame 16671\n",
            "Frame: 16671 1 16269\n",
            " Removing values < 1.0 in frame 16672\n",
            "Frame: 16672 1 16270\n",
            " Removing values < 1.0 in frame 16673\n",
            "Frame: 16673 1 16271\n",
            " Removing values < 1.0 in frame 16674\n",
            "Frame: 16674 1 16272\n",
            " Removing values < 1.0 in frame 16675\n",
            "Frame: 16675 1 16273\n",
            " Removing values < 1.0 in frame 16676\n",
            "Frame: 16676 1 16274\n",
            " Removing values < 1.0 in frame 16677\n",
            "Frame: 16677 1 16275\n",
            " Removing values < 1.0 in frame 16678\n",
            "Frame: 16678 1 16276\n",
            " Removing values < 1.0 in frame 16679\n",
            "Frame: 16679 1 16277\n",
            " Removing values < 1.0 in frame 16680\n",
            "Frame: 16680 1 16278\n",
            " Removing values < 1.0 in frame 16681\n",
            "Frame: 16681 1 16279\n",
            " Removing values < 1.0 in frame 16682\n",
            "Frame: 16682 1 16280\n",
            " Removing values < 1.0 in frame 16683\n",
            "Frame: 16683 1 16281\n",
            " Removing values < 1.0 in frame 16684\n",
            "Frame: 16684 1 16282\n",
            " Removing values < 1.0 in frame 16685\n",
            "Frame: 16685 1 16283\n",
            " Removing values < 1.0 in frame 16686\n",
            "Frame: 16686 1 16284\n",
            " Removing values < 1.0 in frame 16687\n",
            "Frame: 16687 1 16285\n",
            " Removing values < 1.0 in frame 16688\n",
            "Frame: 16688 1 16286\n",
            " Removing values < 1.0 in frame 16689\n",
            "Frame: 16689 1 16287\n",
            " Removing values < 1.0 in frame 16690\n",
            "Frame: 16690 1 16288\n",
            " Removing values < 1.0 in frame 16691\n",
            "Frame: 16691 1 16289\n",
            " Removing values < 1.0 in frame 16692\n",
            "Frame: 16692 1 16290\n",
            " Removing values < 1.0 in frame 16693\n",
            "Frame: 16693 1 16291\n",
            " Removing values < 1.0 in frame 16694\n",
            "Frame: 16694 1 16292\n",
            " Removing values < 1.0 in frame 16695\n",
            "Frame: 16695 1 16293\n",
            " Removing values < 1.0 in frame 16696\n",
            "Frame: 16696 1 16294\n",
            " Removing values < 1.0 in frame 16697\n",
            "Frame: 16697 1 16295\n",
            " Removing values < 1.0 in frame 16698\n",
            "Frame: 16698 1 16296\n",
            " Removing values < 1.0 in frame 16699\n",
            "Frame: 16699 1 16297\n",
            " Removing values < 1.0 in frame 16700\n",
            "Frame: 16700 1 16298\n",
            " Removing values < 1.0 in frame 16701\n",
            "Frame: 16701 1 16299\n",
            " Removing values < 1.0 in frame 16702\n",
            "Frame: 16702 1 16300\n",
            " Removing values < 1.0 in frame 16703\n",
            "Frame: 16703 1 16301\n",
            " Removing values < 1.0 in frame 16704\n",
            "Frame: 16704 1 16302\n",
            " Removing values < 1.0 in frame 16705\n",
            "Frame: 16705 1 16303\n",
            " Removing values < 1.0 in frame 16706\n",
            "Frame: 16706 1 16304\n",
            " Removing values < 1.0 in frame 16707\n",
            "Frame: 16707 1 16305\n",
            " Removing values < 1.0 in frame 16708\n",
            "Frame: 16708 1 16306\n",
            " Removing values < 1.0 in frame 16709\n",
            "Frame: 16709 1 16307\n",
            " Removing values < 1.0 in frame 16710\n",
            "Frame: 16710 1 16308\n",
            " Removing values < 1.0 in frame 16711\n",
            "Frame: 16711 1 16309\n",
            " Removing values < 1.0 in frame 16712\n",
            "Frame: 16712 1 16310\n",
            " Removing values < 1.0 in frame 16713\n",
            "Frame: 16713 1 16311\n",
            " Removing values < 1.0 in frame 16714\n",
            "Frame: 16714 1 16312\n",
            " Removing values < 1.0 in frame 16715\n",
            "Frame: 16715 1 16313\n",
            " Removing values < 1.0 in frame 16716\n",
            "Frame: 16716 1 16314\n",
            " Removing values < 1.0 in frame 16717\n",
            "Frame: 16717 1 16315\n",
            " Removing values < 1.0 in frame 16718\n",
            "Frame: 16718 1 16316\n",
            " Removing values < 1.0 in frame 16719\n",
            "Frame: 16719 1 16317\n",
            " Removing values < 1.0 in frame 16720\n",
            "Frame: 16720 1 16318\n",
            " Removing values < 1.0 in frame 16721\n",
            "Frame: 16721 1 16319\n",
            " Removing values < 1.0 in frame 16722\n",
            "Frame: 16722 1 16320\n",
            " Removing values < 1.0 in frame 16723\n",
            "Frame: 16723 1 16321\n",
            " Removing values < 1.0 in frame 16724\n",
            "Frame: 16724 1 16322\n",
            " Removing values < 1.0 in frame 16725\n",
            "Frame: 16725 1 16323\n",
            " Removing values < 1.0 in frame 16726\n",
            "Frame: 16726 1 16324\n",
            " Removing values < 1.0 in frame 16727\n",
            "Frame: 16727 1 16325\n",
            " Removing values < 1.0 in frame 16728\n",
            "Frame: 16728 1 16326\n",
            " Removing values < 1.0 in frame 16729\n",
            "Frame: 16729 1 16327\n",
            " Removing values < 1.0 in frame 16730\n",
            "Frame: 16730 1 16328\n",
            " Removing values < 1.0 in frame 16731\n",
            "Frame: 16731 1 16329\n",
            " Removing values < 1.0 in frame 16732\n",
            "Frame: 16732 1 16330\n",
            " Removing values < 1.0 in frame 16733\n",
            "Frame: 16733 1 16331\n",
            " Removing values < 1.0 in frame 16734\n",
            "Frame: 16734 1 16332\n",
            " Removing values < 1.0 in frame 16735\n",
            "Frame: 16735 1 16333\n",
            " Removing values < 1.0 in frame 16736\n",
            "Frame: 16736 1 16334\n",
            " Removing values < 1.0 in frame 16737\n",
            "Frame: 16737 1 16335\n",
            " Removing values < 1.0 in frame 16738\n",
            "Frame: 16738 1 16336\n",
            " Removing values < 1.0 in frame 16739\n",
            "Frame: 16739 1 16337\n",
            " Removing values < 1.0 in frame 16740\n",
            "Frame: 16740 1 16338\n",
            " Removing values < 1.0 in frame 16741\n",
            "Frame: 16741 1 16339\n",
            " Removing values < 1.0 in frame 16742\n",
            "Frame: 16742 1 16340\n",
            " Removing values < 1.0 in frame 16743\n",
            "Frame: 16743 1 16341\n",
            " Removing values < 1.0 in frame 16744\n",
            "Frame: 16744 1 16342\n",
            " Removing values < 1.0 in frame 16745\n",
            "Frame: 16745 1 16343\n",
            " Removing values < 1.0 in frame 16746\n",
            "Frame: 16746 1 16344\n",
            " Removing values < 1.0 in frame 16747\n",
            "Frame: 16747 1 16345\n",
            " Removing values < 1.0 in frame 16748\n",
            "Frame: 16748 1 16346\n",
            " Removing values < 1.0 in frame 16749\n",
            "Frame: 16749 1 16347\n",
            " Removing values < 1.0 in frame 16750\n",
            "Frame: 16750 1 16348\n",
            " Removing values < 1.0 in frame 16751\n",
            "Frame: 16751 1 16349\n",
            " Removing values < 1.0 in frame 16752\n",
            "Frame: 16752 1 16350\n",
            " Removing values < 1.0 in frame 16753\n",
            "Frame: 16753 1 16351\n",
            " Removing values < 1.0 in frame 16754\n",
            "Frame: 16754 1 16352\n",
            " Removing values < 1.0 in frame 16755\n",
            "Frame: 16755 0 16352\n",
            " Removing values < 1.0 in frame 16756\n",
            "Frame: 16756 1 16353\n",
            " Removing values < 1.0 in frame 16757\n",
            "Frame: 16757 1 16354\n",
            " Removing values < 1.0 in frame 16758\n",
            "Frame: 16758 1 16355\n",
            " Removing values < 1.0 in frame 16759\n",
            "Frame: 16759 1 16356\n",
            " Removing values < 1.0 in frame 16760\n",
            "Frame: 16760 1 16357\n",
            " Removing values < 1.0 in frame 16761\n",
            "Frame: 16761 1 16358\n",
            " Removing values < 1.0 in frame 16762\n",
            "Frame: 16762 1 16359\n",
            " Removing values < 1.0 in frame 16763\n",
            "Frame: 16763 1 16360\n",
            " Removing values < 1.0 in frame 16764\n",
            "Frame: 16764 1 16361\n",
            " Removing values < 1.0 in frame 16765\n",
            "Frame: 16765 1 16362\n",
            " Removing values < 1.0 in frame 16766\n",
            "Frame: 16766 1 16363\n",
            " Removing values < 1.0 in frame 16767\n",
            "Frame: 16767 1 16364\n",
            " Removing values < 1.0 in frame 16768\n",
            "Frame: 16768 1 16365\n",
            " Removing values < 1.0 in frame 16769\n",
            "Frame: 16769 1 16366\n",
            " Removing values < 1.0 in frame 16770\n",
            "Frame: 16770 1 16367\n",
            " Removing values < 1.0 in frame 16771\n",
            "Frame: 16771 1 16368\n",
            " Removing values < 1.0 in frame 16772\n",
            "Frame: 16772 1 16369\n",
            " Removing values < 1.0 in frame 16773\n",
            "Frame: 16773 1 16370\n",
            " Removing values < 1.0 in frame 16774\n",
            "Frame: 16774 1 16371\n",
            " Removing values < 1.0 in frame 16775\n",
            "Frame: 16775 1 16372\n",
            " Removing values < 1.0 in frame 16776\n",
            "Frame: 16776 1 16373\n",
            " Removing values < 1.0 in frame 16777\n",
            "Frame: 16777 1 16374\n",
            " Removing values < 1.0 in frame 16778\n",
            "Frame: 16778 1 16375\n",
            " Removing values < 1.0 in frame 16779\n",
            "Frame: 16779 1 16376\n",
            " Removing values < 1.0 in frame 16780\n",
            "Frame: 16780 1 16377\n",
            " Removing values < 1.0 in frame 16781\n",
            "Frame: 16781 1 16378\n",
            " Removing values < 1.0 in frame 16782\n",
            "Frame: 16782 1 16379\n",
            " Removing values < 1.0 in frame 16783\n",
            "Frame: 16783 1 16380\n",
            " Removing values < 1.0 in frame 16784\n",
            "Frame: 16784 1 16381\n",
            " Removing values < 1.0 in frame 16785\n",
            "Frame: 16785 1 16382\n",
            " Removing values < 1.0 in frame 16786\n",
            "Frame: 16786 1 16383\n",
            " Removing values < 1.0 in frame 16787\n",
            "Frame: 16787 1 16384\n",
            " Removing values < 1.0 in frame 16788\n",
            "Frame: 16788 1 16385\n",
            " Removing values < 1.0 in frame 16789\n",
            "Frame: 16789 1 16386\n",
            " Removing values < 1.0 in frame 16790\n",
            "Frame: 16790 1 16387\n",
            " Removing values < 1.0 in frame 16791\n",
            "Frame: 16791 1 16388\n",
            " Removing values < 1.0 in frame 16792\n",
            "Frame: 16792 1 16389\n",
            " Removing values < 1.0 in frame 16793\n",
            "Frame: 16793 1 16390\n",
            " Removing values < 1.0 in frame 16794\n",
            "Frame: 16794 1 16391\n",
            " Removing values < 1.0 in frame 16795\n",
            "Frame: 16795 1 16392\n",
            " Removing values < 1.0 in frame 16796\n",
            "Frame: 16796 1 16393\n",
            " Removing values < 1.0 in frame 16797\n",
            "Frame: 16797 1 16394\n",
            " Removing values < 1.0 in frame 16798\n",
            "Frame: 16798 1 16395\n",
            " Removing values < 1.0 in frame 16799\n",
            "Frame: 16799 1 16396\n",
            " Removing values < 1.0 in frame 16800\n",
            "Frame: 16800 1 16397\n",
            " Removing values < 1.0 in frame 16801\n",
            "Frame: 16801 1 16398\n",
            " Removing values < 1.0 in frame 16802\n",
            "Frame: 16802 1 16399\n",
            " Removing values < 1.0 in frame 16803\n",
            "Frame: 16803 1 16400\n",
            " Removing values < 1.0 in frame 16804\n",
            "Frame: 16804 1 16401\n",
            " Removing values < 1.0 in frame 16805\n",
            "Frame: 16805 1 16402\n",
            " Removing values < 1.0 in frame 16806\n",
            "Frame: 16806 1 16403\n",
            " Removing values < 1.0 in frame 16807\n",
            "Frame: 16807 1 16404\n",
            " Removing values < 1.0 in frame 16808\n",
            "Frame: 16808 1 16405\n",
            " Removing values < 1.0 in frame 16809\n",
            "Frame: 16809 1 16406\n",
            " Removing values < 1.0 in frame 16810\n",
            "Frame: 16810 1 16407\n",
            " Removing values < 1.0 in frame 16811\n",
            "Frame: 16811 1 16408\n",
            " Removing values < 1.0 in frame 16812\n",
            "Frame: 16812 1 16409\n",
            " Removing values < 1.0 in frame 16813\n",
            "Frame: 16813 1 16410\n",
            " Removing values < 1.0 in frame 16814\n",
            "Frame: 16814 1 16411\n",
            " Removing values < 1.0 in frame 16815\n",
            "Frame: 16815 1 16412\n",
            " Removing values < 1.0 in frame 16816\n",
            "Frame: 16816 1 16413\n",
            " Removing values < 1.0 in frame 16817\n",
            "Frame: 16817 1 16414\n",
            " Removing values < 1.0 in frame 16818\n",
            "Frame: 16818 1 16415\n",
            " Removing values < 1.0 in frame 16819\n",
            "Frame: 16819 1 16416\n",
            " Removing values < 1.0 in frame 16820\n",
            "Frame: 16820 1 16417\n",
            " Removing values < 1.0 in frame 16821\n",
            "Frame: 16821 1 16418\n",
            " Removing values < 1.0 in frame 16822\n",
            "Frame: 16822 1 16419\n",
            " Removing values < 1.0 in frame 16823\n",
            "Frame: 16823 1 16420\n",
            " Removing values < 1.0 in frame 16824\n",
            "Frame: 16824 1 16421\n",
            " Removing values < 1.0 in frame 16825\n",
            "Frame: 16825 1 16422\n",
            " Removing values < 1.0 in frame 16826\n",
            "Frame: 16826 1 16423\n",
            " Removing values < 1.0 in frame 16827\n",
            "Frame: 16827 1 16424\n",
            " Removing values < 1.0 in frame 16828\n",
            "Frame: 16828 1 16425\n",
            " Removing values < 1.0 in frame 16829\n",
            "Frame: 16829 1 16426\n",
            " Removing values < 1.0 in frame 16830\n",
            "Frame: 16830 1 16427\n",
            " Removing values < 1.0 in frame 16831\n",
            "Frame: 16831 1 16428\n",
            " Removing values < 1.0 in frame 16832\n",
            "Frame: 16832 1 16429\n",
            " Removing values < 1.0 in frame 16833\n",
            "Frame: 16833 1 16430\n",
            " Removing values < 1.0 in frame 16834\n",
            "Frame: 16834 1 16431\n",
            " Removing values < 1.0 in frame 16835\n",
            "Frame: 16835 1 16432\n",
            " Removing values < 1.0 in frame 16836\n",
            "Frame: 16836 1 16433\n",
            " Removing values < 1.0 in frame 16837\n",
            "Frame: 16837 1 16434\n",
            " Removing values < 1.0 in frame 16838\n",
            "Frame: 16838 1 16435\n",
            " Removing values < 1.0 in frame 16839\n",
            "Frame: 16839 1 16436\n",
            " Removing values < 1.0 in frame 16840\n",
            "Frame: 16840 1 16437\n",
            " Removing values < 1.0 in frame 16841\n",
            "Frame: 16841 1 16438\n",
            " Removing values < 1.0 in frame 16842\n",
            "Frame: 16842 1 16439\n",
            " Removing values < 1.0 in frame 16843\n",
            "Frame: 16843 1 16440\n",
            " Removing values < 1.0 in frame 16844\n",
            "Frame: 16844 1 16441\n",
            " Removing values < 1.0 in frame 16845\n",
            "Frame: 16845 1 16442\n",
            " Removing values < 1.0 in frame 16846\n",
            "Frame: 16846 1 16443\n",
            " Removing values < 1.0 in frame 16847\n",
            "Frame: 16847 1 16444\n",
            " Removing values < 1.0 in frame 16848\n",
            "Frame: 16848 1 16445\n",
            " Removing values < 1.0 in frame 16849\n",
            "Frame: 16849 1 16446\n",
            " Removing values < 1.0 in frame 16850\n",
            "Frame: 16850 1 16447\n",
            " Removing values < 1.0 in frame 16851\n",
            "Frame: 16851 1 16448\n",
            " Removing values < 1.0 in frame 16852\n",
            "Frame: 16852 1 16449\n",
            " Removing values < 1.0 in frame 16853\n",
            "Frame: 16853 1 16450\n",
            " Removing values < 1.0 in frame 16854\n",
            "Frame: 16854 1 16451\n",
            " Removing values < 1.0 in frame 16855\n",
            "Frame: 16855 1 16452\n",
            " Removing values < 1.0 in frame 16856\n",
            "Frame: 16856 1 16453\n",
            " Removing values < 1.0 in frame 16857\n",
            "Frame: 16857 1 16454\n",
            " Removing values < 1.0 in frame 16858\n",
            "Frame: 16858 1 16455\n",
            " Removing values < 1.0 in frame 16859\n",
            "Frame: 16859 1 16456\n",
            " Removing values < 1.0 in frame 16860\n",
            "Frame: 16860 1 16457\n",
            " Removing values < 1.0 in frame 16861\n",
            "Frame: 16861 1 16458\n",
            " Removing values < 1.0 in frame 16862\n",
            "Frame: 16862 1 16459\n",
            " Removing values < 1.0 in frame 16863\n",
            "Frame: 16863 1 16460\n",
            " Removing values < 1.0 in frame 16864\n",
            "Frame: 16864 1 16461\n",
            " Removing values < 1.0 in frame 16865\n",
            "Frame: 16865 1 16462\n",
            " Removing values < 1.0 in frame 16866\n",
            "Frame: 16866 1 16463\n",
            " Removing values < 1.0 in frame 16867\n",
            "Frame: 16867 1 16464\n",
            " Removing values < 1.0 in frame 16868\n",
            "Frame: 16868 1 16465\n",
            " Removing values < 1.0 in frame 16869\n",
            "Frame: 16869 1 16466\n",
            " Removing values < 1.0 in frame 16870\n",
            "Frame: 16870 1 16467\n",
            " Removing values < 1.0 in frame 16871\n",
            "Frame: 16871 1 16468\n",
            " Removing values < 1.0 in frame 16872\n",
            "Frame: 16872 1 16469\n",
            " Removing values < 1.0 in frame 16873\n",
            "Frame: 16873 1 16470\n",
            " Removing values < 1.0 in frame 16874\n",
            "Frame: 16874 1 16471\n",
            " Removing values < 1.0 in frame 16875\n",
            "Frame: 16875 1 16472\n",
            " Removing values < 1.0 in frame 16876\n",
            "Frame: 16876 1 16473\n",
            " Removing values < 1.0 in frame 16877\n",
            "Frame: 16877 1 16474\n",
            " Removing values < 1.0 in frame 16878\n",
            "Frame: 16878 1 16475\n",
            " Removing values < 1.0 in frame 16879\n",
            "Frame: 16879 1 16476\n",
            " Removing values < 1.0 in frame 16880\n",
            "Frame: 16880 1 16477\n",
            " Removing values < 1.0 in frame 16881\n",
            "Frame: 16881 1 16478\n",
            " Removing values < 1.0 in frame 16882\n",
            "Frame: 16882 1 16479\n",
            " Removing values < 1.0 in frame 16883\n",
            "Frame: 16883 1 16480\n",
            " Removing values < 1.0 in frame 16884\n",
            "Frame: 16884 1 16481\n",
            " Removing values < 1.0 in frame 16885\n",
            "Frame: 16885 1 16482\n",
            " Removing values < 1.0 in frame 16886\n",
            "Frame: 16886 1 16483\n",
            " Removing values < 1.0 in frame 16887\n",
            "Frame: 16887 1 16484\n",
            " Removing values < 1.0 in frame 16888\n",
            "Frame: 16888 1 16485\n",
            " Removing values < 1.0 in frame 16889\n",
            "Frame: 16889 1 16486\n",
            " Removing values < 1.0 in frame 16890\n",
            "Frame: 16890 1 16487\n",
            " Removing values < 1.0 in frame 16891\n",
            "Frame: 16891 1 16488\n",
            " Removing values < 1.0 in frame 16892\n",
            "Frame: 16892 1 16489\n",
            " Removing values < 1.0 in frame 16893\n",
            "Frame: 16893 1 16490\n",
            " Removing values < 1.0 in frame 16894\n",
            "Frame: 16894 1 16491\n",
            " Removing values < 1.0 in frame 16895\n",
            "Frame: 16895 1 16492\n",
            " Removing values < 1.0 in frame 16896\n",
            "Frame: 16896 1 16493\n",
            " Removing values < 1.0 in frame 16897\n",
            "Frame: 16897 1 16494\n",
            " Removing values < 1.0 in frame 16898\n",
            "Frame: 16898 1 16495\n",
            " Removing values < 1.0 in frame 16899\n",
            "Frame: 16899 1 16496\n",
            " Removing values < 1.0 in frame 16900\n",
            "Frame: 16900 1 16497\n",
            " Removing values < 1.0 in frame 16901\n",
            "Frame: 16901 1 16498\n",
            " Removing values < 1.0 in frame 16902\n",
            "Frame: 16902 1 16499\n",
            " Removing values < 1.0 in frame 16903\n",
            "Frame: 16903 1 16500\n",
            " Removing values < 1.0 in frame 16904\n",
            "Frame: 16904 1 16501\n",
            " Removing values < 1.0 in frame 16905\n",
            "Frame: 16905 1 16502\n",
            " Removing values < 1.0 in frame 16906\n",
            "Frame: 16906 1 16503\n",
            " Removing values < 1.0 in frame 16907\n",
            "Frame: 16907 1 16504\n",
            " Removing values < 1.0 in frame 16908\n",
            "Frame: 16908 1 16505\n",
            " Removing values < 1.0 in frame 16909\n",
            "Frame: 16909 1 16506\n",
            " Removing values < 1.0 in frame 16910\n",
            "Frame: 16910 1 16507\n",
            " Removing values < 1.0 in frame 16911\n",
            "Frame: 16911 1 16508\n",
            " Removing values < 1.0 in frame 16912\n",
            "Frame: 16912 1 16509\n",
            " Removing values < 1.0 in frame 16913\n",
            "Frame: 16913 1 16510\n",
            " Removing values < 1.0 in frame 16914\n",
            "Frame: 16914 1 16511\n",
            " Removing values < 1.0 in frame 16915\n",
            "Frame: 16915 1 16512\n",
            " Removing values < 1.0 in frame 16916\n",
            "Frame: 16916 1 16513\n",
            " Removing values < 1.0 in frame 16917\n",
            "Frame: 16917 1 16514\n",
            " Removing values < 1.0 in frame 16918\n",
            "Frame: 16918 1 16515\n",
            " Removing values < 1.0 in frame 16919\n",
            "Frame: 16919 1 16516\n",
            " Removing values < 1.0 in frame 16920\n",
            "Frame: 16920 1 16517\n",
            " Removing values < 1.0 in frame 16921\n",
            "Frame: 16921 1 16518\n",
            " Removing values < 1.0 in frame 16922\n",
            "Frame: 16922 1 16519\n",
            " Removing values < 1.0 in frame 16923\n",
            "Frame: 16923 1 16520\n",
            " Removing values < 1.0 in frame 16924\n",
            "Frame: 16924 1 16521\n",
            " Removing values < 1.0 in frame 16925\n",
            "Frame: 16925 1 16522\n",
            " Removing values < 1.0 in frame 16926\n",
            "Frame: 16926 1 16523\n",
            " Removing values < 1.0 in frame 16927\n",
            "Frame: 16927 1 16524\n",
            " Removing values < 1.0 in frame 16928\n",
            "Frame: 16928 0 16524\n",
            " Removing values < 1.0 in frame 16929\n",
            "Frame: 16929 1 16525\n",
            " Removing values < 1.0 in frame 16930\n",
            "Frame: 16930 1 16526\n",
            " Removing values < 1.0 in frame 16931\n",
            "Frame: 16931 1 16527\n",
            " Removing values < 1.0 in frame 16932\n",
            "Frame: 16932 1 16528\n",
            " Removing values < 1.0 in frame 16933\n",
            "Frame: 16933 1 16529\n",
            " Removing values < 1.0 in frame 16934\n",
            "Frame: 16934 1 16530\n",
            " Removing values < 1.0 in frame 16935\n",
            "Frame: 16935 1 16531\n",
            " Removing values < 1.0 in frame 16936\n",
            "Frame: 16936 1 16532\n",
            " Removing values < 1.0 in frame 16937\n",
            "Frame: 16937 1 16533\n",
            " Removing values < 1.0 in frame 16938\n",
            "Frame: 16938 1 16534\n",
            " Removing values < 1.0 in frame 16939\n",
            "Frame: 16939 1 16535\n",
            " Removing values < 1.0 in frame 16940\n",
            "Frame: 16940 1 16536\n",
            " Removing values < 1.0 in frame 16941\n",
            "Frame: 16941 0 16536\n",
            " Removing values < 1.0 in frame 16942\n",
            "Frame: 16942 1 16537\n",
            " Removing values < 1.0 in frame 16943\n",
            "Frame: 16943 1 16538\n",
            " Removing values < 1.0 in frame 16944\n",
            "Frame: 16944 1 16539\n",
            " Removing values < 1.0 in frame 16945\n",
            "Frame: 16945 1 16540\n",
            " Removing values < 1.0 in frame 16946\n",
            "Frame: 16946 1 16541\n",
            " Removing values < 1.0 in frame 16947\n",
            "Frame: 16947 1 16542\n",
            " Removing values < 1.0 in frame 16948\n",
            "Frame: 16948 1 16543\n",
            " Removing values < 1.0 in frame 16949\n",
            "Frame: 16949 1 16544\n",
            " Removing values < 1.0 in frame 16950\n",
            "Frame: 16950 1 16545\n",
            " Removing values < 1.0 in frame 16951\n",
            "Frame: 16951 1 16546\n",
            " Removing values < 1.0 in frame 16952\n",
            "Frame: 16952 1 16547\n",
            " Removing values < 1.0 in frame 16953\n",
            "Frame: 16953 1 16548\n",
            " Removing values < 1.0 in frame 16954\n",
            "Frame: 16954 1 16549\n",
            " Removing values < 1.0 in frame 16955\n",
            "Frame: 16955 1 16550\n",
            " Removing values < 1.0 in frame 16956\n",
            "Frame: 16956 1 16551\n",
            " Removing values < 1.0 in frame 16957\n",
            "Frame: 16957 1 16552\n",
            " Removing values < 1.0 in frame 16958\n",
            "Frame: 16958 1 16553\n",
            " Removing values < 1.0 in frame 16959\n",
            "Frame: 16959 1 16554\n",
            " Removing values < 1.0 in frame 16960\n",
            "Frame: 16960 1 16555\n",
            " Removing values < 1.0 in frame 16961\n",
            "Frame: 16961 1 16556\n",
            " Removing values < 1.0 in frame 16962\n",
            "Frame: 16962 0 16556\n",
            " Removing values < 1.0 in frame 16963\n",
            "Frame: 16963 1 16557\n",
            " Removing values < 1.0 in frame 16964\n",
            "Frame: 16964 1 16558\n",
            " Removing values < 1.0 in frame 16965\n",
            "Frame: 16965 1 16559\n",
            " Removing values < 1.0 in frame 16966\n",
            "Frame: 16966 1 16560\n",
            " Removing values < 1.0 in frame 16967\n",
            "Frame: 16967 1 16561\n",
            " Removing values < 1.0 in frame 16968\n",
            "Frame: 16968 1 16562\n",
            " Removing values < 1.0 in frame 16969\n",
            "Frame: 16969 1 16563\n",
            " Removing values < 1.0 in frame 16970\n",
            "Frame: 16970 1 16564\n",
            " Removing values < 1.0 in frame 16971\n",
            "Frame: 16971 1 16565\n",
            " Removing values < 1.0 in frame 16972\n",
            "Frame: 16972 1 16566\n",
            " Removing values < 1.0 in frame 16973\n",
            "Frame: 16973 1 16567\n",
            " Removing values < 1.0 in frame 16974\n",
            "Frame: 16974 1 16568\n",
            " Removing values < 1.0 in frame 16975\n",
            "Frame: 16975 1 16569\n",
            " Removing values < 1.0 in frame 16976\n",
            "Frame: 16976 1 16570\n",
            " Removing values < 1.0 in frame 16977\n",
            "Frame: 16977 1 16571\n",
            " Removing values < 1.0 in frame 16978\n",
            "Frame: 16978 1 16572\n",
            " Removing values < 1.0 in frame 16979\n",
            "Frame: 16979 1 16573\n",
            " Removing values < 1.0 in frame 16980\n",
            "Frame: 16980 1 16574\n",
            " Removing values < 1.0 in frame 16981\n",
            "Frame: 16981 1 16575\n",
            " Removing values < 1.0 in frame 16982\n",
            "Frame: 16982 1 16576\n",
            " Removing values < 1.0 in frame 16983\n",
            "Frame: 16983 1 16577\n",
            " Removing values < 1.0 in frame 16984\n",
            "Frame: 16984 1 16578\n",
            " Removing values < 1.0 in frame 16985\n",
            "Frame: 16985 1 16579\n",
            " Removing values < 1.0 in frame 16986\n",
            "Frame: 16986 1 16580\n",
            " Removing values < 1.0 in frame 16987\n",
            "Frame: 16987 1 16581\n",
            " Removing values < 1.0 in frame 16988\n",
            "Frame: 16988 1 16582\n",
            " Removing values < 1.0 in frame 16989\n",
            "Frame: 16989 1 16583\n",
            " Removing values < 1.0 in frame 16990\n",
            "Frame: 16990 1 16584\n",
            " Removing values < 1.0 in frame 16991\n",
            "Frame: 16991 1 16585\n",
            " Removing values < 1.0 in frame 16992\n",
            "Frame: 16992 1 16586\n",
            " Removing values < 1.0 in frame 16993\n",
            "Frame: 16993 1 16587\n",
            " Removing values < 1.0 in frame 16994\n",
            "Frame: 16994 1 16588\n",
            " Removing values < 1.0 in frame 16995\n",
            "Frame: 16995 1 16589\n",
            " Removing values < 1.0 in frame 16996\n",
            "Frame: 16996 1 16590\n",
            " Removing values < 1.0 in frame 16997\n",
            "Frame: 16997 1 16591\n",
            " Removing values < 1.0 in frame 16998\n",
            "Frame: 16998 1 16592\n",
            " Removing values < 1.0 in frame 16999\n",
            "Frame: 16999 1 16593\n",
            " Removing values < 1.0 in frame 17000\n",
            "Frame: 17000 1 16594\n",
            " Removing values < 1.0 in frame 17001\n",
            "Frame: 17001 1 16595\n",
            " Removing values < 1.0 in frame 17002\n",
            "Frame: 17002 1 16596\n",
            " Removing values < 1.0 in frame 17003\n",
            "Frame: 17003 1 16597\n",
            " Removing values < 1.0 in frame 17004\n",
            "Frame: 17004 1 16598\n",
            " Removing values < 1.0 in frame 17005\n",
            "Frame: 17005 1 16599\n",
            " Removing values < 1.0 in frame 17006\n",
            "Frame: 17006 1 16600\n",
            " Removing values < 1.0 in frame 17007\n",
            "Frame: 17007 1 16601\n",
            " Removing values < 1.0 in frame 17008\n",
            "Frame: 17008 1 16602\n",
            " Removing values < 1.0 in frame 17009\n",
            "Frame: 17009 1 16603\n",
            " Removing values < 1.0 in frame 17010\n",
            "Frame: 17010 1 16604\n",
            " Removing values < 1.0 in frame 17011\n",
            "Frame: 17011 1 16605\n",
            " Removing values < 1.0 in frame 17012\n",
            "Frame: 17012 1 16606\n",
            " Removing values < 1.0 in frame 17013\n",
            "Frame: 17013 1 16607\n",
            " Removing values < 1.0 in frame 17014\n",
            "Frame: 17014 1 16608\n",
            " Removing values < 1.0 in frame 17015\n",
            "Frame: 17015 1 16609\n",
            " Removing values < 1.0 in frame 17016\n",
            "Frame: 17016 1 16610\n",
            " Removing values < 1.0 in frame 17017\n",
            "Frame: 17017 1 16611\n",
            " Removing values < 1.0 in frame 17018\n",
            "Frame: 17018 1 16612\n",
            " Removing values < 1.0 in frame 17019\n",
            "Frame: 17019 1 16613\n",
            " Removing values < 1.0 in frame 17020\n",
            "Frame: 17020 1 16614\n",
            " Removing values < 1.0 in frame 17021\n",
            "Frame: 17021 1 16615\n",
            " Removing values < 1.0 in frame 17022\n",
            "Frame: 17022 1 16616\n",
            " Removing values < 1.0 in frame 17023\n",
            "Frame: 17023 1 16617\n",
            " Removing values < 1.0 in frame 17024\n",
            "Frame: 17024 1 16618\n",
            " Removing values < 1.0 in frame 17025\n",
            "Frame: 17025 1 16619\n",
            " Removing values < 1.0 in frame 17026\n",
            "Frame: 17026 1 16620\n",
            " Removing values < 1.0 in frame 17027\n",
            "Frame: 17027 1 16621\n",
            " Removing values < 1.0 in frame 17028\n",
            "Frame: 17028 1 16622\n",
            " Removing values < 1.0 in frame 17029\n",
            "Frame: 17029 1 16623\n",
            " Removing values < 1.0 in frame 17030\n",
            "Frame: 17030 1 16624\n",
            " Removing values < 1.0 in frame 17031\n",
            "Frame: 17031 1 16625\n",
            " Removing values < 1.0 in frame 17032\n",
            "Frame: 17032 1 16626\n",
            " Removing values < 1.0 in frame 17033\n",
            "Frame: 17033 1 16627\n",
            " Removing values < 1.0 in frame 17034\n",
            "Frame: 17034 1 16628\n",
            " Removing values < 1.0 in frame 17035\n",
            "Frame: 17035 1 16629\n",
            " Removing values < 1.0 in frame 17036\n",
            "Frame: 17036 1 16630\n",
            " Removing values < 1.0 in frame 17037\n",
            "Frame: 17037 1 16631\n",
            " Removing values < 1.0 in frame 17038\n",
            "Frame: 17038 1 16632\n",
            " Removing values < 1.0 in frame 17039\n",
            "Frame: 17039 1 16633\n",
            " Removing values < 1.0 in frame 17040\n",
            "Frame: 17040 1 16634\n",
            " Removing values < 1.0 in frame 17041\n",
            "Frame: 17041 1 16635\n",
            " Removing values < 1.0 in frame 17042\n",
            "Frame: 17042 1 16636\n",
            " Removing values < 1.0 in frame 17043\n",
            "Frame: 17043 1 16637\n",
            " Removing values < 1.0 in frame 17044\n",
            "Frame: 17044 1 16638\n",
            " Removing values < 1.0 in frame 17045\n",
            "Frame: 17045 1 16639\n",
            " Removing values < 1.0 in frame 17046\n",
            "Frame: 17046 1 16640\n",
            " Removing values < 1.0 in frame 17047\n",
            "Frame: 17047 1 16641\n",
            " Removing values < 1.0 in frame 17048\n",
            "Frame: 17048 1 16642\n",
            " Removing values < 1.0 in frame 17049\n",
            "Frame: 17049 1 16643\n",
            " Removing values < 1.0 in frame 17050\n",
            "Frame: 17050 1 16644\n",
            " Removing values < 1.0 in frame 17051\n",
            "Frame: 17051 1 16645\n",
            " Removing values < 1.0 in frame 17052\n",
            "Frame: 17052 1 16646\n",
            " Removing values < 1.0 in frame 17053\n",
            "Frame: 17053 1 16647\n",
            " Removing values < 1.0 in frame 17054\n",
            "Frame: 17054 1 16648\n",
            " Removing values < 1.0 in frame 17055\n",
            "Frame: 17055 1 16649\n",
            " Removing values < 1.0 in frame 17056\n",
            "Frame: 17056 1 16650\n",
            " Removing values < 1.0 in frame 17057\n",
            "Frame: 17057 1 16651\n",
            " Removing values < 1.0 in frame 17058\n",
            "Frame: 17058 1 16652\n",
            " Removing values < 1.0 in frame 17059\n",
            "Frame: 17059 1 16653\n",
            " Removing values < 1.0 in frame 17060\n",
            "Frame: 17060 1 16654\n",
            " Removing values < 1.0 in frame 17061\n",
            "Frame: 17061 1 16655\n",
            " Removing values < 1.0 in frame 17062\n",
            "Frame: 17062 1 16656\n",
            " Removing values < 1.0 in frame 17063\n",
            "Frame: 17063 1 16657\n",
            " Removing values < 1.0 in frame 17064\n",
            "Frame: 17064 1 16658\n",
            " Removing values < 1.0 in frame 17065\n",
            "Frame: 17065 1 16659\n",
            " Removing values < 1.0 in frame 17066\n",
            "Frame: 17066 1 16660\n",
            " Removing values < 1.0 in frame 17067\n",
            "Frame: 17067 1 16661\n",
            " Removing values < 1.0 in frame 17068\n",
            "Frame: 17068 1 16662\n",
            " Removing values < 1.0 in frame 17069\n",
            "Frame: 17069 1 16663\n",
            " Removing values < 1.0 in frame 17070\n",
            "Frame: 17070 1 16664\n",
            " Removing values < 1.0 in frame 17071\n",
            "Frame: 17071 1 16665\n",
            " Removing values < 1.0 in frame 17072\n",
            "Frame: 17072 1 16666\n",
            " Removing values < 1.0 in frame 17073\n",
            "Frame: 17073 1 16667\n",
            " Removing values < 1.0 in frame 17074\n",
            "Frame: 17074 1 16668\n",
            " Removing values < 1.0 in frame 17075\n",
            "Frame: 17075 1 16669\n",
            " Removing values < 1.0 in frame 17076\n",
            "Frame: 17076 1 16670\n",
            " Removing values < 1.0 in frame 17077\n",
            "Frame: 17077 1 16671\n",
            " Removing values < 1.0 in frame 17078\n",
            "Frame: 17078 1 16672\n",
            " Removing values < 1.0 in frame 17079\n",
            "Frame: 17079 1 16673\n",
            " Removing values < 1.0 in frame 17080\n",
            "Frame: 17080 1 16674\n",
            " Removing values < 1.0 in frame 17081\n",
            "Frame: 17081 1 16675\n",
            " Removing values < 1.0 in frame 17082\n",
            "Frame: 17082 1 16676\n",
            " Removing values < 1.0 in frame 17083\n",
            "Frame: 17083 1 16677\n",
            " Removing values < 1.0 in frame 17084\n",
            "Frame: 17084 1 16678\n",
            " Removing values < 1.0 in frame 17085\n",
            "Frame: 17085 1 16679\n",
            " Removing values < 1.0 in frame 17086\n",
            "Frame: 17086 1 16680\n",
            " Removing values < 1.0 in frame 17087\n",
            "Frame: 17087 1 16681\n",
            " Removing values < 1.0 in frame 17088\n",
            "Frame: 17088 1 16682\n",
            " Removing values < 1.0 in frame 17089\n",
            "Frame: 17089 1 16683\n",
            " Removing values < 1.0 in frame 17090\n",
            "Frame: 17090 1 16684\n",
            " Removing values < 1.0 in frame 17091\n",
            "Frame: 17091 1 16685\n",
            " Removing values < 1.0 in frame 17092\n",
            "Frame: 17092 1 16686\n",
            " Removing values < 1.0 in frame 17093\n",
            "Frame: 17093 1 16687\n",
            " Removing values < 1.0 in frame 17094\n",
            "Frame: 17094 1 16688\n",
            " Removing values < 1.0 in frame 17095\n",
            "Frame: 17095 1 16689\n",
            " Removing values < 1.0 in frame 17096\n",
            "Frame: 17096 1 16690\n",
            " Removing values < 1.0 in frame 17097\n",
            "Frame: 17097 1 16691\n",
            " Removing values < 1.0 in frame 17098\n",
            "Frame: 17098 1 16692\n",
            " Removing values < 1.0 in frame 17099\n",
            "Frame: 17099 1 16693\n",
            " Removing values < 1.0 in frame 17100\n",
            "Frame: 17100 1 16694\n",
            " Removing values < 1.0 in frame 17101\n",
            "Frame: 17101 1 16695\n",
            " Removing values < 1.0 in frame 17102\n",
            "Frame: 17102 1 16696\n",
            " Removing values < 1.0 in frame 17103\n",
            "Frame: 17103 1 16697\n",
            " Removing values < 1.0 in frame 17104\n",
            "Frame: 17104 1 16698\n",
            " Removing values < 1.0 in frame 17105\n",
            "Frame: 17105 1 16699\n",
            " Removing values < 1.0 in frame 17106\n",
            "Frame: 17106 1 16700\n",
            " Removing values < 1.0 in frame 17107\n",
            "Frame: 17107 1 16701\n",
            " Removing values < 1.0 in frame 17108\n",
            "Frame: 17108 1 16702\n",
            " Removing values < 1.0 in frame 17109\n",
            "Frame: 17109 1 16703\n",
            " Removing values < 1.0 in frame 17110\n",
            "Frame: 17110 1 16704\n",
            " Removing values < 1.0 in frame 17111\n",
            "Frame: 17111 1 16705\n",
            " Removing values < 1.0 in frame 17112\n",
            "Frame: 17112 1 16706\n",
            " Removing values < 1.0 in frame 17113\n",
            "Frame: 17113 1 16707\n",
            " Removing values < 1.0 in frame 17114\n",
            "Frame: 17114 1 16708\n",
            " Removing values < 1.0 in frame 17115\n",
            "Frame: 17115 1 16709\n",
            " Removing values < 1.0 in frame 17116\n",
            "Frame: 17116 1 16710\n",
            " Removing values < 1.0 in frame 17117\n",
            "Frame: 17117 1 16711\n",
            " Removing values < 1.0 in frame 17118\n",
            "Frame: 17118 1 16712\n",
            " Removing values < 1.0 in frame 17119\n",
            "Frame: 17119 1 16713\n",
            " Removing values < 1.0 in frame 17120\n",
            "Frame: 17120 1 16714\n",
            " Removing values < 1.0 in frame 17121\n",
            "Frame: 17121 1 16715\n",
            " Removing values < 1.0 in frame 17122\n",
            "Frame: 17122 1 16716\n",
            " Removing values < 1.0 in frame 17123\n",
            "Frame: 17123 1 16717\n",
            " Removing values < 1.0 in frame 17124\n",
            "Frame: 17124 1 16718\n",
            " Removing values < 1.0 in frame 17125\n",
            "Frame: 17125 1 16719\n",
            " Removing values < 1.0 in frame 17126\n",
            "Frame: 17126 1 16720\n",
            " Removing values < 1.0 in frame 17127\n",
            "Frame: 17127 1 16721\n",
            " Removing values < 1.0 in frame 17128\n",
            "Frame: 17128 1 16722\n",
            " Removing values < 1.0 in frame 17129\n",
            "Frame: 17129 1 16723\n",
            " Removing values < 1.0 in frame 17130\n",
            "Frame: 17130 1 16724\n",
            " Removing values < 1.0 in frame 17131\n",
            "Frame: 17131 1 16725\n",
            " Removing values < 1.0 in frame 17132\n",
            "Frame: 17132 1 16726\n",
            " Removing values < 1.0 in frame 17133\n",
            "Frame: 17133 1 16727\n",
            " Removing values < 1.0 in frame 17134\n",
            "Frame: 17134 0 16727\n",
            " Removing values < 1.0 in frame 17135\n",
            "Frame: 17135 1 16728\n",
            " Removing values < 1.0 in frame 17136\n",
            "Frame: 17136 1 16729\n",
            " Removing values < 1.0 in frame 17137\n",
            "Frame: 17137 1 16730\n",
            " Removing values < 1.0 in frame 17138\n",
            "Frame: 17138 1 16731\n",
            " Removing values < 1.0 in frame 17139\n",
            "Frame: 17139 1 16732\n",
            " Removing values < 1.0 in frame 17140\n",
            "Frame: 17140 1 16733\n",
            " Removing values < 1.0 in frame 17141\n",
            "Frame: 17141 1 16734\n",
            " Removing values < 1.0 in frame 17142\n",
            "Frame: 17142 1 16735\n",
            " Removing values < 1.0 in frame 17143\n",
            "Frame: 17143 1 16736\n",
            " Removing values < 1.0 in frame 17144\n",
            "Frame: 17144 1 16737\n",
            " Removing values < 1.0 in frame 17145\n",
            "Frame: 17145 1 16738\n",
            " Removing values < 1.0 in frame 17146\n",
            "Frame: 17146 1 16739\n",
            " Removing values < 1.0 in frame 17147\n",
            "Frame: 17147 1 16740\n",
            " Removing values < 1.0 in frame 17148\n",
            "Frame: 17148 1 16741\n",
            " Removing values < 1.0 in frame 17149\n",
            "Frame: 17149 1 16742\n",
            " Removing values < 1.0 in frame 17150\n",
            "Frame: 17150 1 16743\n",
            " Removing values < 1.0 in frame 17151\n",
            "Frame: 17151 1 16744\n",
            " Removing values < 1.0 in frame 17152\n",
            "Frame: 17152 1 16745\n",
            " Removing values < 1.0 in frame 17153\n",
            "Frame: 17153 1 16746\n",
            " Removing values < 1.0 in frame 17154\n",
            "Frame: 17154 1 16747\n",
            " Removing values < 1.0 in frame 17155\n",
            "Frame: 17155 1 16748\n",
            " Removing values < 1.0 in frame 17156\n",
            "Frame: 17156 1 16749\n",
            " Removing values < 1.0 in frame 17157\n",
            "Frame: 17157 1 16750\n",
            " Removing values < 1.0 in frame 17158\n",
            "Frame: 17158 1 16751\n",
            " Removing values < 1.0 in frame 17159\n",
            "Frame: 17159 1 16752\n",
            " Removing values < 1.0 in frame 17160\n",
            "Frame: 17160 1 16753\n",
            " Removing values < 1.0 in frame 17161\n",
            "Frame: 17161 1 16754\n",
            " Removing values < 1.0 in frame 17162\n",
            "Frame: 17162 1 16755\n",
            " Removing values < 1.0 in frame 17163\n",
            "Frame: 17163 1 16756\n",
            " Removing values < 1.0 in frame 17164\n",
            "Frame: 17164 1 16757\n",
            " Removing values < 1.0 in frame 17165\n",
            "Frame: 17165 1 16758\n",
            " Removing values < 1.0 in frame 17166\n",
            "Frame: 17166 1 16759\n",
            " Removing values < 1.0 in frame 17167\n",
            "Frame: 17167 1 16760\n",
            " Removing values < 1.0 in frame 17168\n",
            "Frame: 17168 1 16761\n",
            " Removing values < 1.0 in frame 17169\n",
            "Frame: 17169 1 16762\n",
            " Removing values < 1.0 in frame 17170\n",
            "Frame: 17170 1 16763\n",
            " Removing values < 1.0 in frame 17171\n",
            "Frame: 17171 1 16764\n",
            " Removing values < 1.0 in frame 17172\n",
            "Frame: 17172 1 16765\n",
            " Removing values < 1.0 in frame 17173\n",
            "Frame: 17173 1 16766\n",
            " Removing values < 1.0 in frame 17174\n",
            "Frame: 17174 1 16767\n",
            " Removing values < 1.0 in frame 17175\n",
            "Frame: 17175 1 16768\n",
            " Removing values < 1.0 in frame 17176\n",
            "Frame: 17176 1 16769\n",
            " Removing values < 1.0 in frame 17177\n",
            "Frame: 17177 1 16770\n",
            " Removing values < 1.0 in frame 17178\n",
            "Frame: 17178 1 16771\n",
            " Removing values < 1.0 in frame 17179\n",
            "Frame: 17179 1 16772\n",
            " Removing values < 1.0 in frame 17180\n",
            "Frame: 17180 1 16773\n",
            " Removing values < 1.0 in frame 17181\n",
            "Frame: 17181 1 16774\n",
            " Removing values < 1.0 in frame 17182\n",
            "Frame: 17182 1 16775\n",
            " Removing values < 1.0 in frame 17183\n",
            "Frame: 17183 1 16776\n",
            " Removing values < 1.0 in frame 17184\n",
            "Frame: 17184 1 16777\n",
            " Removing values < 1.0 in frame 17185\n",
            "Frame: 17185 1 16778\n",
            " Removing values < 1.0 in frame 17186\n",
            "Frame: 17186 1 16779\n",
            " Removing values < 1.0 in frame 17187\n",
            "Frame: 17187 1 16780\n",
            " Removing values < 1.0 in frame 17188\n",
            "Frame: 17188 1 16781\n",
            " Removing values < 1.0 in frame 17189\n",
            "Frame: 17189 1 16782\n",
            " Removing values < 1.0 in frame 17190\n",
            "Frame: 17190 1 16783\n",
            " Removing values < 1.0 in frame 17191\n",
            "Frame: 17191 1 16784\n",
            " Removing values < 1.0 in frame 17192\n",
            "Frame: 17192 1 16785\n",
            " Removing values < 1.0 in frame 17193\n",
            "Frame: 17193 1 16786\n",
            " Removing values < 1.0 in frame 17194\n",
            "Frame: 17194 1 16787\n",
            " Removing values < 1.0 in frame 17195\n",
            "Frame: 17195 1 16788\n",
            " Removing values < 1.0 in frame 17196\n",
            "Frame: 17196 1 16789\n",
            " Removing values < 1.0 in frame 17197\n",
            "Frame: 17197 1 16790\n",
            " Removing values < 1.0 in frame 17198\n",
            "Frame: 17198 1 16791\n",
            " Removing values < 1.0 in frame 17199\n",
            "Frame: 17199 1 16792\n",
            " Removing values < 1.0 in frame 17200\n",
            "Frame: 17200 1 16793\n",
            " Removing values < 1.0 in frame 17201\n",
            "Frame: 17201 1 16794\n",
            " Removing values < 1.0 in frame 17202\n",
            "Frame: 17202 1 16795\n",
            " Removing values < 1.0 in frame 17203\n",
            "Frame: 17203 1 16796\n",
            " Removing values < 1.0 in frame 17204\n",
            "Frame: 17204 1 16797\n",
            " Removing values < 1.0 in frame 17205\n",
            "Frame: 17205 1 16798\n",
            " Removing values < 1.0 in frame 17206\n",
            "Frame: 17206 1 16799\n",
            " Removing values < 1.0 in frame 17207\n",
            "Frame: 17207 1 16800\n",
            " Removing values < 1.0 in frame 17208\n",
            "Frame: 17208 1 16801\n",
            " Removing values < 1.0 in frame 17209\n",
            "Frame: 17209 1 16802\n",
            " Removing values < 1.0 in frame 17210\n",
            "Frame: 17210 1 16803\n",
            " Removing values < 1.0 in frame 17211\n",
            "Frame: 17211 1 16804\n",
            " Removing values < 1.0 in frame 17212\n",
            "Frame: 17212 1 16805\n",
            " Removing values < 1.0 in frame 17213\n",
            "Frame: 17213 1 16806\n",
            " Removing values < 1.0 in frame 17214\n",
            "Frame: 17214 1 16807\n",
            " Removing values < 1.0 in frame 17215\n",
            "Frame: 17215 1 16808\n",
            " Removing values < 1.0 in frame 17216\n",
            "Frame: 17216 1 16809\n",
            " Removing values < 1.0 in frame 17217\n",
            "Frame: 17217 1 16810\n",
            " Removing values < 1.0 in frame 17218\n",
            "Frame: 17218 1 16811\n",
            " Removing values < 1.0 in frame 17219\n",
            "Frame: 17219 1 16812\n",
            " Removing values < 1.0 in frame 17220\n",
            "Frame: 17220 1 16813\n",
            " Removing values < 1.0 in frame 17221\n",
            "Frame: 17221 0 16813\n",
            " Removing values < 1.0 in frame 17222\n",
            "Frame: 17222 1 16814\n",
            " Removing values < 1.0 in frame 17223\n",
            "Frame: 17223 1 16815\n",
            " Removing values < 1.0 in frame 17224\n",
            "Frame: 17224 1 16816\n",
            " Removing values < 1.0 in frame 17225\n",
            "Frame: 17225 1 16817\n",
            " Removing values < 1.0 in frame 17226\n",
            "Frame: 17226 1 16818\n",
            " Removing values < 1.0 in frame 17227\n",
            "Frame: 17227 1 16819\n",
            " Removing values < 1.0 in frame 17228\n",
            "Frame: 17228 1 16820\n",
            " Removing values < 1.0 in frame 17229\n",
            "Frame: 17229 1 16821\n",
            " Removing values < 1.0 in frame 17230\n",
            "Frame: 17230 1 16822\n",
            " Removing values < 1.0 in frame 17231\n",
            "Frame: 17231 1 16823\n",
            " Removing values < 1.0 in frame 17232\n",
            "Frame: 17232 1 16824\n",
            " Removing values < 1.0 in frame 17233\n",
            "Frame: 17233 1 16825\n",
            " Removing values < 1.0 in frame 17234\n",
            "Frame: 17234 1 16826\n",
            " Removing values < 1.0 in frame 17235\n",
            "Frame: 17235 1 16827\n",
            " Removing values < 1.0 in frame 17236\n",
            "Frame: 17236 1 16828\n",
            " Removing values < 1.0 in frame 17237\n",
            "Frame: 17237 1 16829\n",
            " Removing values < 1.0 in frame 17238\n",
            "Frame: 17238 1 16830\n",
            " Removing values < 1.0 in frame 17239\n",
            "Frame: 17239 1 16831\n",
            " Removing values < 1.0 in frame 17240\n",
            "Frame: 17240 1 16832\n",
            " Removing values < 1.0 in frame 17241\n",
            "Frame: 17241 1 16833\n",
            " Removing values < 1.0 in frame 17242\n",
            "Frame: 17242 1 16834\n",
            " Removing values < 1.0 in frame 17243\n",
            "Frame: 17243 1 16835\n",
            " Removing values < 1.0 in frame 17244\n",
            "Frame: 17244 1 16836\n",
            " Removing values < 1.0 in frame 17245\n",
            "Frame: 17245 1 16837\n",
            " Removing values < 1.0 in frame 17246\n",
            "Frame: 17246 1 16838\n",
            " Removing values < 1.0 in frame 17247\n",
            "Frame: 17247 1 16839\n",
            " Removing values < 1.0 in frame 17248\n",
            "Frame: 17248 1 16840\n",
            " Removing values < 1.0 in frame 17249\n",
            "Frame: 17249 1 16841\n",
            " Removing values < 1.0 in frame 17250\n",
            "Frame: 17250 1 16842\n",
            " Removing values < 1.0 in frame 17251\n",
            "Frame: 17251 1 16843\n",
            " Removing values < 1.0 in frame 17252\n",
            "Frame: 17252 1 16844\n",
            " Removing values < 1.0 in frame 17253\n",
            "Frame: 17253 1 16845\n",
            " Removing values < 1.0 in frame 17254\n",
            "Frame: 17254 1 16846\n",
            " Removing values < 1.0 in frame 17255\n",
            "Frame: 17255 1 16847\n",
            " Removing values < 1.0 in frame 17256\n",
            "Frame: 17256 1 16848\n",
            " Removing values < 1.0 in frame 17257\n",
            "Frame: 17257 1 16849\n",
            " Removing values < 1.0 in frame 17258\n",
            "Frame: 17258 1 16850\n",
            " Removing values < 1.0 in frame 17259\n",
            "Frame: 17259 1 16851\n",
            " Removing values < 1.0 in frame 17260\n",
            "Frame: 17260 1 16852\n",
            " Removing values < 1.0 in frame 17261\n",
            "Frame: 17261 1 16853\n",
            " Removing values < 1.0 in frame 17262\n",
            "Frame: 17262 1 16854\n",
            " Removing values < 1.0 in frame 17263\n",
            "Frame: 17263 1 16855\n",
            " Removing values < 1.0 in frame 17264\n",
            "Frame: 17264 1 16856\n",
            " Removing values < 1.0 in frame 17265\n",
            "Frame: 17265 1 16857\n",
            " Removing values < 1.0 in frame 17266\n",
            "Frame: 17266 1 16858\n",
            " Removing values < 1.0 in frame 17267\n",
            "Frame: 17267 1 16859\n",
            " Removing values < 1.0 in frame 17268\n",
            "Frame: 17268 1 16860\n",
            " Removing values < 1.0 in frame 17269\n",
            "Frame: 17269 1 16861\n",
            " Removing values < 1.0 in frame 17270\n",
            "Frame: 17270 1 16862\n",
            " Removing values < 1.0 in frame 17271\n",
            "Frame: 17271 1 16863\n",
            " Removing values < 1.0 in frame 17272\n",
            "Frame: 17272 1 16864\n",
            " Removing values < 1.0 in frame 17273\n",
            "Frame: 17273 1 16865\n",
            " Removing values < 1.0 in frame 17274\n",
            "Frame: 17274 1 16866\n",
            " Removing values < 1.0 in frame 17275\n",
            "Frame: 17275 1 16867\n",
            " Removing values < 1.0 in frame 17276\n",
            "Frame: 17276 1 16868\n",
            " Removing values < 1.0 in frame 17277\n",
            "Frame: 17277 1 16869\n",
            " Removing values < 1.0 in frame 17278\n",
            "Frame: 17278 1 16870\n",
            " Removing values < 1.0 in frame 17279\n",
            "Frame: 17279 1 16871\n",
            " Removing values < 1.0 in frame 17280\n",
            "Frame: 17280 1 16872\n",
            " Removing values < 1.0 in frame 17281\n",
            "Frame: 17281 1 16873\n",
            " Removing values < 1.0 in frame 17282\n",
            "Frame: 17282 1 16874\n",
            " Removing values < 1.0 in frame 17283\n",
            "Frame: 17283 1 16875\n",
            " Removing values < 1.0 in frame 17284\n",
            "Frame: 17284 1 16876\n",
            " Removing values < 1.0 in frame 17285\n",
            "Frame: 17285 1 16877\n",
            " Removing values < 1.0 in frame 17286\n",
            "Frame: 17286 1 16878\n",
            " Removing values < 1.0 in frame 17287\n",
            "Frame: 17287 1 16879\n",
            " Removing values < 1.0 in frame 17288\n",
            "Frame: 17288 1 16880\n",
            " Removing values < 1.0 in frame 17289\n",
            "Frame: 17289 1 16881\n",
            " Removing values < 1.0 in frame 17290\n",
            "Frame: 17290 1 16882\n",
            " Removing values < 1.0 in frame 17291\n",
            "Frame: 17291 1 16883\n",
            " Removing values < 1.0 in frame 17292\n",
            "Frame: 17292 1 16884\n",
            " Removing values < 1.0 in frame 17293\n",
            "Frame: 17293 1 16885\n",
            " Removing values < 1.0 in frame 17294\n",
            "Frame: 17294 1 16886\n",
            " Removing values < 1.0 in frame 17295\n",
            "Frame: 17295 1 16887\n",
            " Removing values < 1.0 in frame 17296\n",
            "Frame: 17296 1 16888\n",
            " Removing values < 1.0 in frame 17297\n",
            "Frame: 17297 1 16889\n",
            " Removing values < 1.0 in frame 17298\n",
            "Frame: 17298 1 16890\n",
            " Removing values < 1.0 in frame 17299\n",
            "Frame: 17299 1 16891\n",
            " Removing values < 1.0 in frame 17300\n",
            "Frame: 17300 1 16892\n",
            " Removing values < 1.0 in frame 17301\n",
            "Frame: 17301 1 16893\n",
            " Removing values < 1.0 in frame 17302\n",
            "Frame: 17302 1 16894\n",
            " Removing values < 1.0 in frame 17303\n",
            "Frame: 17303 1 16895\n",
            " Removing values < 1.0 in frame 17304\n",
            "Frame: 17304 1 16896\n",
            " Removing values < 1.0 in frame 17305\n",
            "Frame: 17305 1 16897\n",
            " Removing values < 1.0 in frame 17306\n",
            "Frame: 17306 1 16898\n",
            " Removing values < 1.0 in frame 17307\n",
            "Frame: 17307 1 16899\n",
            " Removing values < 1.0 in frame 17308\n",
            "Frame: 17308 1 16900\n",
            " Removing values < 1.0 in frame 17309\n",
            "Frame: 17309 1 16901\n",
            " Removing values < 1.0 in frame 17310\n",
            "Frame: 17310 1 16902\n",
            " Removing values < 1.0 in frame 17311\n",
            "Frame: 17311 1 16903\n",
            " Removing values < 1.0 in frame 17312\n",
            "Frame: 17312 1 16904\n",
            " Removing values < 1.0 in frame 17313\n",
            "Frame: 17313 1 16905\n",
            " Removing values < 1.0 in frame 17314\n",
            "Frame: 17314 1 16906\n",
            " Removing values < 1.0 in frame 17315\n",
            "Frame: 17315 1 16907\n",
            " Removing values < 1.0 in frame 17316\n",
            "Frame: 17316 1 16908\n",
            " Removing values < 1.0 in frame 17317\n",
            "Frame: 17317 1 16909\n",
            " Removing values < 1.0 in frame 17318\n",
            "Frame: 17318 1 16910\n",
            " Removing values < 1.0 in frame 17319\n",
            "Frame: 17319 1 16911\n",
            " Removing values < 1.0 in frame 17320\n",
            "Frame: 17320 1 16912\n",
            " Removing values < 1.0 in frame 17321\n",
            "Frame: 17321 1 16913\n",
            " Removing values < 1.0 in frame 17322\n",
            "Frame: 17322 1 16914\n",
            " Removing values < 1.0 in frame 17323\n",
            "Frame: 17323 1 16915\n",
            " Removing values < 1.0 in frame 17324\n",
            "Frame: 17324 1 16916\n",
            " Removing values < 1.0 in frame 17325\n",
            "Frame: 17325 1 16917\n",
            " Removing values < 1.0 in frame 17326\n",
            "Frame: 17326 1 16918\n",
            " Removing values < 1.0 in frame 17327\n",
            "Frame: 17327 1 16919\n",
            " Removing values < 1.0 in frame 17328\n",
            "Frame: 17328 1 16920\n",
            " Removing values < 1.0 in frame 17329\n",
            "Frame: 17329 1 16921\n",
            " Removing values < 1.0 in frame 17330\n",
            "Frame: 17330 1 16922\n",
            " Removing values < 1.0 in frame 17331\n",
            "Frame: 17331 1 16923\n",
            " Removing values < 1.0 in frame 17332\n",
            "Frame: 17332 1 16924\n",
            " Removing values < 1.0 in frame 17333\n",
            "Frame: 17333 1 16925\n",
            " Removing values < 1.0 in frame 17334\n",
            "Frame: 17334 1 16926\n",
            " Removing values < 1.0 in frame 17335\n",
            "Frame: 17335 1 16927\n",
            " Removing values < 1.0 in frame 17336\n",
            "Frame: 17336 1 16928\n",
            " Removing values < 1.0 in frame 17337\n",
            "Frame: 17337 1 16929\n",
            " Removing values < 1.0 in frame 17338\n",
            "Frame: 17338 1 16930\n",
            " Removing values < 1.0 in frame 17339\n",
            "Frame: 17339 1 16931\n",
            " Removing values < 1.0 in frame 17340\n",
            "Frame: 17340 1 16932\n",
            " Removing values < 1.0 in frame 17341\n",
            "Frame: 17341 1 16933\n",
            " Removing values < 1.0 in frame 17342\n",
            "Frame: 17342 1 16934\n",
            " Removing values < 1.0 in frame 17343\n",
            "Frame: 17343 1 16935\n",
            " Removing values < 1.0 in frame 17344\n",
            "Frame: 17344 1 16936\n",
            " Removing values < 1.0 in frame 17345\n",
            "Frame: 17345 1 16937\n",
            " Removing values < 1.0 in frame 17346\n",
            "Frame: 17346 1 16938\n",
            " Removing values < 1.0 in frame 17347\n",
            "Frame: 17347 1 16939\n",
            " Removing values < 1.0 in frame 17348\n",
            "Frame: 17348 1 16940\n",
            " Removing values < 1.0 in frame 17349\n",
            "Frame: 17349 1 16941\n",
            " Removing values < 1.0 in frame 17350\n",
            "Frame: 17350 1 16942\n",
            " Removing values < 1.0 in frame 17351\n",
            "Frame: 17351 1 16943\n",
            " Removing values < 1.0 in frame 17352\n",
            "Frame: 17352 1 16944\n",
            " Removing values < 1.0 in frame 17353\n",
            "Frame: 17353 1 16945\n",
            " Removing values < 1.0 in frame 17354\n",
            "Frame: 17354 1 16946\n",
            " Removing values < 1.0 in frame 17355\n",
            "Frame: 17355 1 16947\n",
            " Removing values < 1.0 in frame 17356\n",
            "Frame: 17356 1 16948\n",
            " Removing values < 1.0 in frame 17357\n",
            "Frame: 17357 1 16949\n",
            " Removing values < 1.0 in frame 17358\n",
            "Frame: 17358 1 16950\n",
            " Removing values < 1.0 in frame 17359\n",
            "Frame: 17359 1 16951\n",
            " Removing values < 1.0 in frame 17360\n",
            "Frame: 17360 1 16952\n",
            " Removing values < 1.0 in frame 17361\n",
            "Frame: 17361 1 16953\n",
            " Removing values < 1.0 in frame 17362\n",
            "Frame: 17362 1 16954\n",
            " Removing values < 1.0 in frame 17363\n",
            "Frame: 17363 1 16955\n",
            " Removing values < 1.0 in frame 17364\n",
            "Frame: 17364 1 16956\n",
            " Removing values < 1.0 in frame 17365\n",
            "Frame: 17365 1 16957\n",
            " Removing values < 1.0 in frame 17366\n",
            "Frame: 17366 1 16958\n",
            " Removing values < 1.0 in frame 17367\n",
            "Frame: 17367 0 16958\n",
            " Removing values < 1.0 in frame 17368\n",
            "Frame: 17368 0 16958\n",
            " Removing values < 1.0 in frame 17369\n",
            "Frame: 17369 1 16959\n",
            " Removing values < 1.0 in frame 17370\n",
            "Frame: 17370 1 16960\n",
            " Removing values < 1.0 in frame 17371\n",
            "Frame: 17371 1 16961\n",
            " Removing values < 1.0 in frame 17372\n",
            "Frame: 17372 1 16962\n",
            " Removing values < 1.0 in frame 17373\n",
            "Frame: 17373 1 16963\n",
            " Removing values < 1.0 in frame 17374\n",
            "Frame: 17374 1 16964\n",
            " Removing values < 1.0 in frame 17375\n",
            "Frame: 17375 0 16964\n",
            " Removing values < 1.0 in frame 17376\n",
            "Frame: 17376 1 16965\n",
            " Removing values < 1.0 in frame 17377\n",
            "Frame: 17377 1 16966\n",
            " Removing values < 1.0 in frame 17378\n",
            "Frame: 17378 1 16967\n",
            " Removing values < 1.0 in frame 17379\n",
            "Frame: 17379 1 16968\n",
            " Removing values < 1.0 in frame 17380\n",
            "Frame: 17380 0 16968\n",
            " Removing values < 1.0 in frame 17381\n",
            "Frame: 17381 1 16969\n",
            " Removing values < 1.0 in frame 17382\n",
            "Frame: 17382 1 16970\n",
            " Removing values < 1.0 in frame 17383\n",
            "Frame: 17383 1 16971\n",
            " Removing values < 1.0 in frame 17384\n",
            "Frame: 17384 1 16972\n",
            " Removing values < 1.0 in frame 17385\n",
            "Frame: 17385 1 16973\n",
            " Removing values < 1.0 in frame 17386\n",
            "Frame: 17386 1 16974\n",
            " Removing values < 1.0 in frame 17387\n",
            "Frame: 17387 1 16975\n",
            " Removing values < 1.0 in frame 17388\n",
            "Frame: 17388 1 16976\n",
            " Removing values < 1.0 in frame 17389\n",
            "Frame: 17389 1 16977\n",
            " Removing values < 1.0 in frame 17390\n",
            "Frame: 17390 1 16978\n",
            " Removing values < 1.0 in frame 17391\n",
            "Frame: 17391 1 16979\n",
            " Removing values < 1.0 in frame 17392\n",
            "Frame: 17392 1 16980\n",
            " Removing values < 1.0 in frame 17393\n",
            "Frame: 17393 0 16980\n",
            " Removing values < 1.0 in frame 17394\n",
            "Frame: 17394 0 16980\n",
            " Removing values < 1.0 in frame 17395\n",
            "Frame: 17395 1 16981\n",
            " Removing values < 1.0 in frame 17396\n",
            "Frame: 17396 1 16982\n",
            " Removing values < 1.0 in frame 17397\n",
            "Frame: 17397 1 16983\n",
            " Removing values < 1.0 in frame 17398\n",
            "Frame: 17398 1 16984\n",
            " Removing values < 1.0 in frame 17399\n",
            "Frame: 17399 1 16985\n",
            " Removing values < 1.0 in frame 17400\n",
            "Frame: 17400 1 16986\n",
            " Removing values < 1.0 in frame 17401\n",
            "Frame: 17401 1 16987\n",
            " Removing values < 1.0 in frame 17402\n",
            "Frame: 17402 0 16987\n",
            " Removing values < 1.0 in frame 17403\n",
            "Frame: 17403 1 16988\n",
            " Removing values < 1.0 in frame 17404\n",
            "Frame: 17404 1 16989\n",
            " Removing values < 1.0 in frame 17405\n",
            "Frame: 17405 1 16990\n",
            " Removing values < 1.0 in frame 17406\n",
            "Frame: 17406 1 16991\n",
            " Removing values < 1.0 in frame 17407\n",
            "Frame: 17407 1 16992\n",
            " Removing values < 1.0 in frame 17408\n",
            "Frame: 17408 1 16993\n",
            " Removing values < 1.0 in frame 17409\n",
            "Frame: 17409 1 16994\n",
            " Removing values < 1.0 in frame 17410\n",
            "Frame: 17410 0 16994\n",
            " Removing values < 1.0 in frame 17411\n",
            "Frame: 17411 1 16995\n",
            " Removing values < 1.0 in frame 17412\n",
            "Frame: 17412 0 16995\n",
            " Removing values < 1.0 in frame 17413\n",
            "Frame: 17413 1 16996\n",
            " Removing values < 1.0 in frame 17414\n",
            "Frame: 17414 1 16997\n",
            " Removing values < 1.0 in frame 17415\n",
            "Frame: 17415 1 16998\n",
            " Removing values < 1.0 in frame 17416\n",
            "Frame: 17416 1 16999\n",
            " Removing values < 1.0 in frame 17417\n",
            "Frame: 17417 1 17000\n",
            " Removing values < 1.0 in frame 17418\n",
            "Frame: 17418 1 17001\n",
            " Removing values < 1.0 in frame 17419\n",
            "Frame: 17419 0 17001\n",
            " Removing values < 1.0 in frame 17420\n",
            "Frame: 17420 1 17002\n",
            " Removing values < 1.0 in frame 17421\n",
            "Frame: 17421 1 17003\n",
            " Removing values < 1.0 in frame 17422\n",
            "Frame: 17422 1 17004\n",
            " Removing values < 1.0 in frame 17423\n",
            "Frame: 17423 1 17005\n",
            " Removing values < 1.0 in frame 17424\n",
            "Frame: 17424 0 17005\n",
            " Removing values < 1.0 in frame 17425\n",
            "Frame: 17425 1 17006\n",
            " Removing values < 1.0 in frame 17426\n",
            "Frame: 17426 1 17007\n",
            " Removing values < 1.0 in frame 17427\n",
            "Frame: 17427 1 17008\n",
            " Removing values < 1.0 in frame 17428\n",
            "Frame: 17428 1 17009\n",
            " Removing values < 1.0 in frame 17429\n",
            "Frame: 17429 1 17010\n",
            " Removing values < 1.0 in frame 17430\n",
            "Frame: 17430 1 17011\n",
            " Removing values < 1.0 in frame 17431\n",
            "Frame: 17431 1 17012\n",
            " Removing values < 1.0 in frame 17432\n",
            "Frame: 17432 1 17013\n",
            " Removing values < 1.0 in frame 17433\n",
            "Frame: 17433 1 17014\n",
            " Removing values < 1.0 in frame 17434\n",
            "Frame: 17434 1 17015\n",
            " Removing values < 1.0 in frame 17435\n",
            "Frame: 17435 1 17016\n",
            " Removing values < 1.0 in frame 17436\n",
            "Frame: 17436 1 17017\n",
            " Removing values < 1.0 in frame 17437\n",
            "Frame: 17437 0 17017\n",
            " Removing values < 1.0 in frame 17438\n",
            "Frame: 17438 1 17018\n",
            " Removing values < 1.0 in frame 17439\n",
            "Frame: 17439 1 17019\n",
            " Removing values < 1.0 in frame 17440\n",
            "Frame: 17440 1 17020\n",
            " Removing values < 1.0 in frame 17441\n",
            "Frame: 17441 1 17021\n",
            " Removing values < 1.0 in frame 17442\n",
            "Frame: 17442 1 17022\n",
            " Removing values < 1.0 in frame 17443\n",
            "Frame: 17443 1 17023\n",
            " Removing values < 1.0 in frame 17444\n",
            "Frame: 17444 1 17024\n",
            " Removing values < 1.0 in frame 17445\n",
            "Frame: 17445 1 17025\n",
            " Removing values < 1.0 in frame 17446\n",
            "Frame: 17446 1 17026\n",
            " Removing values < 1.0 in frame 17447\n",
            "Frame: 17447 1 17027\n",
            " Removing values < 1.0 in frame 17448\n",
            "Frame: 17448 1 17028\n",
            " Removing values < 1.0 in frame 17449\n",
            "Frame: 17449 1 17029\n",
            " Removing values < 1.0 in frame 17450\n",
            "Frame: 17450 1 17030\n",
            " Removing values < 1.0 in frame 17451\n",
            "Frame: 17451 1 17031\n",
            " Removing values < 1.0 in frame 17452\n",
            "Frame: 17452 1 17032\n",
            " Removing values < 1.0 in frame 17453\n",
            "Frame: 17453 1 17033\n",
            " Removing values < 1.0 in frame 17454\n",
            "Frame: 17454 1 17034\n",
            " Removing values < 1.0 in frame 17455\n",
            "Frame: 17455 1 17035\n",
            " Removing values < 1.0 in frame 17456\n",
            "Frame: 17456 1 17036\n",
            " Removing values < 1.0 in frame 17457\n",
            "Frame: 17457 1 17037\n",
            " Removing values < 1.0 in frame 17458\n",
            "Frame: 17458 1 17038\n",
            " Removing values < 1.0 in frame 17459\n",
            "Frame: 17459 1 17039\n",
            " Removing values < 1.0 in frame 17460\n",
            "Frame: 17460 1 17040\n",
            " Removing values < 1.0 in frame 17461\n",
            "Frame: 17461 1 17041\n",
            " Removing values < 1.0 in frame 17462\n",
            "Frame: 17462 1 17042\n",
            " Removing values < 1.0 in frame 17463\n",
            "Frame: 17463 1 17043\n",
            " Removing values < 1.0 in frame 17464\n",
            "Frame: 17464 1 17044\n",
            " Removing values < 1.0 in frame 17465\n",
            "Frame: 17465 1 17045\n",
            " Removing values < 1.0 in frame 17466\n",
            "Frame: 17466 1 17046\n",
            " Removing values < 1.0 in frame 17467\n",
            "Frame: 17467 1 17047\n",
            " Removing values < 1.0 in frame 17468\n",
            "Frame: 17468 1 17048\n",
            " Removing values < 1.0 in frame 17469\n",
            "Frame: 17469 1 17049\n",
            " Removing values < 1.0 in frame 17470\n",
            "Frame: 17470 1 17050\n",
            " Removing values < 1.0 in frame 17471\n",
            "Frame: 17471 1 17051\n",
            " Removing values < 1.0 in frame 17472\n",
            "Frame: 17472 1 17052\n",
            " Removing values < 1.0 in frame 17473\n",
            "Frame: 17473 1 17053\n",
            " Removing values < 1.0 in frame 17474\n",
            "Frame: 17474 1 17054\n",
            " Removing values < 1.0 in frame 17475\n",
            "Frame: 17475 1 17055\n",
            " Removing values < 1.0 in frame 17476\n",
            "Frame: 17476 0 17055\n",
            " Removing values < 1.0 in frame 17477\n",
            "Frame: 17477 1 17056\n",
            " Removing values < 1.0 in frame 17478\n",
            "Frame: 17478 1 17057\n",
            " Removing values < 1.0 in frame 17479\n",
            "Frame: 17479 1 17058\n",
            " Removing values < 1.0 in frame 17480\n",
            "Frame: 17480 1 17059\n",
            " Removing values < 1.0 in frame 17481\n",
            "Frame: 17481 1 17060\n",
            " Removing values < 1.0 in frame 17482\n",
            "Frame: 17482 1 17061\n",
            " Removing values < 1.0 in frame 17483\n",
            "Frame: 17483 1 17062\n",
            " Removing values < 1.0 in frame 17484\n",
            "Frame: 17484 1 17063\n",
            " Removing values < 1.0 in frame 17485\n",
            "Frame: 17485 1 17064\n",
            " Removing values < 1.0 in frame 17486\n",
            "Frame: 17486 1 17065\n",
            " Removing values < 1.0 in frame 17487\n",
            "Frame: 17487 0 17065\n",
            " Removing values < 1.0 in frame 17488\n",
            "Frame: 17488 1 17066\n",
            " Removing values < 1.0 in frame 17489\n",
            "Frame: 17489 1 17067\n",
            " Removing values < 1.0 in frame 17490\n",
            "Frame: 17490 1 17068\n",
            " Removing values < 1.0 in frame 17491\n",
            "Frame: 17491 1 17069\n",
            " Removing values < 1.0 in frame 17492\n",
            "Frame: 17492 1 17070\n",
            " Removing values < 1.0 in frame 17493\n",
            "Frame: 17493 1 17071\n",
            " Removing values < 1.0 in frame 17494\n",
            "Frame: 17494 1 17072\n",
            " Removing values < 1.0 in frame 17495\n",
            "Frame: 17495 1 17073\n",
            " Removing values < 1.0 in frame 17496\n",
            "Frame: 17496 1 17074\n",
            " Removing values < 1.0 in frame 17497\n",
            "Frame: 17497 0 17074\n",
            " Removing values < 1.0 in frame 17498\n",
            "Frame: 17498 1 17075\n",
            " Removing values < 1.0 in frame 17499\n",
            "Frame: 17499 1 17076\n",
            " Removing values < 1.0 in frame 17500\n",
            "Frame: 17500 1 17077\n",
            " Removing values < 1.0 in frame 17501\n",
            "Frame: 17501 1 17078\n",
            " Removing values < 1.0 in frame 17502\n",
            "Frame: 17502 1 17079\n",
            " Removing values < 1.0 in frame 17503\n",
            "Frame: 17503 1 17080\n",
            " Removing values < 1.0 in frame 17504\n",
            "Frame: 17504 1 17081\n",
            " Removing values < 1.0 in frame 17505\n",
            "Frame: 17505 1 17082\n",
            " Removing values < 1.0 in frame 17506\n",
            "Frame: 17506 1 17083\n",
            " Removing values < 1.0 in frame 17507\n",
            "Frame: 17507 1 17084\n",
            " Removing values < 1.0 in frame 17508\n",
            "Frame: 17508 1 17085\n",
            " Removing values < 1.0 in frame 17509\n",
            "Frame: 17509 0 17085\n",
            " Removing values < 1.0 in frame 17510\n",
            "Frame: 17510 1 17086\n",
            " Removing values < 1.0 in frame 17511\n",
            "Frame: 17511 1 17087\n",
            " Removing values < 1.0 in frame 17512\n",
            "Frame: 17512 1 17088\n",
            " Removing values < 1.0 in frame 17513\n",
            "Frame: 17513 1 17089\n",
            " Removing values < 1.0 in frame 17514\n",
            "Frame: 17514 0 17089\n",
            " Removing values < 1.0 in frame 17515\n",
            "Frame: 17515 1 17090\n",
            " Removing values < 1.0 in frame 17516\n",
            "Frame: 17516 1 17091\n",
            " Removing values < 1.0 in frame 17517\n",
            "Frame: 17517 1 17092\n",
            " Removing values < 1.0 in frame 17518\n",
            "Frame: 17518 1 17093\n",
            " Removing values < 1.0 in frame 17519\n",
            "Frame: 17519 1 17094\n",
            " Removing values < 1.0 in frame 17520\n",
            "Frame: 17520 1 17095\n",
            " Removing values < 1.0 in frame 17521\n",
            "Frame: 17521 1 17096\n",
            " Removing values < 1.0 in frame 17522\n",
            "Frame: 17522 1 17097\n",
            " Removing values < 1.0 in frame 17523\n",
            "Frame: 17523 1 17098\n",
            " Removing values < 1.0 in frame 17524\n",
            "Frame: 17524 1 17099\n",
            " Removing values < 1.0 in frame 17525\n",
            "Frame: 17525 1 17100\n",
            " Removing values < 1.0 in frame 17526\n",
            "Frame: 17526 1 17101\n",
            " Removing values < 1.0 in frame 17527\n",
            "Frame: 17527 1 17102\n",
            " Removing values < 1.0 in frame 17528\n",
            "Frame: 17528 0 17102\n",
            " Removing values < 1.0 in frame 17529\n",
            "Frame: 17529 1 17103\n",
            " Removing values < 1.0 in frame 17530\n",
            "Frame: 17530 1 17104\n",
            " Removing values < 1.0 in frame 17531\n",
            "Frame: 17531 1 17105\n",
            " Removing values < 1.0 in frame 17532\n",
            "Frame: 17532 0 17105\n",
            " Removing values < 1.0 in frame 17533\n",
            "Frame: 17533 1 17106\n",
            " Removing values < 1.0 in frame 17534\n",
            "Frame: 17534 1 17107\n",
            " Removing values < 1.0 in frame 17535\n",
            "Frame: 17535 1 17108\n",
            " Removing values < 1.0 in frame 17536\n",
            "Frame: 17536 1 17109\n",
            " Removing values < 1.0 in frame 17537\n",
            "Frame: 17537 1 17110\n",
            " Removing values < 1.0 in frame 17538\n",
            "Frame: 17538 1 17111\n",
            " Removing values < 1.0 in frame 17539\n",
            "Frame: 17539 1 17112\n",
            " Removing values < 1.0 in frame 17540\n",
            "Frame: 17540 0 17112\n",
            " Removing values < 1.0 in frame 17541\n",
            "Frame: 17541 1 17113\n",
            " Removing values < 1.0 in frame 17542\n",
            "Frame: 17542 1 17114\n",
            " Removing values < 1.0 in frame 17543\n",
            "Frame: 17543 1 17115\n",
            " Removing values < 1.0 in frame 17544\n",
            "Frame: 17544 1 17116\n",
            " Removing values < 1.0 in frame 17545\n",
            "Frame: 17545 1 17117\n",
            " Removing values < 1.0 in frame 17546\n",
            "Frame: 17546 1 17118\n",
            " Removing values < 1.0 in frame 17547\n",
            "Frame: 17547 1 17119\n",
            " Removing values < 1.0 in frame 17548\n",
            "Frame: 17548 1 17120\n",
            " Removing values < 1.0 in frame 17549\n",
            "Frame: 17549 1 17121\n",
            " Removing values < 1.0 in frame 17550\n",
            "Frame: 17550 0 17121\n",
            " Removing values < 1.0 in frame 17551\n",
            "Frame: 17551 1 17122\n",
            " Removing values < 1.0 in frame 17552\n",
            "Frame: 17552 1 17123\n",
            " Removing values < 1.0 in frame 17553\n",
            "Frame: 17553 1 17124\n",
            " Removing values < 1.0 in frame 17554\n",
            "Frame: 17554 1 17125\n",
            " Removing values < 1.0 in frame 17555\n",
            "Frame: 17555 1 17126\n",
            " Removing values < 1.0 in frame 17556\n",
            "Frame: 17556 0 17126\n",
            " Removing values < 1.0 in frame 17557\n",
            "Frame: 17557 1 17127\n",
            " Removing values < 1.0 in frame 17558\n",
            "Frame: 17558 1 17128\n",
            " Removing values < 1.0 in frame 17559\n",
            "Frame: 17559 1 17129\n",
            " Removing values < 1.0 in frame 17560\n",
            "Frame: 17560 1 17130\n",
            " Removing values < 1.0 in frame 17561\n",
            "Frame: 17561 1 17131\n",
            " Removing values < 1.0 in frame 17562\n",
            "Frame: 17562 1 17132\n",
            " Removing values < 1.0 in frame 17563\n",
            "Frame: 17563 1 17133\n",
            " Removing values < 1.0 in frame 17564\n",
            "Frame: 17564 1 17134\n",
            " Removing values < 1.0 in frame 17565\n",
            "Frame: 17565 1 17135\n",
            " Removing values < 1.0 in frame 17566\n",
            "Frame: 17566 1 17136\n",
            " Removing values < 1.0 in frame 17567\n",
            "Frame: 17567 1 17137\n",
            " Removing values < 1.0 in frame 17568\n",
            "Frame: 17568 1 17138\n",
            " Removing values < 1.0 in frame 17569\n",
            "Frame: 17569 1 17139\n",
            " Removing values < 1.0 in frame 17570\n",
            "Frame: 17570 1 17140\n",
            " Removing values < 1.0 in frame 17571\n",
            "Frame: 17571 1 17141\n",
            " Removing values < 1.0 in frame 17572\n",
            "Frame: 17572 1 17142\n",
            " Removing values < 1.0 in frame 17573\n",
            "Frame: 17573 1 17143\n",
            " Removing values < 1.0 in frame 17574\n",
            "Frame: 17574 1 17144\n",
            " Removing values < 1.0 in frame 17575\n",
            "Frame: 17575 1 17145\n",
            " Removing values < 1.0 in frame 17576\n",
            "Frame: 17576 1 17146\n",
            " Removing values < 1.0 in frame 17577\n",
            "Frame: 17577 1 17147\n",
            " Removing values < 1.0 in frame 17578\n",
            "Frame: 17578 1 17148\n",
            " Removing values < 1.0 in frame 17579\n",
            "Frame: 17579 1 17149\n",
            " Removing values < 1.0 in frame 17580\n",
            "Frame: 17580 1 17150\n",
            " Removing values < 1.0 in frame 17581\n",
            "Frame: 17581 1 17151\n",
            " Removing values < 1.0 in frame 17582\n",
            "Frame: 17582 1 17152\n",
            " Removing values < 1.0 in frame 17583\n",
            "Frame: 17583 1 17153\n",
            " Removing values < 1.0 in frame 17584\n",
            "Frame: 17584 1 17154\n",
            " Removing values < 1.0 in frame 17585\n",
            "Frame: 17585 0 17154\n",
            " Removing values < 1.0 in frame 17586\n",
            "Frame: 17586 1 17155\n",
            " Removing values < 1.0 in frame 17587\n",
            "Frame: 17587 1 17156\n",
            " Removing values < 1.0 in frame 17588\n",
            "Frame: 17588 1 17157\n",
            " Removing values < 1.0 in frame 17589\n",
            "Frame: 17589 1 17158\n",
            " Removing values < 1.0 in frame 17590\n",
            "Frame: 17590 1 17159\n",
            " Removing values < 1.0 in frame 17591\n",
            "Frame: 17591 1 17160\n",
            " Removing values < 1.0 in frame 17592\n",
            "Frame: 17592 1 17161\n",
            " Removing values < 1.0 in frame 17593\n",
            "Frame: 17593 1 17162\n",
            " Removing values < 1.0 in frame 17594\n",
            "Frame: 17594 1 17163\n",
            " Removing values < 1.0 in frame 17595\n",
            "Frame: 17595 1 17164\n",
            " Removing values < 1.0 in frame 17596\n",
            "Frame: 17596 1 17165\n",
            " Removing values < 1.0 in frame 17597\n",
            "Frame: 17597 0 17165\n",
            " Removing values < 1.0 in frame 17598\n",
            "Frame: 17598 1 17166\n",
            " Removing values < 1.0 in frame 17599\n",
            "Frame: 17599 1 17167\n",
            " Removing values < 1.0 in frame 17600\n",
            "Frame: 17600 1 17168\n",
            " Removing values < 1.0 in frame 17601\n",
            "Frame: 17601 1 17169\n",
            " Removing values < 1.0 in frame 17602\n",
            "Frame: 17602 1 17170\n",
            " Removing values < 1.0 in frame 17603\n",
            "Frame: 17603 0 17170\n",
            " Removing values < 1.0 in frame 17604\n",
            "Frame: 17604 1 17171\n",
            " Removing values < 1.0 in frame 17605\n",
            "Frame: 17605 1 17172\n",
            " Removing values < 1.0 in frame 17606\n",
            "Frame: 17606 0 17172\n",
            " Removing values < 1.0 in frame 17607\n",
            "Frame: 17607 1 17173\n",
            " Removing values < 1.0 in frame 17608\n",
            "Frame: 17608 1 17174\n",
            " Removing values < 1.0 in frame 17609\n",
            "Frame: 17609 1 17175\n",
            " Removing values < 1.0 in frame 17610\n",
            "Frame: 17610 1 17176\n",
            " Removing values < 1.0 in frame 17611\n",
            "Frame: 17611 0 17176\n",
            " Removing values < 1.0 in frame 17612\n",
            "Frame: 17612 1 17177\n",
            " Removing values < 1.0 in frame 17613\n",
            "Frame: 17613 1 17178\n",
            " Removing values < 1.0 in frame 17614\n",
            "Frame: 17614 1 17179\n",
            " Removing values < 1.0 in frame 17615\n",
            "Frame: 17615 1 17180\n",
            " Removing values < 1.0 in frame 17616\n",
            "Frame: 17616 1 17181\n",
            " Removing values < 1.0 in frame 17617\n",
            "Frame: 17617 1 17182\n",
            " Removing values < 1.0 in frame 17618\n",
            "Frame: 17618 1 17183\n",
            " Removing values < 1.0 in frame 17619\n",
            "Frame: 17619 1 17184\n",
            " Removing values < 1.0 in frame 17620\n",
            "Frame: 17620 1 17185\n",
            " Removing values < 1.0 in frame 17621\n",
            "Frame: 17621 1 17186\n",
            " Removing values < 1.0 in frame 17622\n",
            "Frame: 17622 1 17187\n",
            " Removing values < 1.0 in frame 17623\n",
            "Frame: 17623 1 17188\n",
            " Removing values < 1.0 in frame 17624\n",
            "Frame: 17624 1 17189\n",
            " Removing values < 1.0 in frame 17625\n",
            "Frame: 17625 1 17190\n",
            " Removing values < 1.0 in frame 17626\n",
            "Frame: 17626 1 17191\n",
            " Removing values < 1.0 in frame 17627\n",
            "Frame: 17627 1 17192\n",
            " Removing values < 1.0 in frame 17628\n",
            "Frame: 17628 1 17193\n",
            " Removing values < 1.0 in frame 17629\n",
            "Frame: 17629 1 17194\n",
            " Removing values < 1.0 in frame 17630\n",
            "Frame: 17630 1 17195\n",
            " Removing values < 1.0 in frame 17631\n",
            "Frame: 17631 1 17196\n",
            " Removing values < 1.0 in frame 17632\n",
            "Frame: 17632 1 17197\n",
            " Removing values < 1.0 in frame 17633\n",
            "Frame: 17633 1 17198\n",
            " Removing values < 1.0 in frame 17634\n",
            "Frame: 17634 1 17199\n",
            " Removing values < 1.0 in frame 17635\n",
            "Frame: 17635 0 17199\n",
            " Removing values < 1.0 in frame 17636\n",
            "Frame: 17636 1 17200\n",
            " Removing values < 1.0 in frame 17637\n",
            "Frame: 17637 1 17201\n",
            " Removing values < 1.0 in frame 17638\n",
            "Frame: 17638 1 17202\n",
            " Removing values < 1.0 in frame 17639\n",
            "Frame: 17639 1 17203\n",
            " Removing values < 1.0 in frame 17640\n",
            "Frame: 17640 1 17204\n",
            " Removing values < 1.0 in frame 17641\n",
            "Frame: 17641 0 17204\n",
            " Removing values < 1.0 in frame 17642\n",
            "Frame: 17642 0 17204\n",
            " Removing values < 1.0 in frame 17643\n",
            "Frame: 17643 1 17205\n",
            " Removing values < 1.0 in frame 17644\n",
            "Frame: 17644 1 17206\n",
            " Removing values < 1.0 in frame 17645\n",
            "Frame: 17645 1 17207\n",
            " Removing values < 1.0 in frame 17646\n",
            "Frame: 17646 1 17208\n",
            " Removing values < 1.0 in frame 17647\n",
            "Frame: 17647 1 17209\n",
            " Removing values < 1.0 in frame 17648\n",
            "Frame: 17648 1 17210\n",
            " Removing values < 1.0 in frame 17649\n",
            "Frame: 17649 1 17211\n",
            " Removing values < 1.0 in frame 17650\n",
            "Frame: 17650 1 17212\n",
            " Removing values < 1.0 in frame 17651\n",
            "Frame: 17651 1 17213\n",
            " Removing values < 1.0 in frame 17652\n",
            "Frame: 17652 1 17214\n",
            " Removing values < 1.0 in frame 17653\n",
            "Frame: 17653 1 17215\n",
            " Removing values < 1.0 in frame 17654\n",
            "Frame: 17654 1 17216\n",
            " Removing values < 1.0 in frame 17655\n",
            "Frame: 17655 1 17217\n",
            " Removing values < 1.0 in frame 17656\n",
            "Frame: 17656 0 17217\n",
            " Removing values < 1.0 in frame 17657\n",
            "Frame: 17657 1 17218\n",
            " Removing values < 1.0 in frame 17658\n",
            "Frame: 17658 1 17219\n",
            " Removing values < 1.0 in frame 17659\n",
            "Frame: 17659 1 17220\n",
            " Removing values < 1.0 in frame 17660\n",
            "Frame: 17660 1 17221\n",
            " Removing values < 1.0 in frame 17661\n",
            "Frame: 17661 1 17222\n",
            " Removing values < 1.0 in frame 17662\n",
            "Frame: 17662 1 17223\n",
            " Removing values < 1.0 in frame 17663\n",
            "Frame: 17663 1 17224\n",
            " Removing values < 1.0 in frame 17664\n",
            "Frame: 17664 1 17225\n",
            " Removing values < 1.0 in frame 17665\n",
            "Frame: 17665 1 17226\n",
            " Removing values < 1.0 in frame 17666\n",
            "Frame: 17666 0 17226\n",
            " Removing values < 1.0 in frame 17667\n",
            "Frame: 17667 1 17227\n",
            " Removing values < 1.0 in frame 17668\n",
            "Frame: 17668 1 17228\n",
            " Removing values < 1.0 in frame 17669\n",
            "Frame: 17669 1 17229\n",
            " Removing values < 1.0 in frame 17670\n",
            "Frame: 17670 1 17230\n",
            " Removing values < 1.0 in frame 17671\n",
            "Frame: 17671 1 17231\n",
            " Removing values < 1.0 in frame 17672\n",
            "Frame: 17672 1 17232\n",
            " Removing values < 1.0 in frame 17673\n",
            "Frame: 17673 1 17233\n",
            " Removing values < 1.0 in frame 17674\n",
            "Frame: 17674 1 17234\n",
            " Removing values < 1.0 in frame 17675\n",
            "Frame: 17675 1 17235\n",
            " Removing values < 1.0 in frame 17676\n",
            "Frame: 17676 1 17236\n",
            " Removing values < 1.0 in frame 17677\n",
            "Frame: 17677 1 17237\n",
            " Removing values < 1.0 in frame 17678\n",
            "Frame: 17678 1 17238\n",
            " Removing values < 1.0 in frame 17679\n",
            "Frame: 17679 1 17239\n",
            " Removing values < 1.0 in frame 17680\n",
            "Frame: 17680 0 17239\n",
            " Removing values < 1.0 in frame 17681\n",
            "Frame: 17681 0 17239\n",
            " Removing values < 1.0 in frame 17682\n",
            "Frame: 17682 1 17240\n",
            " Removing values < 1.0 in frame 17683\n",
            "Frame: 17683 1 17241\n",
            " Removing values < 1.0 in frame 17684\n",
            "Frame: 17684 1 17242\n",
            " Removing values < 1.0 in frame 17685\n",
            "Frame: 17685 0 17242\n",
            " Removing values < 1.0 in frame 17686\n",
            "Frame: 17686 1 17243\n",
            " Removing values < 1.0 in frame 17687\n",
            "Frame: 17687 1 17244\n",
            " Removing values < 1.0 in frame 17688\n",
            "Frame: 17688 1 17245\n",
            " Removing values < 1.0 in frame 17689\n",
            "Frame: 17689 0 17245\n",
            " Removing values < 1.0 in frame 17690\n",
            "Frame: 17690 1 17246\n",
            " Removing values < 1.0 in frame 17691\n",
            "Frame: 17691 1 17247\n",
            " Removing values < 1.0 in frame 17692\n",
            "Frame: 17692 1 17248\n",
            " Removing values < 1.0 in frame 17693\n",
            "Frame: 17693 1 17249\n",
            " Removing values < 1.0 in frame 17694\n",
            "Frame: 17694 1 17250\n",
            " Removing values < 1.0 in frame 17695\n",
            "Frame: 17695 1 17251\n",
            " Removing values < 1.0 in frame 17696\n",
            "Frame: 17696 1 17252\n",
            " Removing values < 1.0 in frame 17697\n",
            "Frame: 17697 1 17253\n",
            " Removing values < 1.0 in frame 17698\n",
            "Frame: 17698 1 17254\n",
            " Removing values < 1.0 in frame 17699\n",
            "Frame: 17699 0 17254\n",
            " Removing values < 1.0 in frame 17700\n",
            "Frame: 17700 1 17255\n",
            " Removing values < 1.0 in frame 17701\n",
            "Frame: 17701 1 17256\n",
            " Removing values < 1.0 in frame 17702\n",
            "Frame: 17702 1 17257\n",
            " Removing values < 1.0 in frame 17703\n",
            "Frame: 17703 1 17258\n",
            " Removing values < 1.0 in frame 17704\n",
            "Frame: 17704 1 17259\n",
            " Removing values < 1.0 in frame 17705\n",
            "Frame: 17705 1 17260\n",
            " Removing values < 1.0 in frame 17706\n",
            "Frame: 17706 1 17261\n",
            " Removing values < 1.0 in frame 17707\n",
            "Frame: 17707 1 17262\n",
            " Removing values < 1.0 in frame 17708\n",
            "Frame: 17708 1 17263\n",
            " Removing values < 1.0 in frame 17709\n",
            "Frame: 17709 1 17264\n",
            " Removing values < 1.0 in frame 17710\n",
            "Frame: 17710 1 17265\n",
            " Removing values < 1.0 in frame 17711\n",
            "Frame: 17711 1 17266\n",
            " Removing values < 1.0 in frame 17712\n",
            "Frame: 17712 0 17266\n",
            " Removing values < 1.0 in frame 17713\n",
            "Frame: 17713 1 17267\n",
            " Removing values < 1.0 in frame 17714\n",
            "Frame: 17714 1 17268\n",
            " Removing values < 1.0 in frame 17715\n",
            "Frame: 17715 1 17269\n",
            " Removing values < 1.0 in frame 17716\n",
            "Frame: 17716 1 17270\n",
            " Removing values < 1.0 in frame 17717\n",
            "Frame: 17717 1 17271\n",
            " Removing values < 1.0 in frame 17718\n",
            "Frame: 17718 1 17272\n",
            " Removing values < 1.0 in frame 17719\n",
            "Frame: 17719 1 17273\n",
            " Removing values < 1.0 in frame 17720\n",
            "Frame: 17720 1 17274\n",
            " Removing values < 1.0 in frame 17721\n",
            "Frame: 17721 0 17274\n",
            " Removing values < 1.0 in frame 17722\n",
            "Frame: 17722 0 17274\n",
            " Removing values < 1.0 in frame 17723\n",
            "Frame: 17723 1 17275\n",
            " Removing values < 1.0 in frame 17724\n",
            "Frame: 17724 1 17276\n",
            " Removing values < 1.0 in frame 17725\n",
            "Frame: 17725 0 17276\n",
            " Removing values < 1.0 in frame 17726\n",
            "Frame: 17726 1 17277\n",
            " Removing values < 1.0 in frame 17727\n",
            "Frame: 17727 1 17278\n",
            " Removing values < 1.0 in frame 17728\n",
            "Frame: 17728 1 17279\n",
            " Removing values < 1.0 in frame 17729\n",
            "Frame: 17729 1 17280\n",
            " Removing values < 1.0 in frame 17730\n",
            "Frame: 17730 1 17281\n",
            " Removing values < 1.0 in frame 17731\n",
            "Frame: 17731 1 17282\n",
            " Removing values < 1.0 in frame 17732\n",
            "Frame: 17732 1 17283\n",
            " Removing values < 1.0 in frame 17733\n",
            "Frame: 17733 1 17284\n",
            " Removing values < 1.0 in frame 17734\n",
            "Frame: 17734 0 17284\n",
            " Removing values < 1.0 in frame 17735\n",
            "Frame: 17735 1 17285\n",
            " Removing values < 1.0 in frame 17736\n",
            "Frame: 17736 0 17285\n",
            " Removing values < 1.0 in frame 17737\n",
            "Frame: 17737 1 17286\n",
            " Removing values < 1.0 in frame 17738\n",
            "Frame: 17738 1 17287\n",
            " Removing values < 1.0 in frame 17739\n",
            "Frame: 17739 1 17288\n",
            " Removing values < 1.0 in frame 17740\n",
            "Frame: 17740 0 17288\n",
            " Removing values < 1.0 in frame 17741\n",
            "Frame: 17741 1 17289\n",
            " Removing values < 1.0 in frame 17742\n",
            "Frame: 17742 1 17290\n",
            " Removing values < 1.0 in frame 17743\n",
            "Frame: 17743 1 17291\n",
            " Removing values < 1.0 in frame 17744\n",
            "Frame: 17744 1 17292\n",
            " Removing values < 1.0 in frame 17745\n",
            "Frame: 17745 1 17293\n",
            " Removing values < 1.0 in frame 17746\n",
            "Frame: 17746 1 17294\n",
            " Removing values < 1.0 in frame 17747\n",
            "Frame: 17747 0 17294\n",
            " Removing values < 1.0 in frame 17748\n",
            "Frame: 17748 1 17295\n",
            " Removing values < 1.0 in frame 17749\n",
            "Frame: 17749 0 17295\n",
            " Removing values < 1.0 in frame 17750\n",
            "Frame: 17750 1 17296\n",
            " Removing values < 1.0 in frame 17751\n",
            "Frame: 17751 1 17297\n",
            " Removing values < 1.0 in frame 17752\n",
            "Frame: 17752 1 17298\n",
            " Removing values < 1.0 in frame 17753\n",
            "Frame: 17753 1 17299\n",
            " Removing values < 1.0 in frame 17754\n",
            "Frame: 17754 1 17300\n",
            " Removing values < 1.0 in frame 17755\n",
            "Frame: 17755 1 17301\n",
            " Removing values < 1.0 in frame 17756\n",
            "Frame: 17756 1 17302\n",
            " Removing values < 1.0 in frame 17757\n",
            "Frame: 17757 1 17303\n",
            " Removing values < 1.0 in frame 17758\n",
            "Frame: 17758 1 17304\n",
            " Removing values < 1.0 in frame 17759\n",
            "Frame: 17759 1 17305\n",
            " Removing values < 1.0 in frame 17760\n",
            "Frame: 17760 0 17305\n",
            " Removing values < 1.0 in frame 17761\n",
            "Frame: 17761 1 17306\n",
            " Removing values < 1.0 in frame 17762\n",
            "Frame: 17762 1 17307\n",
            " Removing values < 1.0 in frame 17763\n",
            "Frame: 17763 1 17308\n",
            " Removing values < 1.0 in frame 17764\n",
            "Frame: 17764 0 17308\n",
            " Removing values < 1.0 in frame 17765\n",
            "Frame: 17765 0 17308\n",
            " Removing values < 1.0 in frame 17766\n",
            "Frame: 17766 1 17309\n",
            " Removing values < 1.0 in frame 17767\n",
            "Frame: 17767 0 17309\n",
            " Removing values < 1.0 in frame 17768\n",
            "Frame: 17768 0 17309\n",
            " Removing values < 1.0 in frame 17769\n",
            "Frame: 17769 1 17310\n",
            " Removing values < 1.0 in frame 17770\n",
            "Frame: 17770 0 17310\n",
            " Removing values < 1.0 in frame 17771\n",
            "Frame: 17771 1 17311\n",
            " Removing values < 1.0 in frame 17772\n",
            "Frame: 17772 1 17312\n",
            " Removing values < 1.0 in frame 17773\n",
            "Frame: 17773 0 17312\n",
            " Removing values < 1.0 in frame 17774\n",
            "Frame: 17774 0 17312\n",
            " Removing values < 1.0 in frame 17775\n",
            "Frame: 17775 1 17313\n",
            " Removing values < 1.0 in frame 17776\n",
            "Frame: 17776 0 17313\n",
            " Removing values < 1.0 in frame 17777\n",
            "Frame: 17777 1 17314\n",
            " Removing values < 1.0 in frame 17778\n",
            "Frame: 17778 1 17315\n",
            " Removing values < 1.0 in frame 17779\n",
            "Frame: 17779 0 17315\n",
            " Removing values < 1.0 in frame 17780\n",
            "Frame: 17780 1 17316\n",
            " Removing values < 1.0 in frame 17781\n",
            "Frame: 17781 0 17316\n",
            " Removing values < 1.0 in frame 17782\n",
            "Frame: 17782 1 17317\n",
            " Removing values < 1.0 in frame 17783\n",
            "Frame: 17783 0 17317\n",
            " Removing values < 1.0 in frame 17784\n",
            "Frame: 17784 0 17317\n",
            " Removing values < 1.0 in frame 17785\n",
            "Frame: 17785 0 17317\n",
            " Removing values < 1.0 in frame 17786\n",
            "Frame: 17786 1 17318\n",
            " Removing values < 1.0 in frame 17787\n",
            "Frame: 17787 0 17318\n",
            " Removing values < 1.0 in frame 17788\n",
            "Frame: 17788 1 17319\n",
            " Removing values < 1.0 in frame 17789\n",
            "Frame: 17789 0 17319\n",
            " Removing values < 1.0 in frame 17790\n",
            "Frame: 17790 0 17319\n",
            " Removing values < 1.0 in frame 17791\n",
            "Frame: 17791 1 17320\n",
            " Removing values < 1.0 in frame 17792\n",
            "Frame: 17792 0 17320\n",
            " Removing values < 1.0 in frame 17793\n",
            "Frame: 17793 0 17320\n",
            " Removing values < 1.0 in frame 17794\n",
            "Frame: 17794 1 17321\n",
            " Removing values < 1.0 in frame 17795\n",
            "Frame: 17795 0 17321\n",
            " Removing values < 1.0 in frame 17796\n",
            "Frame: 17796 0 17321\n",
            " Removing values < 1.0 in frame 17797\n",
            "Frame: 17797 1 17322\n",
            " Removing values < 1.0 in frame 17798\n",
            "Frame: 17798 1 17323\n",
            " Removing values < 1.0 in frame 17799\n",
            "Frame: 17799 1 17324\n",
            " Removing values < 1.0 in frame 17800\n",
            "Frame: 17800 0 17324\n",
            " Removing values < 1.0 in frame 17801\n",
            "Frame: 17801 0 17324\n",
            " Removing values < 1.0 in frame 17802\n",
            "Frame: 17802 1 17325\n",
            " Removing values < 1.0 in frame 17803\n",
            "Frame: 17803 1 17326\n",
            " Removing values < 1.0 in frame 17804\n",
            "Frame: 17804 1 17327\n",
            " Removing values < 1.0 in frame 17805\n",
            "Frame: 17805 1 17328\n",
            " Removing values < 1.0 in frame 17806\n",
            "Frame: 17806 1 17329\n",
            " Removing values < 1.0 in frame 17807\n",
            "Frame: 17807 0 17329\n",
            " Removing values < 1.0 in frame 17808\n",
            "Frame: 17808 0 17329\n",
            " Removing values < 1.0 in frame 17809\n",
            "Frame: 17809 0 17329\n",
            " Removing values < 1.0 in frame 17810\n",
            "Frame: 17810 1 17330\n",
            " Removing values < 1.0 in frame 17811\n",
            "Frame: 17811 0 17330\n",
            " Removing values < 1.0 in frame 17812\n",
            "Frame: 17812 0 17330\n",
            " Removing values < 1.0 in frame 17813\n",
            "Frame: 17813 0 17330\n",
            " Removing values < 1.0 in frame 17814\n",
            "Frame: 17814 1 17331\n",
            " Removing values < 1.0 in frame 17815\n",
            "Frame: 17815 0 17331\n",
            " Removing values < 1.0 in frame 17816\n",
            "Frame: 17816 1 17332\n",
            " Removing values < 1.0 in frame 17817\n",
            "Frame: 17817 1 17333\n",
            " Removing values < 1.0 in frame 17818\n",
            "Frame: 17818 1 17334\n",
            " Removing values < 1.0 in frame 17819\n",
            "Frame: 17819 0 17334\n",
            " Removing values < 1.0 in frame 17820\n",
            "Frame: 17820 0 17334\n",
            " Removing values < 1.0 in frame 17821\n",
            "Frame: 17821 0 17334\n",
            " Removing values < 1.0 in frame 17822\n",
            "Frame: 17822 1 17335\n",
            " Removing values < 1.0 in frame 17823\n",
            "Frame: 17823 1 17336\n",
            " Removing values < 1.0 in frame 17824\n",
            "Frame: 17824 1 17337\n",
            " Removing values < 1.0 in frame 17825\n",
            "Frame: 17825 1 17338\n",
            " Removing values < 1.0 in frame 17826\n",
            "Frame: 17826 0 17338\n",
            " Removing values < 1.0 in frame 17827\n",
            "Frame: 17827 0 17338\n",
            " Removing values < 1.0 in frame 17828\n",
            "Frame: 17828 0 17338\n",
            " Removing values < 1.0 in frame 17829\n",
            "Frame: 17829 0 17338\n",
            " Removing values < 1.0 in frame 17830\n",
            "Frame: 17830 0 17338\n",
            " Removing values < 1.0 in frame 17831\n",
            "Frame: 17831 0 17338\n",
            " Removing values < 1.0 in frame 17832\n",
            "Frame: 17832 0 17338\n",
            " Removing values < 1.0 in frame 17833\n",
            "Frame: 17833 1 17339\n",
            " Removing values < 1.0 in frame 17834\n",
            "Frame: 17834 0 17339\n",
            " Removing values < 1.0 in frame 17835\n",
            "Frame: 17835 1 17340\n",
            " Removing values < 1.0 in frame 17836\n",
            "Frame: 17836 0 17340\n",
            " Removing values < 1.0 in frame 17837\n",
            "Frame: 17837 1 17341\n",
            " Removing values < 1.0 in frame 17838\n",
            "Frame: 17838 1 17342\n",
            " Removing values < 1.0 in frame 17839\n",
            "Frame: 17839 1 17343\n",
            " Removing values < 1.0 in frame 17840\n",
            "Frame: 17840 0 17343\n",
            " Removing values < 1.0 in frame 17841\n",
            "Frame: 17841 1 17344\n",
            " Removing values < 1.0 in frame 17842\n",
            "Frame: 17842 1 17345\n",
            " Removing values < 1.0 in frame 17843\n",
            "Frame: 17843 1 17346\n",
            " Removing values < 1.0 in frame 17844\n",
            "Frame: 17844 0 17346\n",
            " Removing values < 1.0 in frame 17845\n",
            "Frame: 17845 1 17347\n",
            " Removing values < 1.0 in frame 17846\n",
            "Frame: 17846 1 17348\n",
            " Removing values < 1.0 in frame 17847\n",
            "Frame: 17847 1 17349\n",
            " Removing values < 1.0 in frame 17848\n",
            "Frame: 17848 1 17350\n",
            " Removing values < 1.0 in frame 17849\n",
            "Frame: 17849 0 17350\n",
            " Removing values < 1.0 in frame 17850\n",
            "Frame: 17850 1 17351\n",
            " Removing values < 1.0 in frame 17851\n",
            "Frame: 17851 1 17352\n",
            " Removing values < 1.0 in frame 17852\n",
            "Frame: 17852 1 17353\n",
            " Removing values < 1.0 in frame 17853\n",
            "Frame: 17853 0 17353\n",
            " Removing values < 1.0 in frame 17854\n",
            "Frame: 17854 1 17354\n",
            " Removing values < 1.0 in frame 17855\n",
            "Frame: 17855 0 17354\n",
            " Removing values < 1.0 in frame 17856\n",
            "Frame: 17856 0 17354\n",
            " Removing values < 1.0 in frame 17857\n",
            "Frame: 17857 1 17355\n",
            " Removing values < 1.0 in frame 17858\n",
            "Frame: 17858 0 17355\n",
            " Removing values < 1.0 in frame 17859\n",
            "Frame: 17859 0 17355\n",
            " Removing values < 1.0 in frame 17860\n",
            "Frame: 17860 1 17356\n",
            " Removing values < 1.0 in frame 17861\n",
            "Frame: 17861 0 17356\n",
            " Removing values < 1.0 in frame 17862\n",
            "Frame: 17862 0 17356\n",
            " Removing values < 1.0 in frame 17863\n",
            "Frame: 17863 0 17356\n",
            " Removing values < 1.0 in frame 17864\n",
            "Frame: 17864 0 17356\n",
            " Removing values < 1.0 in frame 17865\n",
            "Frame: 17865 1 17357\n",
            " Removing values < 1.0 in frame 17866\n",
            "Frame: 17866 1 17358\n",
            " Removing values < 1.0 in frame 17867\n",
            "Frame: 17867 1 17359\n",
            " Removing values < 1.0 in frame 17868\n",
            "Frame: 17868 0 17359\n",
            " Removing values < 1.0 in frame 17869\n",
            "Frame: 17869 0 17359\n",
            " Removing values < 1.0 in frame 17870\n",
            "Frame: 17870 0 17359\n",
            " Removing values < 1.0 in frame 17871\n",
            "Frame: 17871 1 17360\n",
            " Removing values < 1.0 in frame 17872\n",
            "Frame: 17872 0 17360\n",
            " Removing values < 1.0 in frame 17873\n",
            "Frame: 17873 0 17360\n",
            " Removing values < 1.0 in frame 17874\n",
            "Frame: 17874 0 17360\n",
            " Removing values < 1.0 in frame 17875\n",
            "Frame: 17875 1 17361\n",
            " Removing values < 1.0 in frame 17876\n",
            "Frame: 17876 1 17362\n",
            " Removing values < 1.0 in frame 17877\n",
            "Frame: 17877 0 17362\n",
            " Removing values < 1.0 in frame 17878\n",
            "Frame: 17878 0 17362\n",
            " Removing values < 1.0 in frame 17879\n",
            "Frame: 17879 0 17362\n",
            " Removing values < 1.0 in frame 17880\n",
            "Frame: 17880 1 17363\n",
            " Removing values < 1.0 in frame 17881\n",
            "Frame: 17881 0 17363\n",
            " Removing values < 1.0 in frame 17882\n",
            "Frame: 17882 1 17364\n",
            " Removing values < 1.0 in frame 17883\n",
            "Frame: 17883 1 17365\n",
            " Removing values < 1.0 in frame 17884\n",
            "Frame: 17884 1 17366\n",
            " Removing values < 1.0 in frame 17885\n",
            "Frame: 17885 0 17366\n",
            " Removing values < 1.0 in frame 17886\n",
            "Frame: 17886 1 17367\n",
            " Removing values < 1.0 in frame 17887\n",
            "Frame: 17887 0 17367\n",
            " Removing values < 1.0 in frame 17888\n",
            "Frame: 17888 1 17368\n",
            " Removing values < 1.0 in frame 17889\n",
            "Frame: 17889 1 17369\n",
            " Removing values < 1.0 in frame 17890\n",
            "Frame: 17890 1 17370\n",
            " Removing values < 1.0 in frame 17891\n",
            "Frame: 17891 1 17371\n",
            " Removing values < 1.0 in frame 17892\n",
            "Frame: 17892 1 17372\n",
            " Removing values < 1.0 in frame 17893\n",
            "Frame: 17893 1 17373\n",
            " Removing values < 1.0 in frame 17894\n",
            "Frame: 17894 1 17374\n",
            " Removing values < 1.0 in frame 17895\n",
            "Frame: 17895 0 17374\n",
            " Removing values < 1.0 in frame 17896\n",
            "Frame: 17896 1 17375\n",
            " Removing values < 1.0 in frame 17897\n",
            "Frame: 17897 1 17376\n",
            " Removing values < 1.0 in frame 17898\n",
            "Frame: 17898 0 17376\n",
            " Removing values < 1.0 in frame 17899\n",
            "Frame: 17899 1 17377\n",
            " Removing values < 1.0 in frame 17900\n",
            "Frame: 17900 1 17378\n",
            " Removing values < 1.0 in frame 17901\n",
            "Frame: 17901 1 17379\n",
            " Removing values < 1.0 in frame 17902\n",
            "Frame: 17902 1 17380\n",
            " Removing values < 1.0 in frame 17903\n",
            "Frame: 17903 0 17380\n",
            " Removing values < 1.0 in frame 17904\n",
            "Frame: 17904 0 17380\n",
            " Removing values < 1.0 in frame 17905\n",
            "Frame: 17905 0 17380\n",
            " Removing values < 1.0 in frame 17906\n",
            "Frame: 17906 1 17381\n",
            " Removing values < 1.0 in frame 17907\n",
            "Frame: 17907 1 17382\n",
            " Removing values < 1.0 in frame 17908\n",
            "Frame: 17908 1 17383\n",
            " Removing values < 1.0 in frame 17909\n",
            "Frame: 17909 0 17383\n",
            " Removing values < 1.0 in frame 17910\n",
            "Frame: 17910 1 17384\n",
            " Removing values < 1.0 in frame 17911\n",
            "Frame: 17911 0 17384\n",
            " Removing values < 1.0 in frame 17912\n",
            "Frame: 17912 0 17384\n",
            " Removing values < 1.0 in frame 17913\n",
            "Frame: 17913 1 17385\n",
            " Removing values < 1.0 in frame 17914\n",
            "Frame: 17914 1 17386\n",
            " Removing values < 1.0 in frame 17915\n",
            "Frame: 17915 0 17386\n",
            " Removing values < 1.0 in frame 17916\n",
            "Frame: 17916 1 17387\n",
            " Removing values < 1.0 in frame 17917\n",
            "Frame: 17917 0 17387\n",
            " Removing values < 1.0 in frame 17918\n",
            "Frame: 17918 1 17388\n",
            " Removing values < 1.0 in frame 17919\n",
            "Frame: 17919 1 17389\n",
            " Removing values < 1.0 in frame 17920\n",
            "Frame: 17920 0 17389\n",
            " Removing values < 1.0 in frame 17921\n",
            "Frame: 17921 1 17390\n",
            " Removing values < 1.0 in frame 17922\n",
            "Frame: 17922 0 17390\n",
            " Removing values < 1.0 in frame 17923\n",
            "Frame: 17923 1 17391\n",
            " Removing values < 1.0 in frame 17924\n",
            "Frame: 17924 1 17392\n",
            " Removing values < 1.0 in frame 17925\n",
            "Frame: 17925 0 17392\n",
            " Removing values < 1.0 in frame 17926\n",
            "Frame: 17926 0 17392\n",
            " Removing values < 1.0 in frame 17927\n",
            "Frame: 17927 0 17392\n",
            " Removing values < 1.0 in frame 17928\n",
            "Frame: 17928 1 17393\n",
            " Removing values < 1.0 in frame 17929\n",
            "Frame: 17929 1 17394\n",
            " Removing values < 1.0 in frame 17930\n",
            "Frame: 17930 0 17394\n",
            " Removing values < 1.0 in frame 17931\n",
            "Frame: 17931 1 17395\n",
            " Removing values < 1.0 in frame 17932\n",
            "Frame: 17932 1 17396\n",
            " Removing values < 1.0 in frame 17933\n",
            "Frame: 17933 1 17397\n",
            " Removing values < 1.0 in frame 17934\n",
            "Frame: 17934 0 17397\n",
            " Removing values < 1.0 in frame 17935\n",
            "Frame: 17935 1 17398\n",
            " Removing values < 1.0 in frame 17936\n",
            "Frame: 17936 1 17399\n",
            " Removing values < 1.0 in frame 17937\n",
            "Frame: 17937 1 17400\n",
            " Removing values < 1.0 in frame 17938\n",
            "Frame: 17938 1 17401\n",
            " Removing values < 1.0 in frame 17939\n",
            "Frame: 17939 1 17402\n",
            " Removing values < 1.0 in frame 17940\n",
            "Frame: 17940 1 17403\n",
            " Removing values < 1.0 in frame 17941\n",
            "Frame: 17941 0 17403\n",
            " Removing values < 1.0 in frame 17942\n",
            "Frame: 17942 1 17404\n",
            " Removing values < 1.0 in frame 17943\n",
            "Frame: 17943 1 17405\n",
            " Removing values < 1.0 in frame 17944\n",
            "Frame: 17944 0 17405\n",
            " Removing values < 1.0 in frame 17945\n",
            "Frame: 17945 1 17406\n",
            " Removing values < 1.0 in frame 17946\n",
            "Frame: 17946 0 17406\n",
            " Removing values < 1.0 in frame 17947\n",
            "Frame: 17947 1 17407\n",
            " Removing values < 1.0 in frame 17948\n",
            "Frame: 17948 0 17407\n",
            " Removing values < 1.0 in frame 17949\n",
            "Frame: 17949 1 17408\n",
            " Removing values < 1.0 in frame 17950\n",
            "Frame: 17950 1 17409\n",
            " Removing values < 1.0 in frame 17951\n",
            "Frame: 17951 0 17409\n",
            " Removing values < 1.0 in frame 17952\n",
            "Frame: 17952 0 17409\n",
            " Removing values < 1.0 in frame 17953\n",
            "Frame: 17953 0 17409\n",
            " Removing values < 1.0 in frame 17954\n",
            "Frame: 17954 0 17409\n",
            " Removing values < 1.0 in frame 17955\n",
            "Frame: 17955 0 17409\n",
            " Removing values < 1.0 in frame 17956\n",
            "Frame: 17956 0 17409\n",
            " Removing values < 1.0 in frame 17957\n",
            "Frame: 17957 0 17409\n",
            " Removing values < 1.0 in frame 17958\n",
            "Frame: 17958 1 17410\n",
            " Removing values < 1.0 in frame 17959\n",
            "Frame: 17959 0 17410\n",
            " Removing values < 1.0 in frame 17960\n",
            "Frame: 17960 1 17411\n",
            " Removing values < 1.0 in frame 17961\n",
            "Frame: 17961 0 17411\n",
            " Removing values < 1.0 in frame 17962\n",
            "Frame: 17962 0 17411\n",
            " Removing values < 1.0 in frame 17963\n",
            "Frame: 17963 1 17412\n",
            " Removing values < 1.0 in frame 17964\n",
            "Frame: 17964 1 17413\n",
            " Removing values < 1.0 in frame 17965\n",
            "Frame: 17965 1 17414\n",
            " Removing values < 1.0 in frame 17966\n",
            "Frame: 17966 0 17414\n",
            " Removing values < 1.0 in frame 17967\n",
            "Frame: 17967 1 17415\n",
            " Removing values < 1.0 in frame 17968\n",
            "Frame: 17968 1 17416\n",
            " Removing values < 1.0 in frame 17969\n",
            "Frame: 17969 0 17416\n",
            " Removing values < 1.0 in frame 17970\n",
            "Frame: 17970 0 17416\n",
            " Removing values < 1.0 in frame 17971\n",
            "Frame: 17971 0 17416\n",
            " Removing values < 1.0 in frame 17972\n",
            "Frame: 17972 0 17416\n",
            " Removing values < 1.0 in frame 17973\n",
            "Frame: 17973 0 17416\n",
            " Removing values < 1.0 in frame 17974\n",
            "Frame: 17974 1 17417\n",
            " Removing values < 1.0 in frame 17975\n",
            "Frame: 17975 1 17418\n",
            " Removing values < 1.0 in frame 17976\n",
            "Frame: 17976 0 17418\n",
            " Removing values < 1.0 in frame 17977\n",
            "Frame: 17977 1 17419\n",
            " Removing values < 1.0 in frame 17978\n",
            "Frame: 17978 0 17419\n",
            " Removing values < 1.0 in frame 17979\n",
            "Frame: 17979 0 17419\n",
            " Removing values < 1.0 in frame 17980\n",
            "Frame: 17980 1 17420\n",
            " Removing values < 1.0 in frame 17981\n",
            "Frame: 17981 1 17421\n",
            " Removing values < 1.0 in frame 17982\n",
            "Frame: 17982 0 17421\n",
            " Removing values < 1.0 in frame 17983\n",
            "Frame: 17983 1 17422\n",
            " Removing values < 1.0 in frame 17984\n",
            "Frame: 17984 0 17422\n",
            " Removing values < 1.0 in frame 17985\n",
            "Frame: 17985 1 17423\n",
            " Removing values < 1.0 in frame 17986\n",
            "Frame: 17986 0 17423\n",
            " Removing values < 1.0 in frame 17987\n",
            "Frame: 17987 1 17424\n",
            " Removing values < 1.0 in frame 17988\n",
            "Frame: 17988 1 17425\n",
            " Removing values < 1.0 in frame 17989\n",
            "Frame: 17989 0 17425\n",
            " Removing values < 1.0 in frame 17990\n",
            "Frame: 17990 1 17426\n",
            " Removing values < 1.0 in frame 17991\n",
            "Frame: 17991 1 17427\n",
            " Removing values < 1.0 in frame 17992\n",
            "Frame: 17992 0 17427\n",
            " Removing values < 1.0 in frame 17993\n",
            "Frame: 17993 1 17428\n",
            " Removing values < 1.0 in frame 17994\n",
            "Frame: 17994 1 17429\n",
            " Removing values < 1.0 in frame 17995\n",
            "Frame: 17995 0 17429\n",
            " Removing values < 1.0 in frame 17996\n",
            "Frame: 17996 1 17430\n",
            " Removing values < 1.0 in frame 17997\n",
            "Frame: 17997 0 17430\n",
            " Removing values < 1.0 in frame 17998\n",
            "Frame: 17998 1 17431\n",
            " Removing values < 1.0 in frame 17999\n",
            "Frame: 17999 1 17432\n",
            "\n",
            "Added 17432\n",
            "   18000 peak finding iterations.\n",
            "\n",
            "   0 fits reset due to Cholesky failure.\n",
            "   0 fits reset due to image margin.\n",
            "   0 fits reset due to negative value in fit function.\n",
            "   0 fits reset due to negative height.\n",
            "   46 fits reset due to non-decreasing error (LM).\n",
            "   0 fits did not converge.\n",
            "   0 fits were lost.\n",
            "   0 peaks lost to proximity filter.\n",
            "   408 peaks lost to low significance.\n",
            "   186138 fitting iterations.\n",
            "\n",
            "'3d' localization z fitting.\n",
            "zfit pixel_size :  144.5\n",
            "   Processing frame 0\n",
            "   Processing frame 5000\n",
            "   Processing frame 10000\n",
            "   Processing frame 15000\n",
            "\n",
            "Tracking.\n",
            "\n",
            "'3d' tracks z fitting.\n",
            "\n",
            "Checking z values.\n",
            " frame 0\n",
            " frame 2000\n",
            " frame 4000\n",
            " frame 6000\n",
            " frame 8000\n",
            " frame 10000\n",
            " frame 12000\n",
            " frame 14000\n",
            " frame 16000\n",
            "\n",
            "File format conversions.\n",
            " Converting to text.\n",
            "Converting localizations.\n",
            "\n",
            "Analysis complete\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WkgzdQk-lPTn"
      },
      "source": [
        "### ② Plotting the test result"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7DIHhXWOdxg3"
      },
      "source": [
        "Plot Wx / Wy versus Z curves for data from the test movie.\n",
        "\n",
        "Above Calibration curves (Black Line in calibration plotting) was used to calculate Wx / Wy versus Z values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sgtZpBabdxg4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "outputId": "d19ace9c-24c4-4028-9c87-c2210cf1d38c"
      },
      "source": [
        "[wx, wy, z, pixel_size] = z_cal.loadWxWyZData(\"measure.hdf5\", address_z_offsets)\n",
        "\n",
        "p1 = pyplot.scatter(z, wx, color = 'r', label = 'Wx', s=1) # Curves1 (z vs wx)\n",
        "p2 = pyplot.scatter(z, wy, color = 'b', label = 'Wy', s=1) # Curves2 (z vs wy)\n",
        "legend = pyplot.legend(handles = [p1, p2], loc=1)\n",
        "legend.get_frame().set_linewidth(2)\n",
        "legend.get_frame().set_edgecolor('black')\n",
        "pyplot.xlabel(\"microns\")\n",
        "pyplot.ylabel(\"pixels\")\n",
        "pyplot.title(\"Test Result : Wx & Wy versus Z curves\")\n",
        "pyplot.show()"
      ],
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EdYrtlj_lZwB"
      },
      "source": [
        "## **4) Validation**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZQIdabqgl-hr"
      },
      "source": [
        "### ① Validation Method 1 :"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yIMVp_ecdxg4"
      },
      "source": [
        "Plot Wx versus Wy with the z calibration curve overlaid.\n",
        "\n",
        "This can be useful for checking that your calibration curve matches your data."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T8ECTqbTdxg4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "74356e9d-c9cb-42ef-bbdc-f9e0aa5d5f7e"
      },
      "source": [
        "import storm_analysis.sa_library.sa_h5py as saH5Py\n",
        "import numpy\n",
        "\n",
        "locs = saH5Py.loadLocalizations(\"measure.hdf5\")\n",
        "# print('category : ', locs[\"category\"])\n",
        "# print('total # of category : ', len(locs['category']))\n",
        "\n",
        "mask = (locs[\"category\"] != 9) # Mark out of z range localizations and tracks as category 9.\n",
        "wx_good = 2.0*locs[\"xsigma\"][mask]\n",
        "wy_good = 2.0*locs[\"ysigma\"][mask]\n",
        "\n",
        "mask = (locs[\"category\"] == 9) # Mark out of z range localizations and tracks as category 9.\n",
        "wx_bad = 2.0*locs[\"xsigma\"][mask]\n",
        "wy_bad = 2.0*locs[\"ysigma\"][mask]\n",
        "\n",
        "print(\"Total Localization : \", len(locs[\"z\"]))\n",
        "print(\"Total length wx_good : \", len(wx_good))\n",
        "print(\"Total length wy_good : \", len(wy_good))\n",
        "\n",
        "# print(\"Good fraction : {0:.3f}\".format(wx_good.size/mask.size))\n",
        "\n",
        "# Load Z calibration parameters.\n",
        "m_params = params.ParametersDAO().initFromFile(\"measure.xml\")\n",
        "\n",
        "[wx_params, wy_params] = m_params.getWidthParams()\n",
        "[min_z, max_z] = m_params.getZRange()\n",
        "\n",
        "# Z range is in microns, want nanometers.\n",
        "min_z = min_z * 1.0e+3\n",
        "max_z = max_z * 1.0e+3\n",
        "\n",
        "# Calculate fit z curve at high resolution\n",
        "\n",
        "fz_wx_1 = z_cal.zcalib4(wx_params, numpy.arange(min_z, max_z + 1, 10))/pixel_size\n",
        "fz_wy_1 = z_cal.zcalib4(wy_params, numpy.arange(min_z, max_z + 1, 10))/pixel_size\n",
        "\n",
        "# Calculate fit z curve at 100nm resolution.\n",
        "\n",
        "fz_wx_2 = z_cal.zcalib4(wx_params, numpy.arange(min_z, max_z + 1, 100))/pixel_size\n",
        "fz_wy_2 = z_cal.zcalib4(wy_params, numpy.arange(min_z, max_z + 1, 100))/pixel_size\n",
        "\n",
        "# Make figure.\n",
        "fig = pyplot.figure(figsize = (8,8))\n",
        "pyplot.scatter(wx_good, wy_good, marker = \".\")\n",
        "pyplot.scatter(fz_wx_2, fz_wy_2, marker = \"o\", s = 120, edgecolor = \"black\", facecolor = 'none', linewidths = 2)\n",
        "pyplot.plot(fz_wx_1, fz_wy_1, color = \"black\", linewidth = 2)\n",
        "pyplot.xlim(2,10)\n",
        "pyplot.ylim(2,10)\n",
        "pyplot.xlabel(\"Wx (pixels)\")\n",
        "pyplot.ylabel(\"Wy (pixels)\")\n",
        "pyplot.title(\"Validation Result including category = 9\".format(wx_good.size/mask.size))\n",
        "pyplot.show()\n",
        "\n",
        "# classified by categories ( Blue -> category != 9, Red -> category = 9)\n",
        "pyplot.figure(figsize = (8,8))\n",
        "pyplot.scatter(wx_good, wy_good, s = 1, color = \"blue\")\n",
        "pyplot.scatter(wx_bad, wy_bad, s = 1, color = \"red\")\n",
        "pyplot.scatter(fz_wx_2, fz_wy_2, marker = \"o\", s = 120, edgecolor = \"black\", facecolor = 'none', linewidths = 2)\n",
        "pyplot.plot(fz_wx_1, fz_wy_1, color = \"black\", linewidth = 2)\n",
        "pyplot.xlim(2,10)\n",
        "pyplot.ylim(2,10)\n",
        "pyplot.title(\"Good fraction : {0:.3f}\".format(wx_good.size/mask.size))\n",
        "pyplot.xlabel(\"Wx (pixels)\")\n",
        "pyplot.ylabel(\"Wy (pixels)\")\n",
        "pyplot.show()"
      ],
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total Localization :  17432\n",
            "Total length wx_good :  691\n",
            "Total length wy_good :  691\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pdQDbeJORESr",
        "outputId": "7bc650dd-60f2-4d40-fa3d-c8b21a1b0efe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 558
        }
      },
      "source": [
        "# classified by categories ( Blue -> category != 9, Red -> category = 9)\n",
        "pyplot.figure(figsize = (8,8))\n",
        "pyplot.scatter(wx_good, wy_good, s = 1, color = \"blue\")\n",
        "pyplot.scatter(wx_bad, wy_bad, s = 1, color = \"red\")\n",
        "pyplot.scatter(fz_wx_2, fz_wy_2, marker = \"o\", s = 120, edgecolor = \"black\", facecolor = 'none', linewidths = 2)\n",
        "pyplot.plot(fz_wx_1, fz_wy_1, color = \"black\", linewidth = 2)\n",
        "#pyplot.xlim(2,10)\n",
        "#pyplot.ylim(2,10)\n",
        "pyplot.title(\"Good fraction : {0:.3f}\".format(wx_good.size/mask.size))\n",
        "pyplot.xlabel(\"Wx (pixels)\")\n",
        "pyplot.ylabel(\"Wy (pixels)\")\n",
        "pyplot.show()"
      ],
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BbbBepXtmB40"
      },
      "source": [
        "### ② Validation Method 2 :"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EiVxExLxdxg4"
      },
      "source": [
        "Check how well we did at fitting Z."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h6WnIkB2dxg4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "24aa5c62-fb9d-4e2b-8718-344d29e4ed3c"
      },
      "source": [
        "# Create numpy arrays with the real and the measured z values.\n",
        "measured_z = numpy.array([])\n",
        "real_z = numpy.array([])\n",
        "fnum_cnt = 30\n",
        "\n",
        "print(\"##################################################\")\n",
        "print(\"######## Let's Checking how well we did! #########\")\n",
        "print(\"##################################################\\n\")\n",
        "print(\"At every {} frames, we will see the value of measured_z & real_z\\n\".format(fnum_cnt))\n",
        "\n",
        "with saH5Py.SAH5Reader(\"measure.hdf5\") as h5:\n",
        "    for fnum, locs in h5.localizationsIterator(fields = [\"category\", \"z\"]):\n",
        "        #print(\"fnum : \", fnum)\n",
        "        #print(\"locs : \", locs)\n",
        "        mask = (locs[\"category\"] != 9)\n",
        "        z = locs[\"z\"][mask]\n",
        "        # The z fit function will place all the localizations that are too\n",
        "        # far from the calibration curve into category 9.\n",
        "        if z.size != 0:\n",
        "          measured_z = numpy.concatenate((measured_z, z))\n",
        "          real_z = numpy.concatenate((real_z, numpy.ones(z.size)*z_offsets[fnum][1]))\n",
        "          # print('z :',z)\n",
        "          # print('z.size :', z.size)\n",
        "          # print(\"z_offsets :\",z_offsets[fnum])\n",
        "          if fnum%fnum_cnt == 0:\n",
        "            print(\"\\nframe number = \", fnum)\n",
        "            print('measured_z :', measured_z)\n",
        "            print(\"real_z : \", real_z)\n",
        "        else:\n",
        "          continue\n",
        "\n",
        "# Plot\n",
        "fig = pyplot.figure(figsize = (8,8))\n",
        "ax = fig.add_subplot(1,1,1)\n",
        "ax.scatter(real_z, measured_z, s = 30)\n",
        "ax.plot([-1.0,1.0],[-1.0,1.0], color = 'black', linewidth = 2)\n",
        "ax.axis(\"equal\")\n",
        "ax.axis([-0.5, 0.5, -0.5, 0.5])\n",
        "pyplot.title('Validation Results')\n",
        "pyplot.xlabel(\"Actual Z (um)\")\n",
        "pyplot.ylabel(\"Measured Z (um)\")"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "##################################################\n",
            "######## Let's Checking how well we did! #########\n",
            "##################################################\n",
            "\n",
            "At every 30 frames, we will see the value of measured_z & real_z\n",
            "\n",
            "\n",
            "frame number =  0\n",
            "measured_z : [-1.802 -1.811 -1.788 -1.79 ]\n",
            "real_z :  [-1.8 -1.8 -1.8 -1.8]\n",
            "\n",
            "frame number =  30\n",
            "measured_z : [-1.802 -1.811 -1.788 -1.79  -1.801 -1.817 -1.803 -1.794 -1.714 -1.715\n",
            " -1.703 -1.707 -1.715 -1.719 -1.696 -1.708 -1.728 -1.694 -1.693 -1.72\n",
            " -1.624 -1.596 -1.626 -1.634 -1.618 -1.619 -1.622 -1.633 -1.616 -1.615\n",
            " -1.613 -1.623 -1.522 -1.515 -1.531 -1.546 -1.539 -1.521 -1.533 -1.535\n",
            " -1.521 -1.512 -1.528 -1.522 -1.436 -1.422 -1.437 -1.447 -1.442 -1.426\n",
            " -1.427 -1.43  -1.425 -1.428 -1.426 -1.426 -1.355 -1.332 -1.36  -1.344\n",
            " -1.351 -1.343 -1.342 -1.324 -1.357 -1.345 -1.346 -1.341 -1.262 -1.259\n",
            " -1.28  -1.265 -1.262 -1.257 -1.255 -1.255 -1.251 -1.272 -1.258 -1.252\n",
            " -1.172 -1.174 -1.2   -1.173 -1.182 -1.177 -1.176 -1.174 -1.178 -1.168\n",
            " -1.155 -1.167 -1.1   -1.078 -1.082 -1.079 -1.096 -1.084 -1.083 -1.076\n",
            " -1.082 -1.081 -1.076 -1.074 -0.996 -1.009 -0.986 -1.002 -0.994 -0.996\n",
            " -0.996 -1.006 -0.99  -0.998 -0.977 -0.998 -0.896 -0.9   -0.888 -0.912\n",
            " -0.911 -0.907 -0.883 -0.91 ]\n",
            "real_z :  [-1.8  -1.8  -1.8  -1.8  -1.77 -1.77 -1.77 -1.77 -1.74 -1.74 -1.74 -1.74\n",
            " -1.71 -1.71 -1.71 -1.71 -1.68 -1.68 -1.68 -1.68 -1.65 -1.65 -1.65 -1.65\n",
            " -1.62 -1.62 -1.62 -1.62 -1.59 -1.59 -1.59 -1.59 -1.56 -1.56 -1.56 -1.56\n",
            " -1.53 -1.53 -1.53 -1.53 -1.5  -1.5  -1.5  -1.5  -1.47 -1.47 -1.47 -1.47\n",
            " -1.44 -1.44 -1.44 -1.44 -1.41 -1.41 -1.41 -1.41 -1.38 -1.38 -1.38 -1.38\n",
            " -1.35 -1.35 -1.35 -1.35 -1.32 -1.32 -1.32 -1.32 -1.29 -1.29 -1.29 -1.29\n",
            " -1.26 -1.26 -1.26 -1.26 -1.23 -1.23 -1.23 -1.23 -1.2  -1.2  -1.2  -1.2\n",
            " -1.17 -1.17 -1.17 -1.17 -1.14 -1.14 -1.14 -1.14 -1.11 -1.11 -1.11 -1.11\n",
            " -1.08 -1.08 -1.08 -1.08 -1.05 -1.05 -1.05 -1.05 -1.02 -1.02 -1.02 -1.02\n",
            " -0.99 -0.99 -0.99 -0.99 -0.96 -0.96 -0.96 -0.96 -0.93 -0.93 -0.93 -0.93\n",
            " -0.9  -0.9  -0.9  -0.9 ]\n",
            "\n",
            "frame number =  60\n",
            "measured_z : [-1.802 -1.811 -1.788 -1.79  -1.801 -1.817 -1.803 -1.794 -1.714 -1.715\n",
            " -1.703 -1.707 -1.715 -1.719 -1.696 -1.708 -1.728 -1.694 -1.693 -1.72\n",
            " -1.624 -1.596 -1.626 -1.634 -1.618 -1.619 -1.622 -1.633 -1.616 -1.615\n",
            " -1.613 -1.623 -1.522 -1.515 -1.531 -1.546 -1.539 -1.521 -1.533 -1.535\n",
            " -1.521 -1.512 -1.528 -1.522 -1.436 -1.422 -1.437 -1.447 -1.442 -1.426\n",
            " -1.427 -1.43  -1.425 -1.428 -1.426 -1.426 -1.355 -1.332 -1.36  -1.344\n",
            " -1.351 -1.343 -1.342 -1.324 -1.357 -1.345 -1.346 -1.341 -1.262 -1.259\n",
            " -1.28  -1.265 -1.262 -1.257 -1.255 -1.255 -1.251 -1.272 -1.258 -1.252\n",
            " -1.172 -1.174 -1.2   -1.173 -1.182 -1.177 -1.176 -1.174 -1.178 -1.168\n",
            " -1.155 -1.167 -1.1   -1.078 -1.082 -1.079 -1.096 -1.084 -1.083 -1.076\n",
            " -1.082 -1.081 -1.076 -1.074 -0.996 -1.009 -0.986 -1.002 -0.994 -0.996\n",
            " -0.996 -1.006 -0.99  -0.998 -0.977 -0.998 -0.896 -0.9   -0.888 -0.912\n",
            " -0.911 -0.907 -0.883 -0.91  -0.917 -0.895 -0.901 -0.905 -0.834 -0.813\n",
            " -0.824 -0.83  -0.821 -0.819 -0.818 -0.824 -0.82  -0.823 -0.808 -0.794\n",
            " -0.733 -0.723 -0.739 -0.731 -0.74  -0.73  -0.733 -0.736 -0.723 -0.714\n",
            " -0.722 -0.744 -0.629 -0.615 -0.617 -0.647 -0.64  -0.618 -0.64  -0.637\n",
            " -0.642 -0.609 -0.623 -0.614 -0.554 -0.54  -0.551 -0.552 -0.531 -0.542\n",
            " -0.562 -0.526 -0.524 -0.526 -0.55  -0.53  -0.442 -0.454 -0.445 -0.462\n",
            " -0.451 -0.449 -0.439 -0.429 -0.451 -0.457 -0.439 -0.443 -0.348 -0.369\n",
            " -0.353 -0.308 -0.345 -0.358 -0.334 -0.355 -0.357 -0.335 -0.344 -0.335\n",
            " -0.256 -0.26  -0.251 -0.257 -0.267 -0.244 -0.273 -0.259 -0.242 -0.243\n",
            " -0.24  -0.253 -0.175 -0.163 -0.158 -0.16  -0.186 -0.168 -0.146 -0.148\n",
            " -0.175 -0.157 -0.169 -0.166 -0.104 -0.072 -0.1   -0.075 -0.105 -0.071\n",
            " -0.106 -0.097 -0.089 -0.049 -0.068 -0.075  0.016  0.007  0.01  -0.007\n",
            " -0.009 -0.002  0.037  0.017]\n",
            "real_z :  [-1.8  -1.8  -1.8  -1.8  -1.77 -1.77 -1.77 -1.77 -1.74 -1.74 -1.74 -1.74\n",
            " -1.71 -1.71 -1.71 -1.71 -1.68 -1.68 -1.68 -1.68 -1.65 -1.65 -1.65 -1.65\n",
            " -1.62 -1.62 -1.62 -1.62 -1.59 -1.59 -1.59 -1.59 -1.56 -1.56 -1.56 -1.56\n",
            " -1.53 -1.53 -1.53 -1.53 -1.5  -1.5  -1.5  -1.5  -1.47 -1.47 -1.47 -1.47\n",
            " -1.44 -1.44 -1.44 -1.44 -1.41 -1.41 -1.41 -1.41 -1.38 -1.38 -1.38 -1.38\n",
            " -1.35 -1.35 -1.35 -1.35 -1.32 -1.32 -1.32 -1.32 -1.29 -1.29 -1.29 -1.29\n",
            " -1.26 -1.26 -1.26 -1.26 -1.23 -1.23 -1.23 -1.23 -1.2  -1.2  -1.2  -1.2\n",
            " -1.17 -1.17 -1.17 -1.17 -1.14 -1.14 -1.14 -1.14 -1.11 -1.11 -1.11 -1.11\n",
            " -1.08 -1.08 -1.08 -1.08 -1.05 -1.05 -1.05 -1.05 -1.02 -1.02 -1.02 -1.02\n",
            " -0.99 -0.99 -0.99 -0.99 -0.96 -0.96 -0.96 -0.96 -0.93 -0.93 -0.93 -0.93\n",
            " -0.9  -0.9  -0.9  -0.9  -0.87 -0.87 -0.87 -0.87 -0.84 -0.84 -0.84 -0.84\n",
            " -0.81 -0.81 -0.81 -0.81 -0.78 -0.78 -0.78 -0.78 -0.75 -0.75 -0.75 -0.75\n",
            " -0.72 -0.72 -0.72 -0.72 -0.69 -0.69 -0.69 -0.69 -0.66 -0.66 -0.66 -0.66\n",
            " -0.63 -0.63 -0.63 -0.63 -0.6  -0.6  -0.6  -0.6  -0.57 -0.57 -0.57 -0.57\n",
            " -0.54 -0.54 -0.54 -0.54 -0.51 -0.51 -0.51 -0.51 -0.48 -0.48 -0.48 -0.48\n",
            " -0.45 -0.45 -0.45 -0.45 -0.42 -0.42 -0.42 -0.42 -0.39 -0.39 -0.39 -0.39\n",
            " -0.36 -0.36 -0.36 -0.36 -0.33 -0.33 -0.33 -0.33 -0.3  -0.3  -0.3  -0.3\n",
            " -0.27 -0.27 -0.27 -0.27 -0.24 -0.24 -0.24 -0.24 -0.21 -0.21 -0.21 -0.21\n",
            " -0.18 -0.18 -0.18 -0.18 -0.15 -0.15 -0.15 -0.15 -0.12 -0.12 -0.12 -0.12\n",
            " -0.09 -0.09 -0.09 -0.09 -0.06 -0.06 -0.06 -0.06 -0.03 -0.03 -0.03 -0.03\n",
            "  0.    0.    0.    0.  ]\n",
            "\n",
            "frame number =  90\n",
            "measured_z : [-1.802 -1.811 -1.788 -1.79  -1.801 -1.817 -1.803 -1.794 -1.714 -1.715\n",
            " -1.703 -1.707 -1.715 -1.719 -1.696 -1.708 -1.728 -1.694 -1.693 -1.72\n",
            " -1.624 -1.596 -1.626 -1.634 -1.618 -1.619 -1.622 -1.633 -1.616 -1.615\n",
            " -1.613 -1.623 -1.522 -1.515 -1.531 -1.546 -1.539 -1.521 -1.533 -1.535\n",
            " -1.521 -1.512 -1.528 -1.522 -1.436 -1.422 -1.437 -1.447 -1.442 -1.426\n",
            " -1.427 -1.43  -1.425 -1.428 -1.426 -1.426 -1.355 -1.332 -1.36  -1.344\n",
            " -1.351 -1.343 -1.342 -1.324 -1.357 -1.345 -1.346 -1.341 -1.262 -1.259\n",
            " -1.28  -1.265 -1.262 -1.257 -1.255 -1.255 -1.251 -1.272 -1.258 -1.252\n",
            " -1.172 -1.174 -1.2   -1.173 -1.182 -1.177 -1.176 -1.174 -1.178 -1.168\n",
            " -1.155 -1.167 -1.1   -1.078 -1.082 -1.079 -1.096 -1.084 -1.083 -1.076\n",
            " -1.082 -1.081 -1.076 -1.074 -0.996 -1.009 -0.986 -1.002 -0.994 -0.996\n",
            " -0.996 -1.006 -0.99  -0.998 -0.977 -0.998 -0.896 -0.9   -0.888 -0.912\n",
            " -0.911 -0.907 -0.883 -0.91  -0.917 -0.895 -0.901 -0.905 -0.834 -0.813\n",
            " -0.824 -0.83  -0.821 -0.819 -0.818 -0.824 -0.82  -0.823 -0.808 -0.794\n",
            " -0.733 -0.723 -0.739 -0.731 -0.74  -0.73  -0.733 -0.736 -0.723 -0.714\n",
            " -0.722 -0.744 -0.629 -0.615 -0.617 -0.647 -0.64  -0.618 -0.64  -0.637\n",
            " -0.642 -0.609 -0.623 -0.614 -0.554 -0.54  -0.551 -0.552 -0.531 -0.542\n",
            " -0.562 -0.526 -0.524 -0.526 -0.55  -0.53  -0.442 -0.454 -0.445 -0.462\n",
            " -0.451 -0.449 -0.439 -0.429 -0.451 -0.457 -0.439 -0.443 -0.348 -0.369\n",
            " -0.353 -0.308 -0.345 -0.358 -0.334 -0.355 -0.357 -0.335 -0.344 -0.335\n",
            " -0.256 -0.26  -0.251 -0.257 -0.267 -0.244 -0.273 -0.259 -0.242 -0.243\n",
            " -0.24  -0.253 -0.175 -0.163 -0.158 -0.16  -0.186 -0.168 -0.146 -0.148\n",
            " -0.175 -0.157 -0.169 -0.166 -0.104 -0.072 -0.1   -0.075 -0.105 -0.071\n",
            " -0.106 -0.097 -0.089 -0.049 -0.068 -0.075  0.016  0.007  0.01  -0.007\n",
            " -0.009 -0.002  0.037  0.017  0.005  0.007  0.007  0.01   0.065  0.091\n",
            "  0.074  0.086  0.131  0.071  0.06   0.068  0.108  0.119  0.101  0.091\n",
            "  0.107  0.115  0.188  0.197  0.22   0.175  0.136  0.175  0.181  0.163\n",
            "  0.14   0.203  0.288  0.321  0.237  0.253  0.266  0.278  0.26   0.189\n",
            "  0.294  0.274  0.251  0.269  0.37   0.342  0.344  0.386  0.379  0.359\n",
            "  0.335  0.313  0.357  0.349  0.347  0.358  0.422  0.427  0.408  0.447\n",
            "  0.423  0.42   0.417  0.436  0.551  0.531  0.519  0.532  0.528  0.534\n",
            "  0.504  0.495  0.542  0.507  0.532  0.527  0.603  0.573  0.588  0.607\n",
            "  0.601  0.599  0.612  0.589  0.605  0.601  0.595  0.611  0.673  0.659\n",
            "  0.691  0.664  0.701  0.666  0.672  0.681  0.674  0.701  0.713  0.66\n",
            "  0.792  0.774  0.734  0.753  0.76   0.827  0.766  0.751  0.771  0.77\n",
            "  0.737  0.789  0.903  0.843  0.841  0.866  0.851  0.885  0.873  0.869\n",
            "  0.894  0.875  0.893  0.886]\n",
            "real_z :  [-1.8  -1.8  -1.8  -1.8  -1.77 -1.77 -1.77 -1.77 -1.74 -1.74 -1.74 -1.74\n",
            " -1.71 -1.71 -1.71 -1.71 -1.68 -1.68 -1.68 -1.68 -1.65 -1.65 -1.65 -1.65\n",
            " -1.62 -1.62 -1.62 -1.62 -1.59 -1.59 -1.59 -1.59 -1.56 -1.56 -1.56 -1.56\n",
            " -1.53 -1.53 -1.53 -1.53 -1.5  -1.5  -1.5  -1.5  -1.47 -1.47 -1.47 -1.47\n",
            " -1.44 -1.44 -1.44 -1.44 -1.41 -1.41 -1.41 -1.41 -1.38 -1.38 -1.38 -1.38\n",
            " -1.35 -1.35 -1.35 -1.35 -1.32 -1.32 -1.32 -1.32 -1.29 -1.29 -1.29 -1.29\n",
            " -1.26 -1.26 -1.26 -1.26 -1.23 -1.23 -1.23 -1.23 -1.2  -1.2  -1.2  -1.2\n",
            " -1.17 -1.17 -1.17 -1.17 -1.14 -1.14 -1.14 -1.14 -1.11 -1.11 -1.11 -1.11\n",
            " -1.08 -1.08 -1.08 -1.08 -1.05 -1.05 -1.05 -1.05 -1.02 -1.02 -1.02 -1.02\n",
            " -0.99 -0.99 -0.99 -0.99 -0.96 -0.96 -0.96 -0.96 -0.93 -0.93 -0.93 -0.93\n",
            " -0.9  -0.9  -0.9  -0.9  -0.87 -0.87 -0.87 -0.87 -0.84 -0.84 -0.84 -0.84\n",
            " -0.81 -0.81 -0.81 -0.81 -0.78 -0.78 -0.78 -0.78 -0.75 -0.75 -0.75 -0.75\n",
            " -0.72 -0.72 -0.72 -0.72 -0.69 -0.69 -0.69 -0.69 -0.66 -0.66 -0.66 -0.66\n",
            " -0.63 -0.63 -0.63 -0.63 -0.6  -0.6  -0.6  -0.6  -0.57 -0.57 -0.57 -0.57\n",
            " -0.54 -0.54 -0.54 -0.54 -0.51 -0.51 -0.51 -0.51 -0.48 -0.48 -0.48 -0.48\n",
            " -0.45 -0.45 -0.45 -0.45 -0.42 -0.42 -0.42 -0.42 -0.39 -0.39 -0.39 -0.39\n",
            " -0.36 -0.36 -0.36 -0.36 -0.33 -0.33 -0.33 -0.33 -0.3  -0.3  -0.3  -0.3\n",
            " -0.27 -0.27 -0.27 -0.27 -0.24 -0.24 -0.24 -0.24 -0.21 -0.21 -0.21 -0.21\n",
            " -0.18 -0.18 -0.18 -0.18 -0.15 -0.15 -0.15 -0.15 -0.12 -0.12 -0.12 -0.12\n",
            " -0.09 -0.09 -0.09 -0.09 -0.06 -0.06 -0.06 -0.06 -0.03 -0.03 -0.03 -0.03\n",
            "  0.    0.    0.    0.    0.03  0.03  0.03  0.03  0.06  0.06  0.06  0.06\n",
            "  0.09  0.09  0.09  0.09  0.12  0.12  0.12  0.12  0.15  0.15  0.15  0.15\n",
            "  0.18  0.18  0.18  0.18  0.21  0.21  0.21  0.21  0.24  0.24  0.24  0.24\n",
            "  0.27  0.27  0.27  0.27  0.3   0.3   0.3   0.3   0.33  0.33  0.33  0.33\n",
            "  0.36  0.36  0.36  0.36  0.39  0.39  0.39  0.39  0.42  0.42  0.42  0.42\n",
            "  0.45  0.45  0.45  0.45  0.48  0.48  0.48  0.48  0.51  0.51  0.51  0.51\n",
            "  0.54  0.54  0.54  0.54  0.57  0.57  0.57  0.57  0.6   0.6   0.6   0.6\n",
            "  0.63  0.63  0.63  0.63  0.66  0.66  0.66  0.66  0.69  0.69  0.69  0.69\n",
            "  0.72  0.72  0.72  0.72  0.75  0.75  0.75  0.75  0.78  0.78  0.78  0.78\n",
            "  0.81  0.81  0.81  0.81  0.84  0.84  0.84  0.84  0.87  0.87  0.87  0.87\n",
            "  0.9   0.9   0.9   0.9 ]\n",
            "\n",
            "frame number =  120\n",
            "measured_z : [-1.802 -1.811 -1.788 -1.79  -1.801 -1.817 -1.803 -1.794 -1.714 -1.715\n",
            " -1.703 -1.707 -1.715 -1.719 -1.696 -1.708 -1.728 -1.694 -1.693 -1.72\n",
            " -1.624 -1.596 -1.626 -1.634 -1.618 -1.619 -1.622 -1.633 -1.616 -1.615\n",
            " -1.613 -1.623 -1.522 -1.515 -1.531 -1.546 -1.539 -1.521 -1.533 -1.535\n",
            " -1.521 -1.512 -1.528 -1.522 -1.436 -1.422 -1.437 -1.447 -1.442 -1.426\n",
            " -1.427 -1.43  -1.425 -1.428 -1.426 -1.426 -1.355 -1.332 -1.36  -1.344\n",
            " -1.351 -1.343 -1.342 -1.324 -1.357 -1.345 -1.346 -1.341 -1.262 -1.259\n",
            " -1.28  -1.265 -1.262 -1.257 -1.255 -1.255 -1.251 -1.272 -1.258 -1.252\n",
            " -1.172 -1.174 -1.2   -1.173 -1.182 -1.177 -1.176 -1.174 -1.178 -1.168\n",
            " -1.155 -1.167 -1.1   -1.078 -1.082 -1.079 -1.096 -1.084 -1.083 -1.076\n",
            " -1.082 -1.081 -1.076 -1.074 -0.996 -1.009 -0.986 -1.002 -0.994 -0.996\n",
            " -0.996 -1.006 -0.99  -0.998 -0.977 -0.998 -0.896 -0.9   -0.888 -0.912\n",
            " -0.911 -0.907 -0.883 -0.91  -0.917 -0.895 -0.901 -0.905 -0.834 -0.813\n",
            " -0.824 -0.83  -0.821 -0.819 -0.818 -0.824 -0.82  -0.823 -0.808 -0.794\n",
            " -0.733 -0.723 -0.739 -0.731 -0.74  -0.73  -0.733 -0.736 -0.723 -0.714\n",
            " -0.722 -0.744 -0.629 -0.615 -0.617 -0.647 -0.64  -0.618 -0.64  -0.637\n",
            " -0.642 -0.609 -0.623 -0.614 -0.554 -0.54  -0.551 -0.552 -0.531 -0.542\n",
            " -0.562 -0.526 -0.524 -0.526 -0.55  -0.53  -0.442 -0.454 -0.445 -0.462\n",
            " -0.451 -0.449 -0.439 -0.429 -0.451 -0.457 -0.439 -0.443 -0.348 -0.369\n",
            " -0.353 -0.308 -0.345 -0.358 -0.334 -0.355 -0.357 -0.335 -0.344 -0.335\n",
            " -0.256 -0.26  -0.251 -0.257 -0.267 -0.244 -0.273 -0.259 -0.242 -0.243\n",
            " -0.24  -0.253 -0.175 -0.163 -0.158 -0.16  -0.186 -0.168 -0.146 -0.148\n",
            " -0.175 -0.157 -0.169 -0.166 -0.104 -0.072 -0.1   -0.075 -0.105 -0.071\n",
            " -0.106 -0.097 -0.089 -0.049 -0.068 -0.075  0.016  0.007  0.01  -0.007\n",
            " -0.009 -0.002  0.037  0.017  0.005  0.007  0.007  0.01   0.065  0.091\n",
            "  0.074  0.086  0.131  0.071  0.06   0.068  0.108  0.119  0.101  0.091\n",
            "  0.107  0.115  0.188  0.197  0.22   0.175  0.136  0.175  0.181  0.163\n",
            "  0.14   0.203  0.288  0.321  0.237  0.253  0.266  0.278  0.26   0.189\n",
            "  0.294  0.274  0.251  0.269  0.37   0.342  0.344  0.386  0.379  0.359\n",
            "  0.335  0.313  0.357  0.349  0.347  0.358  0.422  0.427  0.408  0.447\n",
            "  0.423  0.42   0.417  0.436  0.551  0.531  0.519  0.532  0.528  0.534\n",
            "  0.504  0.495  0.542  0.507  0.532  0.527  0.603  0.573  0.588  0.607\n",
            "  0.601  0.599  0.612  0.589  0.605  0.601  0.595  0.611  0.673  0.659\n",
            "  0.691  0.664  0.701  0.666  0.672  0.681  0.674  0.701  0.713  0.66\n",
            "  0.792  0.774  0.734  0.753  0.76   0.827  0.766  0.751  0.771  0.77\n",
            "  0.737  0.789  0.903  0.843  0.841  0.866  0.851  0.885  0.873  0.869\n",
            "  0.894  0.875  0.893  0.886  0.962  0.949  0.94   0.982  0.962  0.954\n",
            "  0.994  0.968  1.007  0.977  0.962  0.971  1.02   1.044  1.03   1.038\n",
            "  1.06   1.04   1.024  1.063  1.053  1.049  1.076  1.073  1.136  1.11\n",
            "  1.091  1.2    1.134  1.134  1.135  1.119  1.141  1.14   1.146  1.15\n",
            "  1.215  1.218  1.201  1.253  1.229  1.226  1.208  1.204  1.236  1.252\n",
            "  1.212  1.22   1.32   1.329  1.359  1.36   1.355  1.352  1.311  1.325\n",
            "  1.328  1.326  1.364  1.359  1.401  1.448  1.384  1.448  1.401  1.454\n",
            "  1.443  1.39   1.41   1.38   1.385  1.4    1.459  1.496  1.51   1.464\n",
            "  1.5    1.508  1.492  1.518  1.495  1.432  1.503  1.541  1.509  1.612\n",
            "  1.555  1.615  1.53   1.541  1.549  1.592  1.543  1.599  1.53   1.6\n",
            "  1.672  1.739  1.716  1.756  1.7    1.655  1.738  1.639  1.749  1.713\n",
            "  1.733  1.728  1.774  1.714  1.787  1.671  1.788  1.73   1.717  1.685\n",
            "  1.582  1.611  1.63   1.665]\n",
            "real_z :  [-1.8  -1.8  -1.8  -1.8  -1.77 -1.77 -1.77 -1.77 -1.74 -1.74 -1.74 -1.74\n",
            " -1.71 -1.71 -1.71 -1.71 -1.68 -1.68 -1.68 -1.68 -1.65 -1.65 -1.65 -1.65\n",
            " -1.62 -1.62 -1.62 -1.62 -1.59 -1.59 -1.59 -1.59 -1.56 -1.56 -1.56 -1.56\n",
            " -1.53 -1.53 -1.53 -1.53 -1.5  -1.5  -1.5  -1.5  -1.47 -1.47 -1.47 -1.47\n",
            " -1.44 -1.44 -1.44 -1.44 -1.41 -1.41 -1.41 -1.41 -1.38 -1.38 -1.38 -1.38\n",
            " -1.35 -1.35 -1.35 -1.35 -1.32 -1.32 -1.32 -1.32 -1.29 -1.29 -1.29 -1.29\n",
            " -1.26 -1.26 -1.26 -1.26 -1.23 -1.23 -1.23 -1.23 -1.2  -1.2  -1.2  -1.2\n",
            " -1.17 -1.17 -1.17 -1.17 -1.14 -1.14 -1.14 -1.14 -1.11 -1.11 -1.11 -1.11\n",
            " -1.08 -1.08 -1.08 -1.08 -1.05 -1.05 -1.05 -1.05 -1.02 -1.02 -1.02 -1.02\n",
            " -0.99 -0.99 -0.99 -0.99 -0.96 -0.96 -0.96 -0.96 -0.93 -0.93 -0.93 -0.93\n",
            " -0.9  -0.9  -0.9  -0.9  -0.87 -0.87 -0.87 -0.87 -0.84 -0.84 -0.84 -0.84\n",
            " -0.81 -0.81 -0.81 -0.81 -0.78 -0.78 -0.78 -0.78 -0.75 -0.75 -0.75 -0.75\n",
            " -0.72 -0.72 -0.72 -0.72 -0.69 -0.69 -0.69 -0.69 -0.66 -0.66 -0.66 -0.66\n",
            " -0.63 -0.63 -0.63 -0.63 -0.6  -0.6  -0.6  -0.6  -0.57 -0.57 -0.57 -0.57\n",
            " -0.54 -0.54 -0.54 -0.54 -0.51 -0.51 -0.51 -0.51 -0.48 -0.48 -0.48 -0.48\n",
            " -0.45 -0.45 -0.45 -0.45 -0.42 -0.42 -0.42 -0.42 -0.39 -0.39 -0.39 -0.39\n",
            " -0.36 -0.36 -0.36 -0.36 -0.33 -0.33 -0.33 -0.33 -0.3  -0.3  -0.3  -0.3\n",
            " -0.27 -0.27 -0.27 -0.27 -0.24 -0.24 -0.24 -0.24 -0.21 -0.21 -0.21 -0.21\n",
            " -0.18 -0.18 -0.18 -0.18 -0.15 -0.15 -0.15 -0.15 -0.12 -0.12 -0.12 -0.12\n",
            " -0.09 -0.09 -0.09 -0.09 -0.06 -0.06 -0.06 -0.06 -0.03 -0.03 -0.03 -0.03\n",
            "  0.    0.    0.    0.    0.03  0.03  0.03  0.03  0.06  0.06  0.06  0.06\n",
            "  0.09  0.09  0.09  0.09  0.12  0.12  0.12  0.12  0.15  0.15  0.15  0.15\n",
            "  0.18  0.18  0.18  0.18  0.21  0.21  0.21  0.21  0.24  0.24  0.24  0.24\n",
            "  0.27  0.27  0.27  0.27  0.3   0.3   0.3   0.3   0.33  0.33  0.33  0.33\n",
            "  0.36  0.36  0.36  0.36  0.39  0.39  0.39  0.39  0.42  0.42  0.42  0.42\n",
            "  0.45  0.45  0.45  0.45  0.48  0.48  0.48  0.48  0.51  0.51  0.51  0.51\n",
            "  0.54  0.54  0.54  0.54  0.57  0.57  0.57  0.57  0.6   0.6   0.6   0.6\n",
            "  0.63  0.63  0.63  0.63  0.66  0.66  0.66  0.66  0.69  0.69  0.69  0.69\n",
            "  0.72  0.72  0.72  0.72  0.75  0.75  0.75  0.75  0.78  0.78  0.78  0.78\n",
            "  0.81  0.81  0.81  0.81  0.84  0.84  0.84  0.84  0.87  0.87  0.87  0.87\n",
            "  0.9   0.9   0.9   0.9   0.93  0.93  0.93  0.93  0.96  0.96  0.96  0.96\n",
            "  0.99  0.99  0.99  0.99  1.02  1.02  1.02  1.02  1.05  1.05  1.05  1.05\n",
            "  1.08  1.08  1.08  1.08  1.11  1.11  1.11  1.11  1.14  1.14  1.14  1.14\n",
            "  1.17  1.17  1.17  1.17  1.2   1.2   1.2   1.2   1.23  1.23  1.23  1.23\n",
            "  1.26  1.26  1.26  1.26  1.29  1.29  1.29  1.29  1.32  1.32  1.32  1.32\n",
            "  1.35  1.35  1.35  1.35  1.38  1.38  1.38  1.38  1.41  1.41  1.41  1.41\n",
            "  1.44  1.44  1.44  1.44  1.47  1.47  1.47  1.47  1.5   1.5   1.5   1.5\n",
            "  1.53  1.53  1.53  1.53  1.56  1.56  1.56  1.56  1.59  1.59  1.59  1.59\n",
            "  1.62  1.62  1.62  1.62  1.65  1.65  1.65  1.65  1.68  1.68  1.68  1.68\n",
            "  1.71  1.71  1.71  1.71  1.74  1.74  1.74  1.74  1.77  1.77  1.77  1.77\n",
            "  1.8   1.8   1.8   1.8 ]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Measured Z (um)')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4OugLU9kmJb8"
      },
      "source": [
        "### ③ Applying CutOff and Analyze again. & Save New_Z txt file."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bbbE_0rPdxg4"
      },
      "source": [
        "\n",
        "Change the tolerance for the distance from the calibration curve and redo the Z fit."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Cjp1lrzzdxg5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6bca1fbe-13ab-4e51-84d1-82a6ead518b0"
      },
      "source": [
        "import shutil\n",
        "import storm_analysis.sa_utilities.fitz_c as fitz_c\n",
        "import storm_analysis.sa_utilities.std_analysis as std_ana\n",
        "\n",
        "cutoff_params = params.ParametersDAO().initFromFile(\"measure.xml\")\n",
        "\n",
        "[wx_params, wy_params] = cutoff_params.getWidthParams()\n",
        "[min_z, max_z] = cutoff_params.getZRange()\n",
        "\n",
        "# Make a copy of the .hdf5 file as this operation will change it in place.\n",
        "shutil.copyfile(\"measure.hdf5\", \"measure_copy.hdf5\")\n",
        "\n",
        "# If you want to change Cutoff coefficient, use this code line.\n",
        "  # cutoff_params.changeAttr(\"cutoff\", 0.1) \n",
        "\n",
        "print(\"Previous cutoff coeff is\", cutoff_params.getAttr(\"cutoff\"))\n",
        "cutoff_params.changeAttr(\"cutoff\", 5.0)\n",
        "print(\"Curent cutoff coeff is\", cutoff_params.getAttr(\"cutoff\"))\n",
        "\n",
        "# Re-fit z parameters.\n",
        "fitz_c.fitz(\"measure_copy.hdf5\", cutoff_params.getAttr(\"cutoff\"),\n",
        "            wx_params, wy_params, min_z, max_z, cutoff_params.getAttr(\"z_step\"))\n",
        "\n",
        "# Mark out of range peaks as category 9. The range is specified by the min_z and max_z parameters.\n",
        "std_ana.zCheck(\"measure_copy.hdf5\", cutoff_params)"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Previous cutoff coeff is 2.0\n",
            "Curent cutoff coeff is 5.0\n",
            "zfit pixel_size :  144.5\n",
            "   Processing frame 0\n",
            " frame 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9mxHDQ6Odxg5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 576
        },
        "outputId": "0c2abbf5-21fc-492b-b0eb-067b098f04ef"
      },
      "source": [
        "import storm_analysis.sa_library.sa_h5py as saH5Py\n",
        "import numpy\n",
        "\n",
        "\n",
        "# Create numpy arrays with the real and the measured z values.\n",
        "measured_z = numpy.array([])\n",
        "real_z = numpy.array([])\n",
        "\n",
        "with saH5Py.SAH5Reader(\"measure_copy.hdf5\") as h5:\n",
        "    for fnum, locs in h5.localizationsIterator(fields = [\"category\", \"z\"]):\n",
        "        mask = (locs[\"category\"] != 9)\n",
        "        z = locs[\"z\"][mask]\n",
        "        # The z fit function will place all the localizations that are too\n",
        "        # far from the calibration curve into category 9.\n",
        "        if z.size != 0:\n",
        "          measured_z = numpy.concatenate((measured_z, z))\n",
        "          real_z = numpy.concatenate((real_z, numpy.ones(z.size)*z_offsets[fnum][1]))\n",
        "        else:\n",
        "          continue\n",
        "  \n",
        "# Plot\n",
        "fig = pyplot.figure(figsize = (8,8))\n",
        "ax = fig.add_subplot(1,1,1)\n",
        "ax.scatter(real_z, measured_z, s = 30)\n",
        "ax.plot([-1.0,1.0],[-1.0,1.0], color = 'black', linewidth = 2)\n",
        "ax.axis(\"equal\")\n",
        "ax.axis([-0.5, 0.5, -0.5, 0.5])\n",
        "pyplot.title('Validation Results (cutoff applied)')\n",
        "pyplot.xlabel(\"Actual Z (um)\")\n",
        "pyplot.ylabel(\"Measured Z (um)\")"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Measured Z (um)')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "co2FUmjb0lay"
      },
      "source": [
        "Create [cut-offed] measured_Z txt file."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "E3rrUnY-0eKf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "90ef2d93-f9d9-4965-faae-4f5cd5473018"
      },
      "source": [
        "# Saving [cut-offed] measured_z value as txt file\n",
        "\n",
        "#float_formatter = \"{:.3f}\".format\n",
        "#numpy.set_printoptions(formatter ={'float_kind':float_formatter})\n",
        "\n",
        "valid = numpy.ones(measured_z.size)\n",
        "numpy.savetxt(\"measured_z.txt\", numpy.transpose(numpy.vstack((valid, measured_z))), fmt='%.3f')\n",
        "print(\"Saving succeeded.\")"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Saving succeeded.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gDs5HYDIZoTT"
      },
      "source": [
        "# SPLINER_MEASURE_PSF"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BJHcS8dfZjv6"
      },
      "source": [
        "### Prerequisites"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ml6fJ2vnZjv6"
      },
      "source": [
        "A text file containing the z-offset of each frame in the movie. This file contains two columns, the first is whether or not the data in this frame should be used (0 = No, 1 = Yes) and the second contains the z offset in microns."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XUybE5kApc1Q",
        "outputId": "e79a5afd-0e65-4b46-a99c-55601f177156"
      },
      "source": [
        "# Z offsets profile\n",
        "address_z_offsets = os.path.join(data_path, \"z_offsets.txt\")\n",
        "print(\"Location of z_offsets : \", address_z_offsets)\n",
        "z_offsets = numpy.loadtxt(address_z_offsets)\n",
        "print(z_offsets)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Location of z_offsets :  /content/gdrive/My Drive/data/20210326/z_offsets.txt\n",
            "[[ 1.   -1.8 ]\n",
            " [ 1.   -1.77]\n",
            " [ 1.   -1.74]\n",
            " [ 1.   -1.71]\n",
            " [ 1.   -1.68]\n",
            " [ 1.   -1.65]\n",
            " [ 1.   -1.62]\n",
            " [ 1.   -1.59]\n",
            " [ 1.   -1.56]\n",
            " [ 1.   -1.53]\n",
            " [ 1.   -1.5 ]\n",
            " [ 1.   -1.47]\n",
            " [ 1.   -1.44]\n",
            " [ 1.   -1.41]\n",
            " [ 1.   -1.38]\n",
            " [ 1.   -1.35]\n",
            " [ 1.   -1.32]\n",
            " [ 1.   -1.29]\n",
            " [ 1.   -1.26]\n",
            " [ 1.   -1.23]\n",
            " [ 1.   -1.2 ]\n",
            " [ 1.   -1.17]\n",
            " [ 1.   -1.14]\n",
            " [ 1.   -1.11]\n",
            " [ 1.   -1.08]\n",
            " [ 1.   -1.05]\n",
            " [ 1.   -1.02]\n",
            " [ 1.   -0.99]\n",
            " [ 1.   -0.96]\n",
            " [ 1.   -0.93]\n",
            " [ 1.   -0.9 ]\n",
            " [ 1.   -0.87]\n",
            " [ 1.   -0.84]\n",
            " [ 1.   -0.81]\n",
            " [ 1.   -0.78]\n",
            " [ 1.   -0.75]\n",
            " [ 1.   -0.72]\n",
            " [ 1.   -0.69]\n",
            " [ 1.   -0.66]\n",
            " [ 1.   -0.63]\n",
            " [ 1.   -0.6 ]\n",
            " [ 1.   -0.57]\n",
            " [ 1.   -0.54]\n",
            " [ 1.   -0.51]\n",
            " [ 1.   -0.48]\n",
            " [ 1.   -0.45]\n",
            " [ 1.   -0.42]\n",
            " [ 1.   -0.39]\n",
            " [ 1.   -0.36]\n",
            " [ 1.   -0.33]\n",
            " [ 1.   -0.3 ]\n",
            " [ 1.   -0.27]\n",
            " [ 1.   -0.24]\n",
            " [ 1.   -0.21]\n",
            " [ 1.   -0.18]\n",
            " [ 1.   -0.15]\n",
            " [ 1.   -0.12]\n",
            " [ 1.   -0.09]\n",
            " [ 1.   -0.06]\n",
            " [ 1.   -0.03]\n",
            " [ 1.    0.  ]\n",
            " [ 1.    0.03]\n",
            " [ 1.    0.06]\n",
            " [ 1.    0.09]\n",
            " [ 1.    0.12]\n",
            " [ 1.    0.15]\n",
            " [ 1.    0.18]\n",
            " [ 1.    0.21]\n",
            " [ 1.    0.24]\n",
            " [ 1.    0.27]\n",
            " [ 1.    0.3 ]\n",
            " [ 1.    0.33]\n",
            " [ 1.    0.36]\n",
            " [ 1.    0.39]\n",
            " [ 1.    0.42]\n",
            " [ 1.    0.45]\n",
            " [ 1.    0.48]\n",
            " [ 1.    0.51]\n",
            " [ 1.    0.54]\n",
            " [ 1.    0.57]\n",
            " [ 1.    0.6 ]\n",
            " [ 1.    0.63]\n",
            " [ 1.    0.66]\n",
            " [ 1.    0.69]\n",
            " [ 1.    0.72]\n",
            " [ 1.    0.75]\n",
            " [ 1.    0.78]\n",
            " [ 1.    0.81]\n",
            " [ 1.    0.84]\n",
            " [ 1.    0.87]\n",
            " [ 1.    0.9 ]\n",
            " [ 1.    0.93]\n",
            " [ 1.    0.96]\n",
            " [ 1.    0.99]\n",
            " [ 1.    1.02]\n",
            " [ 1.    1.05]\n",
            " [ 1.    1.08]\n",
            " [ 1.    1.11]\n",
            " [ 1.    1.14]\n",
            " [ 1.    1.17]\n",
            " [ 1.    1.2 ]\n",
            " [ 1.    1.23]\n",
            " [ 1.    1.26]\n",
            " [ 1.    1.29]\n",
            " [ 1.    1.32]\n",
            " [ 1.    1.35]\n",
            " [ 1.    1.38]\n",
            " [ 1.    1.41]\n",
            " [ 1.    1.44]\n",
            " [ 1.    1.47]\n",
            " [ 1.    1.5 ]\n",
            " [ 1.    1.53]\n",
            " [ 1.    1.56]\n",
            " [ 1.    1.59]\n",
            " [ 1.    1.62]\n",
            " [ 1.    1.65]\n",
            " [ 1.    1.68]\n",
            " [ 1.    1.71]\n",
            " [ 1.    1.74]\n",
            " [ 1.    1.77]\n",
            " [ 1.    1.8 ]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J0aqOnXiZjv7"
      },
      "source": [
        "A text file containing the approximate bead locations. One way to create this is by using the `visualizer` tool in the `storm_analysis.visualizer` folder. Another alternative might be using ImageJ. Here we are just going to use generated file."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "daD_pSb_ptmX",
        "outputId": "728f254d-a711-4438-cf26-bb785e59ebfc"
      },
      "source": [
        "# Bead Locations\n",
        "address_bead_locs = os.path.join(data_path, \"bead_locs.txt\")\n",
        "print(\"Location of bead_locs : \", address_bead_locs)\n",
        "\n",
        "bead_locs = numpy.loadtxt(address_bead_locs)\n",
        "print(bead_locs)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Location of bead_locs :  /content/gdrive/My Drive/data/20210326/bead_locs.txt\n",
            "[[ 23.  24.]\n",
            " [ 68.  24.]\n",
            " [113.  24.]\n",
            " [158.  24.]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kDQqRsbZZjv7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 209
        },
        "outputId": "59993646-2aee-40ff-c6a9-657412d91ae0"
      },
      "source": [
        "# Check that the specified positions align with the actual bead locations.\n",
        "#\n",
        "import storm_analysis.jupyter_examples.overlay_image as overlay_image\n",
        "overlay_image.overlayImageBeads(tif_file, address_bead_locs, 40)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SyWp1vKjZjv7"
      },
      "source": [
        "### PSF Measurement"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cl9_c2atZjv8"
      },
      "source": [
        "Now that we have the 3 files that we need we can measure the PSF. You want to use an AOI that is a bit larger then the size you plan to use when creating the spline file. \n",
        "\n",
        "Notes:\n",
        "\n",
        "* The AOI size is the 1/2 size so using 12 pixels means that the final PSF will be 24 x 24 pixels.\n",
        "* The pixel size in this simulation was 100nm\n",
        "* The simulated movie covered a Z range of +-0.6um, so we're using exactly that. For real data you might want to use a Z range that is slightly smaller than range you scanned.\n",
        "* The Z step size is 50nm, which is fine enough for most applications, assuming a high NA objective with a depth of field on the order of 1um.\n",
        "\n",
        "Also: \n",
        "\n",
        "If you think that your coverslip might not be completely flat, or that your bead locations are not sufficiently accurate then you can set the `refine` parameter to `True`. With this setting each PSF will be aligned to the average of the remaining PSF using a correlation metric. You may see some warning messages like `Warning: Desired error not necessarily achieved due to precision loss.`, it is usually safe to ignore these."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vf2P7cwlZjv8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "83aa9403-19d4-4a4a-a5e7-2104dbf2b9b7"
      },
      "source": [
        "import storm_analysis.spliner.measure_psf_beads as measure_psf_beads\n",
        "\n",
        "measure_psf_beads.measurePSFBeads(tif_file, \n",
        "                                  address_z_offsets,\n",
        "                                  address_bead_locs,\n",
        "                                  \"joon-spliner_psf.psf\",\n",
        "                                  aoi_size = 14, # 12 # aoi_size - 1/2 the AOI size in pixels.\n",
        "                                  pixel_size = 0.1445, #0.1\n",
        "                                  refine = True,\n",
        "                                  z_range = 1.5, #0.6\n",
        "                                  z_step = 0.03) #0.03\n",
        "                                  "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Refining PSF alignment.\n",
            "0 0 112452.71782214133 [-0.0034196   0.00285976  0.00043804]\n",
            "0 1 110024.1707318307 [-0.00100371  0.0030761   0.00085964]\n",
            "0 2 107646.75918014326 [ 0.00647982  0.00236714 -0.00122509]\n",
            "0 3 105629.64038949035 [-0.0090614  -0.00897914  0.00106695]\n",
            "Quality score: 1.000192\n",
            "\n",
            "1 0 98999.51676939694 [-4.80196146e-04  2.01401022e-04  7.34535940e-05]\n",
            "1 1 99444.47358443936 [-0.00046557  0.00043005  0.00034766]\n",
            "1 2 99143.50805499 [ 0.00130191  0.00036681 -0.00034024]\n",
            "1 3 99397.032744735 [-0.00092995 -0.00100019  0.00013759]\n",
            "Quality score: 1.000210\n",
            "\n",
            "2 0 98999.69349572038 [-3.77839872e-04  1.54158807e-04  6.18206977e-05]\n",
            "2 1 99444.64279381395 [-0.00031086  0.00027779  0.00029111]\n",
            "2 2 99144.56929874767 [ 0.00340895  0.00098695 -0.00107945]\n",
            "2 3 99397.47145961138 [-0.0006421  -0.00080294  0.00011431]\n",
            "Quality score: 1.000234\n",
            "\n",
            "3 0 98999.97864879586 [-2.75253525e-04  1.69316660e-04  5.68833145e-05]\n",
            "3 1 99444.90123214453 [-0.00012407  0.00034227  0.00036653]\n",
            "3 2 99144.86588618348 [ 0.0009509   0.00029262 -0.00040555]\n",
            "3 3 99397.60716576038 [-4.90836049e-04 -6.32401662e-04  9.93038353e-05]\n",
            "Quality score: 1.000243\n",
            "\n",
            "z plane 0 has 4 samples\n",
            "z plane 1 has 4 samples\n",
            "z plane 2 has 4 samples\n",
            "z plane 3 has 4 samples\n",
            "z plane 4 has 4 samples\n",
            "z plane 5 has 4 samples\n",
            "z plane 6 has 4 samples\n",
            "z plane 7 has 4 samples\n",
            "z plane 8 has 4 samples\n",
            "z plane 9 has 4 samples\n",
            "z plane 10 has 4 samples\n",
            "z plane 11 has 4 samples\n",
            "z plane 12 has 4 samples\n",
            "z plane 13 has 4 samples\n",
            "z plane 14 has 4 samples\n",
            "z plane 15 has 4 samples\n",
            "z plane 16 has 4 samples\n",
            "z plane 17 has 4 samples\n",
            "z plane 18 has 4 samples\n",
            "z plane 19 has 4 samples\n",
            "z plane 20 has 4 samples\n",
            "z plane 21 has 4 samples\n",
            "z plane 22 has 4 samples\n",
            "z plane 23 has 4 samples\n",
            "z plane 24 has 4 samples\n",
            "z plane 25 has 4 samples\n",
            "z plane 26 has 4 samples\n",
            "z plane 27 has 4 samples\n",
            "z plane 28 has 4 samples\n",
            "z plane 29 has 4 samples\n",
            "z plane 30 has 4 samples\n",
            "z plane 31 has 4 samples\n",
            "z plane 32 has 4 samples\n",
            "z plane 33 has 4 samples\n",
            "z plane 34 has 4 samples\n",
            "z plane 35 has 4 samples\n",
            "z plane 36 has 4 samples\n",
            "z plane 37 has 4 samples\n",
            "z plane 38 has 4 samples\n",
            "z plane 39 has 4 samples\n",
            "z plane 40 has 4 samples\n",
            "z plane 41 has 4 samples\n",
            "z plane 42 has 4 samples\n",
            "z plane 43 has 4 samples\n",
            "z plane 44 has 4 samples\n",
            "z plane 45 has 4 samples\n",
            "z plane 46 has 4 samples\n",
            "z plane 47 has 4 samples\n",
            "z plane 48 has 4 samples\n",
            "z plane 49 has 4 samples\n",
            "z plane 50 has 4 samples\n",
            "z plane 51 has 4 samples\n",
            "z plane 52 has 4 samples\n",
            "z plane 53 has 4 samples\n",
            "z plane 54 has 4 samples\n",
            "z plane 55 has 4 samples\n",
            "z plane 56 has 4 samples\n",
            "z plane 57 has 4 samples\n",
            "z plane 58 has 4 samples\n",
            "z plane 59 has 4 samples\n",
            "z plane 60 has 4 samples\n",
            "z plane 61 has 4 samples\n",
            "z plane 62 has 4 samples\n",
            "z plane 63 has 4 samples\n",
            "z plane 64 has 4 samples\n",
            "z plane 65 has 4 samples\n",
            "z plane 66 has 4 samples\n",
            "z plane 67 has 4 samples\n",
            "z plane 68 has 4 samples\n",
            "z plane 69 has 4 samples\n",
            "z plane 70 has 4 samples\n",
            "z plane 71 has 4 samples\n",
            "z plane 72 has 4 samples\n",
            "z plane 73 has 4 samples\n",
            "z plane 74 has 4 samples\n",
            "z plane 75 has 4 samples\n",
            "z plane 76 has 4 samples\n",
            "z plane 77 has 4 samples\n",
            "z plane 78 has 4 samples\n",
            "z plane 79 has 4 samples\n",
            "z plane 80 has 4 samples\n",
            "z plane 81 has 4 samples\n",
            "z plane 82 has 4 samples\n",
            "z plane 83 has 4 samples\n",
            "z plane 84 has 4 samples\n",
            "z plane 85 has 4 samples\n",
            "z plane 86 has 4 samples\n",
            "z plane 87 has 4 samples\n",
            "z plane 88 has 4 samples\n",
            "z plane 89 has 4 samples\n",
            "z plane 90 has 4 samples\n",
            "z plane 91 has 4 samples\n",
            "z plane 92 has 4 samples\n",
            "z plane 93 has 4 samples\n",
            "z plane 94 has 4 samples\n",
            "z plane 95 has 4 samples\n",
            "z plane 96 has 4 samples\n",
            "z plane 97 has 4 samples\n",
            "z plane 98 has 4 samples\n",
            "z plane 99 has 4 samples\n",
            "z plane 100 has 4 samples\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eSAmI6_9Zjv8"
      },
      "source": [
        "### Visualizing the measured PSF"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zM1u_qjcZjv8"
      },
      "source": [
        "Make some images of the measured PSF."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ng8PE787Zjv8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "outputId": "0be805b6-1060-43cb-a45c-67bcbff2cce9"
      },
      "source": [
        "import storm_analysis.jupyter_examples.psf_images as psfImages\n",
        "\n",
        "psfImages.psfImages(\"joon-spliner_psf.psf\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "PSF shape: (101, 28, 28)\n",
            "pixel size: 0.144um\n",
            "zmin, zmax: -1500.0nm, 1500.0nm\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 864x288 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Plots are in microns\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WjfnWj1DZjv9"
      },
      "source": [
        "Print some properties of the PSF."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t2Na2AChZjv9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7c1e1d4d-e9bd-4216-8d82-054960857e59"
      },
      "source": [
        "import storm_analysis.spliner.print_psf as printPSF\n",
        "\n",
        "printPSF.printPSF(\"joon-spliner_psf.psf\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "pixel_size 0.1445\n",
            "psf shape (101, 28, 28)\n",
            "type 3D\n",
            "version 2.0\n",
            "zmax 1500.0\n",
            "zmin -1500.0\n",
            "zvals [-1500.0, -1470.0, -1440.0, -1410.0, -1380.0, -1350.0, -1320.0, -1290.0, -1260.0, -1230.0, -1200.0, -1170.0, -1140.0, -1110.0, -1080.0, -1050.0, -1020.0, -990.0, -960.0, -930.0, -900.0, -870.0, -840.0, -810.0, -780.0, -750.0, -720.0, -690.0, -660.0, -630.0, -600.0, -570.0, -540.0, -510.0, -480.0, -450.0, -420.0, -390.0, -360.0, -330.0, -300.0, -270.0, -240.0, -210.0, -180.0, -150.0, -120.0, -90.0, -60.0, -30.0, 0.0, 30.0, 60.0, 90.0, 120.0, 150.0, 180.0, 210.0, 240.0, 270.0, 300.0, 330.0, 360.0, 390.0, 420.0, 450.0, 480.0, 510.0, 540.0, 570.0, 600.0, 630.0, 660.0, 690.0, 720.0, 750.0, 780.0, 810.0, 840.0, 870.0, 900.0, 930.0, 960.0, 990.0, 1020.0, 1050.0, 1080.0, 1110.0, 1140.0, 1170.0, 1200.0, 1230.0, 1260.0, 1290.0, 1320.0, 1350.0, 1380.0, 1410.0, 1440.0, 1470.0, 1500.0]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CvgxvLxEZjv9"
      },
      "source": [
        "Now you can use `storm_analysis.spliner.psf_to_spline` to convert the PSF into a spline that `Spliner` can use for SMLM movie analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4TQiibQZcY8A",
        "outputId": "ef09089d-29f0-46cf-cc86-91065661aca4"
      },
      "source": [
        "import storm_analysis.spliner.psf_to_spline as psfspline\n",
        "\n",
        "psfspline.psfToSpline(\"joon-spliner_psf.psf\",\"spline\",10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Generating 3D spline.\n",
            "Generating XY splines.\n",
            "Generating fitting spline.\n",
            "Calculating spline coefficients.\n",
            "Calculating spline values.\n",
            "  0 of 19\n",
            "  1 of 19\n",
            "  2 of 19\n",
            "  3 of 19\n",
            "  4 of 19\n",
            "  5 of 19\n",
            "  6 of 19\n",
            "  7 of 19\n",
            "  8 of 19\n",
            "  9 of 19\n",
            "  10 of 19\n",
            "  11 of 19\n",
            "  12 of 19\n",
            "  13 of 19\n",
            "  14 of 19\n",
            "  15 of 19\n",
            "  16 of 19\n",
            "  17 of 19\n",
            "  18 of 19\n",
            "  19 of 19\n",
            "  cx 0.00 19\n",
            "  cx 0.33 19\n",
            "  cx 0.67 19\n",
            "  cx 1.00 19\n",
            "  cx 1.33 19\n",
            "  cx 1.67 19\n",
            "  cx 2.00 19\n",
            "  cx 2.33 19\n",
            "  cx 2.67 19\n",
            "  cx 3.00 19\n",
            "  cx 3.33 19\n",
            "  cx 3.67 19\n",
            "  cx 4.00 19\n",
            "  cx 4.33 19\n",
            "  cx 4.67 19\n",
            "  cx 5.00 19\n",
            "  cx 5.33 19\n",
            "  cx 5.67 19\n",
            "  cx 6.00 19\n",
            "  cx 6.33 19\n",
            "  cx 6.67 19\n",
            "  cx 7.00 19\n",
            "  cx 7.33 19\n",
            "  cx 7.67 19\n",
            "  cx 8.00 19\n",
            "  cx 8.33 19\n",
            "  cx 8.67 19\n",
            "  cx 9.00 19\n",
            "  cx 9.33 19\n",
            "  cx 9.67 19\n",
            "  cx 10.00 19\n",
            "  cx 10.33 19\n",
            "  cx 10.67 19\n",
            "  cx 11.00 19\n",
            "  cx 11.33 19\n",
            "  cx 11.67 19\n",
            "  cx 12.00 19\n",
            "  cx 12.33 19\n",
            "  cx 12.67 19\n",
            "  cx 13.00 19\n",
            "  cx 13.33 19\n",
            "  cx 13.67 19\n",
            "  cx 14.00 19\n",
            "  cx 14.33 19\n",
            "  cx 14.67 19\n",
            "  cx 15.00 19\n",
            "  cx 15.33 19\n",
            "  cx 15.67 19\n",
            "  cx 16.00 19\n",
            "  cx 16.33 19\n",
            "  cx 16.67 19\n",
            "  cx 17.00 19\n",
            "  cx 17.33 19\n",
            "  cx 17.67 19\n",
            "  cx 18.00 19\n",
            "  cx 18.33 19\n",
            "  cx 18.67 19\n",
            "  cx 19.00 19\n",
            "Calculating spline coefficients.\n",
            "  0 of 18\n",
            "  1 of 18\n",
            "  2 of 18\n",
            "  3 of 18\n",
            "  4 of 18\n",
            "  5 of 18\n",
            "  6 of 18\n",
            "  7 of 18\n",
            "  8 of 18\n",
            "  9 of 18\n",
            "  10 of 18\n",
            "  11 of 18\n",
            "  12 of 18\n",
            "  13 of 18\n",
            "  14 of 18\n",
            "  15 of 18\n",
            "  16 of 18\n",
            "  17 of 18\n",
            "  18 of 18\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "y9DFQpBIZjv9"
      },
      "source": [
        "Reference printPSF.printPSF() results:\n",
        "\n",
        "pixel_size 0.1\n",
        "psf shape (25, 24, 24)\n",
        "type 3D\n",
        "version 2.0\n",
        "zmax 600.0\n",
        "zmin -600.0\n",
        "zvals [-600.0, -550.0, -500.0, -450.0, -400.0, -350.0, -300.0, -250.0, -200.0, -150.0, -100.0, -50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0]"
      ]
    }
  ]
}